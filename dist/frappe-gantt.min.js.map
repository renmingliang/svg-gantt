{"version":3,"file":"frappe-gantt.min.js","sources":["../src/date_utils.js","../src/svg_utils.js","../src/bar.js","../src/arrow.js","../src/popup.js","../src/index.js"],"sourcesContent":["const YEAR = \"year\";\nconst MONTH = \"month\";\nconst DAY = \"day\";\nconst HOUR = \"hour\";\nconst MINUTE = \"minute\";\nconst SECOND = \"second\";\nconst MILLISECOND = \"millisecond\";\n\nconst SHORTENED = {\n  January: \"Jan\",\n  February: \"Feb\",\n  March: \"Mar\",\n  April: \"Apr\",\n  May: \"May\",\n  June: \"Jun\",\n  July: \"Jul\",\n  August: \"Aug\",\n  September: \"Sep\",\n  October: \"Oct\",\n  November: \"Nov\",\n  December: \"Dec\"\n};\n\nexport default {\n  parse_duration(duration) {\n    const regex = /([0-9])+(y|m|d|h|min|s|ms)/gm;\n    const matches = regex.exec(duration);\n\n    if (matches !== null) {\n      if (matches[2] === \"y\") {\n        return { duration: parseInt(matches[1]), scale: `year` };\n      } else if (matches[2] === \"m\") {\n        return { duration: parseInt(matches[1]), scale: `month` };\n      } else if (matches[2] === \"d\") {\n        return { duration: parseInt(matches[1]), scale: `day` };\n      } else if (matches[2] === \"h\") {\n        return { duration: parseInt(matches[1]), scale: `hour` };\n      } else if (matches[2] === \"min\") {\n        return { duration: parseInt(matches[1]), scale: `minute` };\n      } else if (matches[2] === \"s\") {\n        return { duration: parseInt(matches[1]), scale: `second` };\n      } else if (matches[2] === \"ms\") {\n        return { duration: parseInt(matches[1]), scale: `millisecond` };\n      }\n    }\n  },\n  parse(date, date_separator = \"-\", time_separator = /[.:]/) {\n    if (date instanceof Date) {\n      return date;\n    }\n    if (typeof date === \"string\") {\n      let date_parts, time_parts;\n      const parts = date.split(\" \");\n      date_parts = parts[0]\n        .split(date_separator)\n        .map((val) => parseInt(val, 10));\n      time_parts = parts[1] && parts[1].split(time_separator);\n\n      // month is 0 indexed\n      date_parts[1] = date_parts[1] ? date_parts[1] - 1 : 0;\n\n      let vals = date_parts;\n\n      if (time_parts && time_parts.length) {\n        if (time_parts.length === 4) {\n          time_parts[3] = \"0.\" + time_parts[3];\n          time_parts[3] = parseFloat(time_parts[3]) * 1000;\n        }\n        vals = vals.concat(time_parts);\n      }\n      return new Date(...vals);\n    }\n  },\n\n  to_string(date, with_time = false) {\n    if (!(date instanceof Date)) {\n      throw new TypeError(\"Invalid argument type\");\n    }\n    const vals = this.get_date_values(date).map((val, i) => {\n      if (i === 1) {\n        // add 1 for month\n        val = val + 1;\n      }\n\n      if (i === 6) {\n        return padStart(val + \"\", 3, \"0\");\n      }\n\n      return padStart(val + \"\", 2, \"0\");\n    });\n    const date_string = `${vals[0]}-${vals[1]}-${vals[2]}`;\n    const time_string = `${vals[3]}:${vals[4]}:${vals[5]}.${vals[6]}`;\n\n    return date_string + (with_time ? \" \" + time_string : \"\");\n  },\n\n  format(date, format_string = \"YYYY-MM-DD HH:mm:ss.SSS\", lang = \"en\") {\n    const dateTimeFormat = new Intl.DateTimeFormat(lang, {\n      month: \"long\",\n    });\n    const month_name = dateTimeFormat.format(date);\n    const month_name_capitalized =\n      month_name.charAt(0).toUpperCase() + month_name.slice(1);\n\n    const values = this.get_date_values(date).map((d) => padStart(d, 2, 0));\n    const format_map = {\n      YYYY: values[0],\n      MM: padStart(+values[1] + 1, 2, 0),\n      DD: values[2],\n      HH: values[3],\n      mm: values[4],\n      ss: values[5],\n      SSS: values[6],\n      D: values[2],\n      MMMM: month_name_capitalized,\n      MMM: SHORTENED[month_name_capitalized],\n    };\n\n    let str = format_string;\n    const formatted_values = [];\n\n    Object.keys(format_map)\n      .sort((a, b) => b.length - a.length) // big string first\n      .forEach((key) => {\n        if (str.includes(key)) {\n          str = str.replaceAll(key, `$${formatted_values.length}`);\n          formatted_values.push(format_map[key]);\n        }\n      });\n\n    formatted_values.forEach((value, i) => {\n      str = str.replaceAll(`$${i}`, value);\n    });\n\n    return str;\n  },\n\n  diff(date_a, date_b, scale = DAY) {\n    let milliseconds, seconds, hours, minutes, days, months, years;\n\n    milliseconds = date_a - date_b;\n    seconds = milliseconds / 1000;\n    minutes = seconds / 60;\n    hours = minutes / 60;\n    days = hours / 24;\n    months = days / 30;\n    years = months / 12;\n\n    if (!scale.endsWith(\"s\")) {\n      scale += \"s\";\n    }\n\n    return Math.floor(\n      {\n        milliseconds,\n        seconds,\n        minutes,\n        hours,\n        days,\n        months,\n        years,\n      }[scale],\n    );\n  },\n\n  today() {\n    const vals = this.get_date_values(new Date()).slice(0, 3);\n    return new Date(...vals);\n  },\n\n  now() {\n    return new Date();\n  },\n\n  add(date, qty, scale) {\n    qty = parseInt(qty, 10);\n    const vals = [\n      date.getFullYear() + (scale === YEAR ? qty : 0),\n      date.getMonth() + (scale === MONTH ? qty : 0),\n      date.getDate() + (scale === DAY ? qty : 0),\n      date.getHours() + (scale === HOUR ? qty : 0),\n      date.getMinutes() + (scale === MINUTE ? qty : 0),\n      date.getSeconds() + (scale === SECOND ? qty : 0),\n      date.getMilliseconds() + (scale === MILLISECOND ? qty : 0),\n    ];\n    return new Date(...vals);\n  },\n\n  start_of(date, scale) {\n    const scores = {\n      [YEAR]: 6,\n      [MONTH]: 5,\n      [DAY]: 4,\n      [HOUR]: 3,\n      [MINUTE]: 2,\n      [SECOND]: 1,\n      [MILLISECOND]: 0,\n    };\n\n    function should_reset(_scale) {\n      const max_score = scores[scale];\n      return scores[_scale] <= max_score;\n    }\n\n    const vals = [\n      date.getFullYear(),\n      should_reset(YEAR) ? 0 : date.getMonth(),\n      should_reset(MONTH) ? 1 : date.getDate(),\n      should_reset(DAY) ? 0 : date.getHours(),\n      should_reset(HOUR) ? 0 : date.getMinutes(),\n      should_reset(MINUTE) ? 0 : date.getSeconds(),\n      should_reset(SECOND) ? 0 : date.getMilliseconds(),\n    ];\n\n    return new Date(...vals);\n  },\n\n  clone(date) {\n    return new Date(...this.get_date_values(date));\n  },\n\n  get_date_values(date) {\n    return [\n      date.getFullYear(),\n      date.getMonth(),\n      date.getDate(),\n      date.getHours(),\n      date.getMinutes(),\n      date.getSeconds(),\n      date.getMilliseconds(),\n    ];\n  },\n\n  get_days_in_month(date) {\n    const no_of_days = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n\n    const month = date.getMonth();\n\n    if (month !== 1) {\n      return no_of_days[month];\n    }\n\n    // Feb\n    const year = date.getFullYear();\n    if ((year % 4 === 0 && year % 100 != 0) || year % 400 === 0) {\n      return 29;\n    }\n    return 28;\n  },\n};\n\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/padStart\nfunction padStart(str, targetLength, padString) {\n  str = str + \"\";\n  targetLength = targetLength >> 0;\n  padString = String(typeof padString !== \"undefined\" ? padString : \" \");\n  if (str.length > targetLength) {\n    return String(str);\n  } else {\n    targetLength = targetLength - str.length;\n    if (targetLength > padString.length) {\n      padString += padString.repeat(targetLength / padString.length);\n    }\n    return padString.slice(0, targetLength) + String(str);\n  }\n}\n","export function $(expr, con) {\n  return typeof expr === \"string\"\n    ? (con || document).querySelector(expr)\n    : expr || null;\n}\n\nexport function createSVG(tag, attrs) {\n  const elem = document.createElementNS(\"http://www.w3.org/2000/svg\", tag);\n  for (let attr in attrs) {\n    if (attr === \"append_to\") {\n      const parent = attrs.append_to;\n      parent.appendChild(elem);\n    } else if (attr === \"innerHTML\") {\n      elem.innerHTML = attrs.innerHTML;\n    } else if (attr === 'clipPath') {\n      elem.setAttribute('clip-path', 'url(#' + attrs[attr] + ')');\n    } else {\n      elem.setAttribute(attr, attrs[attr]);\n    }\n  }\n  return elem;\n}\n\nexport function animateSVG(svgElement, attr, from, to) {\n  const animatedSvgElement = getAnimationElement(svgElement, attr, from, to);\n\n  if (animatedSvgElement === svgElement) {\n    // triggered 2nd time programmatically\n    // trigger artificial click event\n    const event = document.createEvent(\"HTMLEvents\");\n    event.initEvent(\"click\", true, true);\n    event.eventName = \"click\";\n    animatedSvgElement.dispatchEvent(event);\n  }\n}\n\nfunction getAnimationElement(\n  svgElement,\n  attr,\n  from,\n  to,\n  dur = \"0.4s\",\n  begin = \"0.1s\",\n) {\n  const animEl = svgElement.querySelector(\"animate\");\n  if (animEl) {\n    $.attr(animEl, {\n      attributeName: attr,\n      from,\n      to,\n      dur,\n      begin: \"click + \" + begin, // artificial click\n    });\n    return svgElement;\n  }\n\n  const animateElement = createSVG(\"animate\", {\n    attributeName: attr,\n    from,\n    to,\n    dur,\n    begin,\n    calcMode: \"spline\",\n    values: from + \";\" + to,\n    keyTimes: \"0; 1\",\n    keySplines: cubic_bezier(\"ease-out\"),\n  });\n  svgElement.appendChild(animateElement);\n\n  return svgElement;\n}\n\nfunction cubic_bezier(name) {\n  return {\n    ease: \".25 .1 .25 1\",\n    linear: \"0 0 1 1\",\n    \"ease-in\": \".42 0 1 1\",\n    \"ease-out\": \"0 0 .58 1\",\n    \"ease-in-out\": \".42 0 .58 1\",\n  }[name];\n}\n\n$.on = (element, event, selector, callback) => {\n  if (!callback) {\n    callback = selector;\n    $.bind(element, event, callback);\n  } else {\n    $.delegate(element, event, selector, callback);\n  }\n};\n\n$.off = (element, event, handler) => {\n  element.removeEventListener(event, handler);\n};\n\n$.bind = (element, event, callback) => {\n  event.split(/\\s+/).forEach(function (event) {\n    element.addEventListener(event, callback);\n  });\n};\n\n$.delegate = (element, event, selector, callback) => {\n  element.addEventListener(event, function (e) {\n    const delegatedTarget = e.target.closest(selector);\n    if (delegatedTarget) {\n      e.delegatedTarget = delegatedTarget;\n      callback.call(this, e, delegatedTarget);\n    }\n  });\n};\n\n$.closest = (selector, element) => {\n  if (!element) return null;\n\n  if (element.matches(selector)) {\n    return element;\n  }\n\n  return $.closest(selector, element.parentNode);\n};\n\n$.attr = (element, attr, value) => {\n  if (!value && typeof attr === \"string\") {\n    return element.getAttribute(attr);\n  }\n\n  if (typeof attr === \"object\") {\n    for (let key in attr) {\n      $.attr(element, key, attr[key]);\n    }\n    return;\n  }\n\n  element.setAttribute(attr, value);\n};\n","import date_utils from \"./date_utils\";\nimport { $, createSVG, animateSVG } from \"./svg_utils\";\n\nexport default class Bar {\n  constructor(gantt, task) {\n    this.set_defaults(gantt, task);\n    this.prepare();\n    this.draw();\n    this.bind();\n  }\n\n  set_defaults(gantt, task) {\n    this.action_completed = false;\n    this.gantt = gantt;\n    this.task = task;\n  }\n\n  prepare() {\n    this.prepare_values();\n    this.prepare_helpers();\n  }\n\n  prepare_values() {\n    this.empty = this.task.empty;\n    this.invalid = this.task.invalid;\n    this.height = this.gantt.options.bar_height;\n    this.image_size = this.height - 5;\n    this.compute_x();\n    this.compute_y();\n    this.compute_duration();\n    this.corner_radius = this.gantt.options.bar_corner_radius;\n    this.width = this.gantt.options.column_width * this.duration;\n    this.progress_width =\n      this.gantt.options.column_width *\n      this.duration *\n      (this.task.progress / 100) || 0;\n    this.group = createSVG(\"g\", {\n      class: \"bar-wrapper\" + (this.task.custom_class ? \" \" + this.task.custom_class : \"\") + (this.task.important ? ' important' : ''),\n      \"data-id\": this.task.id,\n    });\n    this.bar_group = createSVG(\"g\", {\n      class: \"bar-group\",\n      append_to: this.group,\n    });\n    this.handle_group = createSVG(\"g\", {\n      class: \"handle-group\",\n      append_to: this.group,\n    });\n  }\n\n  prepare_helpers() {\n    SVGElement.prototype.getX = function () {\n      return +this.getAttribute(\"x\");\n    };\n    SVGElement.prototype.getY = function () {\n      return +this.getAttribute(\"y\");\n    };\n    SVGElement.prototype.getWidth = function () {\n      return +this.getAttribute(\"width\");\n    };\n    SVGElement.prototype.getHeight = function () {\n      return +this.getAttribute(\"height\");\n    };\n    SVGElement.prototype.getEndX = function () {\n      return this.getX() + this.getWidth();\n    };\n  }\n\n  prepare_expected_progress_values() {\n    this.compute_expected_progress();\n    this.expected_progress_width =\n      this.gantt.options.column_width *\n      this.duration *\n      (this.expected_progress / 100) || 0;\n  }\n\n  draw() {\n    if (this.empty) return;\n    this.draw_bar();\n    this.draw_progress_bar();\n    if (this.gantt.options.show_expected_progress) {\n      this.prepare_expected_progress_values();\n      this.draw_expected_progress_bar();\n    }\n    this.draw_label();\n    this.draw_resize_handles();\n\n    if (this.task.thumbnail) {\n      this.draw_thumbnail();\n    }\n  }\n\n  draw_bar() {\n    this.$bar = createSVG(\"rect\", {\n      x: this.x,\n      y: this.y,\n      width: this.width,\n      height: this.height,\n      rx: this.corner_radius,\n      ry: this.corner_radius,\n      class: \"bar\",\n      append_to: this.bar_group,\n    });\n\n    animateSVG(this.$bar, \"width\", 0, this.width);\n\n    if (this.invalid) {\n      this.$bar.classList.add(\"bar-invalid\");\n    }\n  }\n\n  draw_expected_progress_bar() {\n    if (this.invalid) return;\n    this.$expected_bar_progress = createSVG(\"rect\", {\n      x: this.x,\n      y: this.y,\n      width: this.expected_progress_width,\n      height: this.height,\n      rx: this.corner_radius,\n      ry: this.corner_radius,\n      class: \"bar-expected-progress\",\n      append_to: this.bar_group,\n    });\n\n    animateSVG(\n      this.$expected_bar_progress,\n      \"width\",\n      0,\n      this.expected_progress_width,\n    );\n  }\n\n  draw_progress_bar() {\n    if (this.invalid) return;\n    this.$bar_progress = createSVG(\"rect\", {\n      x: this.x,\n      y: this.y,\n      width: this.progress_width,\n      height: this.height,\n      rx: this.corner_radius,\n      ry: this.corner_radius,\n      class: \"bar-progress\",\n      append_to: this.bar_group,\n    });\n    const x = (date_utils.diff(this.task._start, this.gantt.gantt_start, 'hour') /\n      this.gantt.options.step) *\n      this.gantt.options.column_width;\n\n    let $date_highlight = document.createElement(\"div\");\n    $date_highlight.id = `${this.task.id}-highlight`\n    $date_highlight.classList.add('date-highlight')\n    $date_highlight.style.height = this.height * 0.8 + 'px'\n    $date_highlight.style.width = this.width + 'px'\n    $date_highlight.style.top = this.gantt.options.header_height - 25 + 'px'\n    $date_highlight.style.left = x + 'px'\n    this.$date_highlight = $date_highlight\n    this.gantt.$lower_header.prepend($date_highlight)\n\n    animateSVG(this.$bar_progress, \"width\", 0, this.progress_width);\n  }\n\n  draw_label() {\n    let x_coord = this.x + this.$bar.getWidth() / 2;\n\n    if (this.task.thumbnail) {\n      x_coord = this.x + 10 + this.image_size + 5;\n    }\n\n    createSVG(\"text\", {\n      x: x_coord,\n      y: this.y + this.height / 2,\n      innerHTML: this.task.name,\n      class: \"bar-label\",\n      append_to: this.bar_group,\n    });\n    // labels get BBox in the next tick\n    requestAnimationFrame(() => this.update_label_position());\n  }\n  draw_thumbnail() {\n    let x_offset = 10, y_offset = 2;\n    let defs, clipPath;\n\n    defs = createSVG('defs', {\n      append_to: this.bar_group\n    });\n\n    createSVG('rect', {\n      id: 'rect_' + this.task.id,\n      x: this.x + x_offset,\n      y: this.y + y_offset,\n      width: this.image_size,\n      height: this.image_size,\n      rx: '15',\n      class: 'img_mask',\n      append_to: defs\n    });\n\n    clipPath = createSVG('clipPath', {\n      id: 'clip_' + this.task.id,\n      append_to: defs\n    });\n\n    createSVG('use', {\n      href: '#rect_' + this.task.id,\n      append_to: clipPath\n    });\n\n    createSVG('image', {\n      x: this.x + x_offset,\n      y: this.y + y_offset,\n      width: this.image_size,\n      height: this.image_size,\n      class: 'bar-img',\n      href: this.task.thumbnail,\n      clipPath: 'clip_' + this.task.id,\n      append_to: this.bar_group\n    });\n  }\n\n  draw_resize_handles() {\n    if (this.invalid || this.gantt.options.readonly) return;\n\n    const bar = this.$bar;\n    const handle_width = this.gantt.options.handle_width;\n\n    createSVG(\"rect\", {\n      x: bar.getX() + bar.getWidth() - handle_width - 1,\n      y: bar.getY() + 1,\n      width: handle_width,\n      height: this.height - 2,\n      rx: this.corner_radius,\n      ry: this.corner_radius,\n      class: \"handle right\",\n      append_to: this.handle_group,\n    });\n\n    createSVG(\"rect\", {\n      x: bar.getX() + 1,\n      y: bar.getY() + 1,\n      width: handle_width,\n      height: this.height - 2,\n      rx: this.corner_radius,\n      ry: this.corner_radius,\n      class: \"handle left\",\n      append_to: this.handle_group,\n    });\n\n    this.$handle_progress = createSVG(\"polygon\", {\n      points: this.get_progress_polygon_points().join(\",\"),\n      class: \"handle progress\",\n      append_to: this.handle_group,\n    });\n  }\n\n  get_progress_polygon_points() {\n    const bar_progress = this.$bar_progress;\n    let icon_width = 10;\n    let icon_height = 15;\n\n    return [\n      bar_progress.getEndX() - icon_width / 2,\n      bar_progress.getY() + bar_progress.getHeight() / 2,\n\n      bar_progress.getEndX(),\n      bar_progress.getY() + bar_progress.getHeight() / 2 - icon_height / 2,\n\n      bar_progress.getEndX() + icon_width / 2,\n      bar_progress.getY() + bar_progress.getHeight() / 2,\n\n      bar_progress.getEndX(),\n      bar_progress.getY() + bar_progress.getHeight() / 2 + icon_height / 2,\n\n      bar_progress.getEndX() - icon_width / 2,\n      bar_progress.getY() + bar_progress.getHeight() / 2,\n    ];\n  }\n\n  bind() {\n    if (this.invalid) return;\n    this.setup_click_event();\n  }\n\n  setup_click_event() {\n    let task_id = this.task.id;\n    $.on(this.group, \"mouseover\", (e) => {\n      this.gantt.trigger_event(\"hover\", [this.task, e.screenX, e.screenY, e])\n    })\n\n    let timeout;\n    $.on(this.group, \"mouseenter\", (e) => timeout = setTimeout(() => {\n      this.show_popup(e.offsetX)\n      document.querySelector(`#${task_id}-highlight`).style.display = 'block'\n    }, 200))\n\n    $.on(this.group, \"mouseleave\", () => {\n      clearTimeout(timeout)\n      this.gantt.popup?.hide?.()\n      document.querySelector(`#${task_id}-highlight`).style.display = 'none'\n    })\n\n\n    $.on(this.group, this.gantt.options.popup_trigger, () => {\n      this.gantt.trigger_event(\"click\", [this.task]);\n    });\n\n    $.on(this.group, \"dblclick\", (e) => {\n      if (this.action_completed) {\n        // just finished a move action, wait for a few seconds\n        return;\n      }\n\n      this.gantt.trigger_event(\"double_click\", [this.task]);\n    });\n  }\n\n  show_popup(x) {\n    if (this.gantt.bar_being_dragged) return;\n\n    const start_date = date_utils.format(\n      this.task._start,\n      \"MMM D\",\n      this.gantt.options.language,\n    );\n    const end_date = date_utils.format(\n      date_utils.add(this.task._end, -1, \"second\"),\n      \"MMM D\",\n      this.gantt.options.language,\n    );\n    const subtitle = `${start_date} -  ${end_date}<br/>Progress: ${this.task.progress}`;\n\n    this.gantt.show_popup({\n      x,\n      target_element: this.$bar,\n      title: this.task.name,\n      subtitle: subtitle,\n      task: this.task,\n    });\n  }\n\n  update_bar_position({ x = null, width = null }) {\n    const bar = this.$bar;\n    if (x) {\n      if (this.gantt.options.drag_limit_child) {\n        // get all x values of parent task\n        const xs = this.task.dependencies.map((dep) => {\n          return this.gantt.get_bar(dep).$bar.getX();\n        });\n        // child task must not go before parent\n        const valid_x = xs.reduce((_, curr) => {\n          return x >= curr;\n        }, x);\n\n        if (!valid_x) {\n          width = null;\n          return;\n        }\n      }\n\n      this.update_attr(bar, \"x\", x);\n      this.$date_highlight.style.left = x + 'px'\n    }\n    if (width) {\n      this.update_attr(bar, \"width\", width);\n      this.$date_highlight.style.width = width + 'px'\n    }\n    this.update_label_position();\n    this.update_handle_position();\n    if (this.gantt.options.show_expected_progress) {\n      this.date_changed();\n      this.compute_duration();\n      this.update_expected_progressbar_position();\n    }\n    this.update_progressbar_position();\n    this.update_arrow_position();\n  }\n\n  update_label_position_on_horizontal_scroll({ x, sx }) {\n    const container = document.querySelector('.gantt-container');\n    const label = this.group.querySelector('.bar-label');\n    const img = this.group.querySelector('.bar-img') || '';\n    const img_mask = this.bar_group.querySelector('.img_mask') || '';\n\n    let barWidthLimit = this.$bar.getX() + this.$bar.getWidth();\n    let newLabelX = label.getX() + x;\n    let newImgX = img && img.getX() + x || 0;\n    let imgWidth = img && img.getBBox().width + 7 || 7;\n    let labelEndX = newLabelX + label.getBBox().width + 7;\n    let viewportCentral = sx + container.clientWidth / 2;\n\n    if (label.classList.contains('big')) return;\n\n    if (labelEndX < barWidthLimit && x > 0 && labelEndX < viewportCentral) {\n      label.setAttribute('x', newLabelX);\n      if (img) {\n        img.setAttribute('x', newImgX);\n        img_mask.setAttribute('x', newImgX);\n      }\n    } else if ((newLabelX - imgWidth) > this.$bar.getX() && x < 0 && labelEndX > viewportCentral) {\n      label.setAttribute('x', newLabelX);\n      if (img) {\n        img.setAttribute('x', newImgX);\n        img_mask.setAttribute('x', newImgX);\n      }\n\n    }\n  }\n\n  date_changed() {\n    let changed = false;\n    const { new_start_date, new_end_date } = this.compute_start_end_date();\n\n    if (Number(this.task._start) !== Number(new_start_date)) {\n      changed = true;\n      this.task._start = new_start_date;\n    }\n\n    if (Number(this.task._end) !== Number(new_end_date)) {\n      changed = true;\n      this.task._end = new_end_date;\n    }\n\n    if (!changed) return;\n\n    this.gantt.trigger_event(\"date_change\", [\n      this.task,\n      new_start_date,\n      date_utils.add(new_end_date, -1, \"second\"),\n    ]);\n  }\n\n  progress_changed() {\n    const new_progress = this.compute_progress();\n    this.task.progress = new_progress;\n    this.gantt.trigger_event(\"progress_change\", [this.task, new_progress]);\n  }\n\n  set_action_completed() {\n    this.action_completed = true;\n    setTimeout(() => (this.action_completed = false), 1000);\n  }\n\n  compute_start_end_date() {\n    const bar = this.$bar;\n    const x_in_units = bar.getX() / this.gantt.options.column_width;\n    const new_start_date = date_utils.add(\n      this.gantt.gantt_start,\n      x_in_units * this.gantt.options.step,\n      \"hour\",\n    );\n    const width_in_units = bar.getWidth() / this.gantt.options.column_width;\n    const new_end_date = date_utils.add(\n      new_start_date,\n      width_in_units * this.gantt.options.step,\n      \"hour\",\n    );\n\n    return { new_start_date, new_end_date };\n  }\n\n  compute_progress() {\n    const progress =\n      (this.$bar_progress.getWidth() / this.$bar.getWidth()) * 100;\n    return parseInt(progress, 10);\n  }\n\n  compute_expected_progress() {\n    this.expected_progress =\n      date_utils.diff(date_utils.today(), this.task._start, \"hour\") /\n      this.gantt.options.step;\n    // 未到当前日期\n    if (this.expected_progress < 0) {\n      this.expected_progress = 0;\n    }\n    this.expected_progress =\n      ((this.expected_progress < this.duration\n        ? this.expected_progress\n        : this.duration) *\n        100) /\n      this.duration;\n  }\n\n  compute_x() {\n    const { step, column_width } = this.gantt.options;\n    const task_start = this.task._start;\n    const gantt_start = this.gantt.gantt_start;\n\n    const diff = date_utils.diff(task_start, gantt_start, \"hour\");\n    let x = (diff / step) * column_width;\n\n    if (this.gantt.view_is(\"Month\")) {\n      const diff = date_utils.diff(task_start, gantt_start, \"day\");\n      x = (diff * column_width) / 30;\n    }\n    this.x = x;\n  }\n\n  compute_y() {\n    this.y =\n      this.gantt.options.header_height +\n      this.gantt.options.padding / 2 +\n      this.task._index * (this.height + this.gantt.options.padding);\n  }\n\n  compute_duration() {\n    this.duration =\n      date_utils.diff(this.task._end, this.task._start, \"hour\") /\n      this.gantt.options.step;\n  }\n\n  get_snap_position(dx) {\n    let odx = dx,\n      rem,\n      position;\n\n    if (this.gantt.view_is(\"Week\")) {\n      rem = dx % (this.gantt.options.column_width / 7);\n      position =\n        odx -\n        rem +\n        (rem < this.gantt.options.column_width / 14\n          ? 0\n          : this.gantt.options.column_width / 7);\n    } else if (this.gantt.view_is(\"Month\")) {\n      rem = dx % (this.gantt.options.column_width / 30);\n      position =\n        odx -\n        rem +\n        (rem < this.gantt.options.column_width / 60\n          ? 0\n          : this.gantt.options.column_width / 30);\n    } else {\n      rem = dx % this.gantt.options.column_width;\n      position =\n        odx -\n        rem +\n        (rem < this.gantt.options.column_width / 2\n          ? 0\n          : this.gantt.options.column_width);\n    }\n    return position;\n  }\n\n  update_attr(element, attr, value) {\n    value = +value;\n    if (!isNaN(value)) {\n      element.setAttribute(attr, value);\n    }\n    return element;\n  }\n\n  update_expected_progressbar_position() {\n    if (this.invalid) return;\n    this.$expected_bar_progress.setAttribute(\"x\", this.$bar.getX());\n    this.compute_expected_progress();\n    this.$expected_bar_progress.setAttribute(\n      \"width\",\n      this.gantt.options.column_width *\n      this.duration *\n      (this.expected_progress / 100) || 0,\n    );\n  }\n\n  update_progressbar_position() {\n    if (this.invalid || this.gantt.options.readonly) return;\n    this.$bar_progress.setAttribute(\"x\", this.$bar.getX());\n    this.$bar_progress.setAttribute(\n      \"width\",\n      this.$bar.getWidth() * (this.task.progress / 100),\n    );\n  }\n\n  update_label_position() {\n    const img_mask = this.bar_group.querySelector('.img_mask') || '';\n    const bar = this.$bar,\n      label = this.group.querySelector(\".bar-label\"),\n      img = this.group.querySelector('.bar-img');\n\n\n    let padding = 10;\n    let x_offset_label_img = this.image_size + 5;\n    const labelWidth = label.getBBox().width\n    const barWidth = bar.getWidth()\n    if (labelWidth > barWidth) {\n      label.classList.add(\"big\");\n      if (img) {\n        img.setAttribute('x', bar.getX() + barWidth + padding);\n        img_mask.setAttribute('x', bar.getX() + barWidth + padding);\n        label.setAttribute('x', bar.getX() + barWidth + x_offset_label_img);\n      } else {\n        label.setAttribute('x', bar.getX() + barWidth + padding);\n      }\n    } else {\n      label.classList.remove(\"big\");\n      if (img) {\n        img.setAttribute('x', bar.getX() + padding);\n        img_mask.setAttribute('x', bar.getX() + padding);\n        label.setAttribute('x', bar.getX() + padding + x_offset_label_img);\n      } else {\n        label.setAttribute('x', bar.getX() + barWidth / 2 - labelWidth / 2);\n      }\n    }\n  }\n\n  update_handle_position() {\n    if (this.invalid || this.gantt.options.readonly) return;\n    const bar = this.$bar;\n    const handle_width = this.gantt.options.handle_width;\n\n    this.handle_group\n      .querySelector(\".handle.left\")\n      .setAttribute(\"x\", bar.getX() + 1);\n    this.handle_group\n      .querySelector(\".handle.right\")\n      .setAttribute(\"x\", bar.getEndX() - handle_width - 1);\n    const handle = this.group.querySelector(\".handle.progress\");\n    handle && handle.setAttribute(\"points\", this.get_progress_polygon_points());\n  }\n\n  update_arrow_position() {\n    this.arrows = this.arrows || [];\n    for (let arrow of this.arrows) {\n      arrow.update();\n    }\n  }\n}\n\nfunction isFunction(functionToCheck) {\n  let getType = {};\n  return (\n    functionToCheck &&\n    getType.toString.call(functionToCheck) === \"[object Function]\"\n  );\n}\n","import { createSVG } from \"./svg_utils\";\n\nexport default class Arrow {\n  constructor(gantt, from_task, to_task) {\n    this.gantt = gantt;\n    this.from_task = from_task;\n    this.to_task = to_task;\n\n    this.calculate_path();\n    this.draw();\n    this.drawInner();\n  }\n\n  calculate_path() {\n    if (this.to_task.empty) return;\n\n    const rowHeight = this.gantt.options.bar_height + this.gantt.options.padding;\n    const taskHeight = this.gantt.options.bar_height;\n    const arrowCurve = this.gantt.options.arrow_curve;\n    const arrowIndent = this.gantt.options.column_width / 2;\n    const taskFrom = this.from_task;\n    const taskTo = this.to_task;\n\n    const taskFromX2 = taskFrom.$bar.getEndX();\n    const taskFromY1 = taskFrom.$bar.getY();\n    const taskToX1 = taskTo.$bar.getX();\n    const taskToY1 = taskTo.$bar.getY();\n\n    const indexCompare = taskFrom.task._index > taskTo.task._index ? -1 : 1;\n    const taskToEndPosition = taskToY1 + taskHeight / 2;\n    const taskFromEndPosition = taskFromX2 + arrowIndent * 2;\n\n    const taskFromHorizontalOffsetValue =\n        taskFromEndPosition < taskToX1 ? '' : `H ${taskToX1 - arrowIndent}`;\n    const taskToHorizontalOffsetValue =\n        taskFromEndPosition > taskToX1\n            ? arrowIndent\n            : taskToX1 - taskFromX2 - arrowIndent;\n\n    const path = `M ${taskFromX2} ${taskFromY1 + taskHeight / 2}\n    h ${arrowIndent}\n    v ${(indexCompare * rowHeight) / 2}\n    ${taskFromHorizontalOffsetValue}\n    V ${taskToEndPosition}\n    h ${taskToHorizontalOffsetValue}`;\n\n    const trianglePoints = `${taskToX1},${taskToEndPosition}\n    ${taskToX1 - arrowCurve},${taskToEndPosition - arrowCurve}\n    ${taskToX1 - arrowCurve},${taskToEndPosition + arrowCurve}`;\n\n    this.path = path;\n\n    this.points = trianglePoints;\n  }\n\n  draw() {\n    this.element = createSVG(\"g\", {\n      \"data-from\": this.from_task.task.id,\n      \"data-to\": this.to_task.task.id,\n    });\n  }\n\n  drawInner() {\n    if (this.to_task.empty) return;\n\n    this.svgPath = createSVG(\"path\", {\n      d: this.path,\n      fill: \"none\",\n      append_to: this.element\n    });\n    this.svgPolygon = createSVG(\"polygon\", {\n      points: this.points,\n      append_to: this.element,\n    });\n  }\n\n  update() {\n    if (this.to_task.empty) return;\n\n    this.calculate_path();\n    this.svgPath.setAttribute(\"d\", this.path);\n    this.svgPolygon.setAttribute(\"points\", this.points);\n  }\n}\n","export default class Popup {\n  constructor(parent, custom_html) {\n    this.parent = parent;\n    this.custom_html = custom_html;\n    this.make();\n  }\n\n  make() {\n    this.parent.innerHTML = `\n            <div class=\"title\"></div>\n            <div class=\"subtitle\"></div>\n            <div class=\"pointer\"></div>\n        `;\n\n    this.hide();\n\n    this.title = this.parent.querySelector(\".title\");\n    this.subtitle = this.parent.querySelector(\".subtitle\");\n    this.pointer = this.parent.querySelector(\".pointer\");\n  }\n\n  show(options) {\n    if (!options.target_element) {\n      throw new Error(\"target_element is required to show popup\");\n    }\n    const target_element = options.target_element;\n\n    if (this.custom_html) {\n      let html = this.custom_html(options.task);\n      html += '<div class=\"pointer\"></div>';\n      this.parent.innerHTML = html;\n      this.pointer = this.parent.querySelector(\".pointer\");\n    } else {\n      // set data\n      this.title.innerHTML = options.title;\n      this.subtitle.innerHTML = options.subtitle;\n    }\n\n    // set position\n    let position_meta;\n    if (target_element instanceof HTMLElement) {\n      position_meta = target_element.getBoundingClientRect();\n    } else if (target_element instanceof SVGElement) {\n      position_meta = options.target_element.getBBox();\n    }\n\n    this.parent.style.left = options.x - this.parent.clientWidth / 2 + \"px\";\n    this.parent.style.top = position_meta.y + position_meta.height + 10 + \"px\";\n\n    this.pointer.style.left = this.parent.clientWidth / 2 + \"px\";\n    this.pointer.style.top = \"-15px\";\n\n    // show\n    this.parent.style.opacity = 1;\n  }\n\n  hide() {\n    this.parent.style.opacity = 0;\n    this.parent.style.left = 0;\n  }\n}\n","import date_utils from \"./date_utils\";\nimport { $, createSVG } from \"./svg_utils\";\nimport Bar from \"./bar\";\nimport Arrow from \"./arrow\";\nimport Popup from \"./popup\";\n\nimport \"./gantt.scss\";\n\nconst VIEW_MODE = {\n  HOUR: \"Hour\",\n  QUARTER_DAY: \"Quarter Day\",\n  HALF_DAY: \"Half Day\",\n  DAY: \"Day\",\n  WEEK: \"Week\",\n  MONTH: \"Month\",\n  YEAR: \"Year\",\n};\n\nconst VIEW_MODE_PADDING = {\n  HOUR: [\"7d\", \"7d\"],\n  QUARTER_DAY: [\"7d\", \"7d\"],\n  HALF_DAY: [\"7d\", \"7d\"],\n  DAY: [\"1m\", \"1m\"],\n  WEEK: [\"1m\", \"1m\"],\n  MONTH: [\"1m\", \"1m\"],\n  YEAR: [\"2y\", \"2y\"],\n};\n\nconst DEFAULT_OPTIONS = {\n  header_height: 65,\n  // column_width: 30,\n  // step: 24,\n  bar_height: 30,\n  bar_corner_radius: 3,\n  arrow_curve: 5,\n  handle_width: 8,\n  padding: 18,\n  view_modes: [...Object.values(VIEW_MODE)],\n  view_mode: VIEW_MODE.DAY,\n  date_format: \"YYYY-MM-DD\",\n  popup_trigger: \"click\",\n  show_expected_progress: false,\n  drag_sync_child: false,\n  drag_limit_child: false,\n  popup: null,\n  language: \"en\",\n  readonly: false,\n  highlight_weekend: true,\n  scroll_to: 'start',\n  lines: 'both',\n  auto_move_label: true,\n  today_button: true,\n  view_mode_select: false,\n};\n\nexport default class Gantt {\n  constructor(wrapper, tasks, options) {\n    this.setup_wrapper(wrapper);\n    this.setup_options(options);\n    this.setup_tasks(tasks);\n    // initialize with default view mode\n    this.change_view_mode();\n    this.bind_events();\n  }\n\n  setup_wrapper(element) {\n    let svg_element, wrapper_element;\n\n    // CSS Selector is passed\n    if (typeof element === \"string\") {\n      element = document.querySelector(element);\n    }\n\n    // get the SVGElement\n    if (element instanceof HTMLElement) {\n      wrapper_element = element;\n      svg_element = element.querySelector(\"svg\");\n    } else if (element instanceof SVGElement) {\n      svg_element = element;\n    } else {\n      throw new TypeError(\n        \"Frappé Gantt only supports usage of a string CSS selector,\" +\n        \" HTML DOM element or SVG DOM element for the 'element' parameter\",\n      );\n    }\n\n    // svg element\n    if (!svg_element) {\n      // create it\n      this.$svg = createSVG(\"svg\", {\n        append_to: wrapper_element,\n        class: \"gantt\",\n      });\n    } else {\n      this.$svg = svg_element;\n      this.$svg.classList.add(\"gantt\");\n    }\n\n    // wrapper element\n    this.$container = document.createElement(\"div\");\n    this.$container.classList.add(\"gantt-container\");\n\n    const parent_element = this.$svg.parentElement;\n    parent_element.appendChild(this.$container);\n    this.$container.appendChild(this.$svg);\n\n    // popup wrapper\n    this.$popup_wrapper = document.createElement(\"div\");\n    this.$popup_wrapper.classList.add(\"popup-wrapper\");\n    this.$container.appendChild(this.$popup_wrapper);\n  }\n\n  setup_options(options) {\n    this.options = { ...DEFAULT_OPTIONS, ...options }\n    if (!options.view_mode_padding) options.view_mode_padding = {}\n    for (let [key, value] of Object.entries(options.view_mode_padding)) {\n      if (typeof value === \"string\") {\n        // Configure for single value given\n        options.view_mode_padding[key] = [value, value];\n      }\n    }\n\n    this.options.view_mode_padding = {\n      ...VIEW_MODE_PADDING,\n      ...options.view_mode_padding,\n    };\n  }\n\n  setup_tasks(tasks) {\n    // prepare tasks\n    this.tasks = tasks.map((task, i) => {\n      // convert to Date objects\n      task._start = date_utils.parse(task.start);\n      if (task.end === undefined && task.duration !== undefined) {\n        task.end = task._start;\n        let durations = task.duration.split(\" \");\n\n        durations.forEach((tmpDuration) => {\n          let { duration, scale } = date_utils.parse_duration(tmpDuration);\n          task.end = date_utils.add(task.end, duration, scale);\n        });\n      }\n      task._end = date_utils.parse(task.end);\n      let diff = date_utils.diff(task._end, task._start, \"year\");\n      if (diff < 0) {\n        throw Error(\"start of task can't be after end of task: in task #, \" + (i + 1))\n      }\n      // make task invalid if duration too large\n      if (date_utils.diff(task._end, task._start, \"year\") > 10) {\n        task.end = null;\n      }\n\n\n      // cache index\n      task._index = i;\n\n      // invalid dates\n      if (!task.start && !task.end) {\n        task._start = null;\n        task._end = null;\n        task.empty = true;\n        // const today = date_utils.today();\n        // task._start = today;\n        // task._end = date_utils.add(today, 2, \"day\");\n      }\n\n      if (!task.start && task.end) {\n        task._start = date_utils.add(task._end, -2, \"day\");\n      }\n\n      if (task.start && !task.end) {\n        task._end = date_utils.add(task._start, 2, \"day\");\n      }\n\n      // if hours is not set, assume the last day is full day\n      // e.g: 2018-09-09 becomes 2018-09-09 23:59:59\n      if (task._end) {\n        const task_end_values = date_utils.get_date_values(task._end);\n        if (task_end_values.slice(3).every((d) => d === 0)) {\n          task._end = date_utils.add(task._end, 24, \"hour\");\n        }\n      }\n\n      // invalid flag\n      if (!task.start || !task.end) {\n        task.invalid = true;\n      }\n\n      // dependencies\n      if (typeof task.dependencies === \"string\" || !task.dependencies) {\n        let deps = [];\n        if (task.dependencies) {\n          deps = task.dependencies\n            .split(\",\")\n            .map((d) => d.trim().replaceAll(' ', '_'))\n            .filter((d) => d);\n        }\n        task.dependencies = deps;\n      }\n\n      // uids\n      if (!task.id) {\n        task.id = generate_id(task);\n      } else if (typeof task.id === 'string') {\n        task.id = task.id.replaceAll(' ', '_')\n      } else {\n        task.id = `${task.id}`\n      }\n\n      return task;\n    });\n\n    this.setup_dependencies();\n  }\n\n  setup_dependencies() {\n    this.dependency_map = {};\n    for (let t of this.tasks) {\n      for (let d of t.dependencies) {\n        this.dependency_map[d] = this.dependency_map[d] || [];\n        this.dependency_map[d].push(t.id);\n      }\n    }\n  }\n\n  refresh(tasks) {\n    this.setup_tasks(tasks);\n    this.change_view_mode();\n  }\n\n  change_view_mode(mode = this.options.view_mode) {\n    this.update_view_scale(mode);\n    this.setup_dates();\n    this.render();\n    // fire viewmode_change event\n    this.trigger_event(\"view_change\", [mode]);\n  }\n\n  update_view_scale(view_mode) {\n    this.options.view_mode = view_mode;\n    if (view_mode === VIEW_MODE.HOUR) {\n      this.options.step = 24 / 24;\n      this.options.column_width = 38;\n    } else if (view_mode === VIEW_MODE.DAY) {\n      this.options.step = 24;\n      this.options.column_width = 38;\n    } else if (view_mode === VIEW_MODE.HALF_DAY) {\n      this.options.step = 24 / 2;\n      this.options.column_width = 38;\n    } else if (view_mode === VIEW_MODE.QUARTER_DAY) {\n      this.options.step = 24 / 4;\n      this.options.column_width = 38;\n    } else if (view_mode === VIEW_MODE.WEEK) {\n      this.options.step = 24 * 7;\n      this.options.column_width = 140;\n    } else if (view_mode === VIEW_MODE.MONTH) {\n      this.options.step = 24 * 30;\n      this.options.column_width = 120;\n    } else if (view_mode === VIEW_MODE.YEAR) {\n      this.options.step = 24 * 365;\n      this.options.column_width = 120;\n    }\n  }\n\n  setup_dates() {\n    this.setup_gantt_dates();\n    this.setup_date_values();\n  }\n\n  setup_gantt_dates() {\n    this.gantt_start = this.gantt_end = null;\n\n    for (let task of this.tasks) {\n      // set global start and end date\n      if (!this.gantt_start || (task._start && task._start < this.gantt_start)) {\n          this.gantt_start = task._start;\n      }\n      if (!this.gantt_end || (task._end && task._end > this.gantt_end)) {\n        this.gantt_end = task._end;\n      }\n    }\n    let gantt_start, gantt_end;\n    if (!this.gantt_start) gantt_start = new Date();\n    else gantt_start = date_utils.start_of(this.gantt_start, \"day\");\n    if (!this.gantt_end) gantt_end = new Date();\n    else gantt_end = date_utils.start_of(this.gantt_end, \"day\");\n\n    // add date padding on both sides\n    let viewKey;\n    for (let [key, value] of Object.entries(VIEW_MODE)) {\n      if (value === this.options.view_mode) {\n        viewKey = key;\n      }\n    }\n    const [padding_start, padding_end] = this.options.view_mode_padding[\n      viewKey\n    ].map(date_utils.parse_duration);\n    gantt_start = date_utils.add(\n      gantt_start,\n      -padding_start.duration,\n      padding_start.scale,\n    );\n\n    let format_string;\n    if (this.view_is(VIEW_MODE.YEAR)) {\n      format_string = \"YYYY\"\n    } else if (this.view_is(VIEW_MODE.MONTH)) {\n      format_string = \"YYYY-MM\"\n    } else if (this.view_is(VIEW_MODE.DAY)) {\n      format_string = \"YYYY-MM-DD\"\n    } else {\n      format_string = \"YYYY-MM-DD HH\"\n    }\n    this.gantt_start = date_utils.parse(date_utils.format(gantt_start, format_string));\n    this.gantt_start.setHours(0, 0, 0, 0)\n    this.gantt_end = date_utils.add(\n      gantt_end,\n      padding_end.duration,\n      padding_end.scale,\n    );\n  }\n\n  setup_date_values() {\n    this.dates = [];\n    let cur_date = null;\n\n    while (cur_date === null || cur_date < this.gantt_end) {\n      if (!cur_date) {\n        cur_date = date_utils.clone(this.gantt_start);\n      } else {\n        if (this.view_is(VIEW_MODE.YEAR)) {\n          cur_date = date_utils.add(cur_date, 1, \"year\");\n        } else if (this.view_is(VIEW_MODE.MONTH)) {\n          cur_date = date_utils.add(cur_date, 1, \"month\");\n        } else {\n          cur_date = date_utils.add(cur_date, this.options.step, \"hour\");\n        }\n      }\n      this.dates.push(cur_date);\n    }\n  }\n\n  bind_events() {\n    if (this.options.readonly) return\n    this.bind_grid_click();\n    this.bind_bar_events();\n  }\n\n  render() {\n    this.clear();\n    this.setup_layers();\n    this.make_grid();\n    this.make_dates();\n    this.make_bars();\n    this.make_grid_extras();\n    this.make_arrows();\n    this.map_arrows_on_bars();\n    this.set_width();\n    this.set_scroll_position(this.options.scroll_to);\n  }\n\n  setup_layers() {\n    this.layers = {};\n    const layers = [\"grid\", \"arrow\", \"progress\", \"bar\", \"details\"];\n    // make group layers\n    for (let layer of layers) {\n      this.layers[layer] = createSVG(\"g\", {\n        class: layer,\n        append_to: this.$svg,\n      });\n    }\n  }\n\n  make_grid() {\n    this.make_grid_background();\n    this.make_grid_rows();\n    this.make_grid_header();\n  }\n\n  make_grid_extras() {\n    this.make_grid_highlights();\n    this.make_grid_ticks();\n  }\n\n  make_grid_background() {\n    const grid_width = this.dates.length * this.options.column_width;\n    const grid_height =\n      this.options.header_height +\n      12 + // scrollbar-height\n      (this.options.bar_height + this.options.padding) * this.tasks.length;\n\n    createSVG(\"rect\", {\n      x: 0,\n      y: 0,\n      width: grid_width,\n      height: grid_height,\n      class: \"grid-background\",\n      append_to: this.$svg,\n    });\n\n    $.attr(this.$svg, {\n      height: grid_height ,\n      width: \"100%\",\n    });\n  }\n\n  make_grid_rows() {\n    const rows_layer = createSVG(\"g\", { append_to: this.layers.grid });\n\n    const row_width = this.dates.length * this.options.column_width;\n    const row_height = this.options.bar_height + this.options.padding;\n\n    let row_y = this.options.header_height;\n\n    for (let _ of this.tasks) {\n      createSVG(\"rect\", {\n        x: 0,\n        y: row_y,\n        width: row_width,\n        height: row_height,\n        class: \"grid-row\",\n        append_to: rows_layer,\n      });\n      if (this.options.lines === 'both' || this.options.lines === 'horizontal') {\n\n      }\n\n      row_y += this.options.bar_height + this.options.padding;\n    }\n  }\n\n  make_grid_header() {\n    const curHeader = document.querySelector('.grid-header')\n\n    let $header = document.createElement(\"div\");\n    $header.style.height = this.options.header_height + \"px\";\n    $header.style.width = this.dates.length * this.options.column_width + \"px\";\n    $header.classList.add('grid-header')\n    this.$header = $header\n    this.$container.appendChild($header)\n\n    let $upper_header = document.createElement(\"div\");\n    $upper_header.classList.add('upper-header')\n    this.$upper_header = $upper_header\n    this.$header.appendChild($upper_header)\n\n    let $lower_header = document.createElement(\"div\");\n    $lower_header.classList.add('lower-header')\n    this.$lower_header = $lower_header\n    this.$header.appendChild($lower_header)\n\n    this.make_side_header()\n  }\n\n  make_side_header() {\n    let $side_header = document.createElement('div')\n    $side_header.classList.add('side-header')\n\n    // Create view mode change select\n    if (this.options.view_mode_select) {\n\n      const $select = document.createElement(\"select\");\n      $select.classList.add('viewmode-select')\n\n      const $el = document.createElement(\"option\");\n      $el.selected = true\n      $el.disabled = true\n      $el.textContent = 'Mode'\n      $select.appendChild($el)\n\n      for (const key in VIEW_MODE) {\n        const $option = document.createElement(\"option\");\n        $option.value = VIEW_MODE[key];\n        $option.textContent = VIEW_MODE[key];\n        $select.appendChild($option);\n      }\n      // $select.value = this.options.view_mode\n      $select.addEventListener(\"change\", (function () {\n        this.change_view_mode($select.value)\n      }).bind(this));\n      $side_header.appendChild($select)\n    }\n\n    // Create today button\n    if (this.options.today_button) {\n      let $today_button = document.createElement('button')\n      $today_button.classList.add('today-button')\n      $today_button.textContent = 'Today'\n      $today_button.onclick = this.scroll_today.bind(this)\n      $side_header.appendChild($today_button)\n    }\n\n    this.$header.appendChild($side_header)\n    const { left, y } = this.$header.getBoundingClientRect();\n    const width = Math.min(this.$header.clientWidth, this.$container.clientWidth)\n    $side_header.style.left = left + this.$container.scrollLeft + width - $side_header.clientWidth + 1 + 'px';\n    $side_header.style.top = y + 10 + 'px';\n  }\n\n  make_grid_ticks() {\n    if (!['both', 'vertical', 'horizontal'].includes(this.options.lines)) return\n    let tick_x = 0;\n    let tick_y = this.options.header_height;\n    let tick_height =\n      (this.options.bar_height + this.options.padding) * this.tasks.length;\n\n    let $lines_layer = createSVG(\"g\", { class: 'lines_layer', append_to: this.layers.grid });\n\n    let row_y = this.options.header_height;\n\n    const row_width = this.dates.length * this.options.column_width;\n    const row_height = this.options.bar_height + this.options.padding;\n    if (this.options.lines !== 'vertical') {\n      for (let _ of this.tasks) {\n        createSVG(\"line\", {\n          x1: 0,\n          y1: row_y + row_height,\n          x2: row_width,\n          y2: row_y + row_height,\n          class: \"row-line\",\n          append_to: $lines_layer,\n        });\n        row_y += row_height;\n      }\n    }\n    if (this.options.lines === 'horizontal') return;\n    for (let date of this.dates) {\n      let tick_class = \"tick\";\n      // thick tick for monday\n      if (this.view_is(VIEW_MODE.DAY) && date.getDate() === 1) {\n        tick_class += \" thick\";\n      }\n      // thick tick for first week\n      if (\n        this.view_is(VIEW_MODE.WEEK) &&\n        date.getDate() >= 1 &&\n        date.getDate() < 8\n      ) {\n        tick_class += \" thick\";\n      }\n      // thick ticks for quarters\n      if (this.view_is(VIEW_MODE.MONTH) && date.getMonth() % 3 === 0) {\n        tick_class += \" thick\";\n      }\n\n      createSVG(\"path\", {\n        d: `M ${tick_x} ${tick_y} v ${tick_height}`,\n        class: tick_class,\n        append_to: this.layers.grid,\n      });\n\n      if (this.view_is(VIEW_MODE.MONTH)) {\n        tick_x +=\n          (date_utils.get_days_in_month(date) * this.options.column_width) / 30;\n      } else {\n        tick_x += this.options.column_width;\n      }\n    }\n  }\n\n  highlightWeekends() {\n    if (!this.view_is('Day') && !this.view_is('Half Day')) return\n    for (let d = new Date(this.gantt_start); d <= this.gantt_end; d.setDate(d.getDate() + 1)) {\n      if (d.getDay() === 0 || d.getDay() === 6) {\n        const x = (date_utils.diff(d, this.gantt_start, 'hour') /\n          this.options.step) *\n          this.options.column_width;\n        const height = (this.options.bar_height + this.options.padding) * this.tasks.length;\n        createSVG('rect', {\n          x,\n          y: this.options.header_height,\n          width: (this.view_is('Day') ? 1 : 2) * this.options.column_width,\n          height,\n          class: 'holiday-highlight',\n          append_to: this.layers.grid,\n        });\n      }\n    }\n  }\n\n  //compute the horizontal x distance\n  computeGridHighlightDimensions(view_mode) {\n    let x = this.options.column_width / 2;\n\n    if (this.view_is(VIEW_MODE.DAY)) {\n      let today = date_utils.today()\n      return {\n        x: x +\n          (date_utils.diff(today, this.gantt_start, \"hour\") / this.options.step) *\n          this.options.column_width,\n        date: today\n      }\n    }\n\n    for (let date of this.dates) {\n      const todayDate = new Date();\n      const startDate = new Date(date);\n      const endDate = new Date(date);\n      switch (view_mode) {\n        case VIEW_MODE.WEEK:\n          endDate.setDate(date.getDate() + 7);\n          break;\n        case VIEW_MODE.MONTH:\n          endDate.setMonth(date.getMonth() + 1);\n          break;\n        case VIEW_MODE.YEAR:\n          endDate.setFullYear(date.getFullYear() + 1);\n          break;\n      }\n      if (todayDate >= startDate && todayDate <= endDate) {\n        return { x, date: startDate }\n      } else {\n        x += this.options.column_width;\n      }\n    }\n  }\n\n  make_grid_highlights() {\n    if (this.options.highlight_weekend) this.highlightWeekends()\n    // highlight today's | week's | month's | year's\n    if (\n      this.view_is(VIEW_MODE.DAY) ||\n      this.view_is(VIEW_MODE.WEEK) ||\n      this.view_is(VIEW_MODE.MONTH) ||\n      this.view_is(VIEW_MODE.YEAR)\n    ) {\n      // Used as we must find the _end_ of session if view is not Day\n      const { x: left, date } = this.computeGridHighlightDimensions(this.options.view_mode)\n      const top = this.options.header_height;\n      const height = (this.options.bar_height + this.options.padding) * this.tasks.length;\n      this.$current_highlight = this.create_el({ top, left, height, classes: 'current-highlight', append_to: this.$container })\n      let $today = document.getElementById(date_utils.format(date).replaceAll(' ', '_'))\n\n      $today.classList.add('current-date-highlight')\n      $today.style.top = +$today.style.top.slice(0, -2) - 4 + 'px'\n      $today.style.left = +$today.style.left.slice(0, -2) - 8 + 'px'\n    }\n  }\n\n  create_el({ left, top, width, height, id, classes, append_to }) {\n    let $el = document.createElement(\"div\");\n    $el.classList.add(classes)\n    $el.style.top = top + 'px'\n    $el.style.left = left + 'px'\n    if (id) $el.id = id\n    if (width) $el.style.width = height + 'px'\n    if (height) $el.style.height = height + 'px'\n    append_to.appendChild($el)\n    return $el\n  }\n\n  make_dates() {\n    this.upper_texts_x = {}\n    this.get_dates_to_draw().forEach((date, i) => {\n      let $lower_text = this.create_el({\n        left: date.lower_x,\n        top: date.lower_y,\n        id: date.formatted_date,\n        classes: 'lower-text',\n        append_to: this.$lower_header\n      })\n      $lower_text.innerText = date.lower_text\n      $lower_text.style.left = +$lower_text.style.left.slice(0, -2) - $lower_text.clientWidth / 2 + 'px'\n\n      if (date.upper_text) {\n        this.upper_texts_x[date.upper_text] = date.upper_x\n        let $upper_text = document.createElement('div');\n        $upper_text.classList.add('upper-text')\n        $upper_text.style.left = date.upper_x + 'px'\n        $upper_text.style.top = date.upper_y + 'px'\n        $upper_text.innerText = date.upper_text\n        this.$upper_header.appendChild($upper_text)\n\n        // remove out-of-bound dates\n        if (date.upper_x > this.layers.grid.getBBox().width) {\n          $upper_text.remove();\n        }\n      }\n    })\n  }\n\n  get_dates_to_draw() {\n    let last_date = null;\n    const dates = this.dates.map((date, i) => {\n      const d = this.get_date_info(date, last_date, i);\n      last_date = d;\n      return d;\n    });\n    return dates;\n  }\n\n  get_date_info(date, last_date_info) {\n    let last_date = last_date_info ? last_date_info.date : date_utils.add(date, 1, \"day\")\n    const date_text = {\n      Hour_lower: date_utils.format(date, \"HH\", this.options.language),\n      \"Quarter Day_lower\": date_utils.format(date, \"HH\", this.options.language),\n      \"Half Day_lower\": date_utils.format(date, \"HH\", this.options.language),\n      Day_lower:\n        date.getDate() !== last_date.getDate()\n          ? date_utils.format(date, \"D\", this.options.language)\n          : \"\",\n      Week_lower:\n        date.getMonth() !== last_date.getMonth()\n          ? date_utils.format(date, \"D MMM\", this.options.language)\n          : date_utils.format(date, \"D\", this.options.language),\n      Month_lower: date_utils.format(date, \"MMMM\", this.options.language),\n      Year_lower: date_utils.format(date, \"YYYY\", this.options.language),\n      Hour_upper:\n        date.getDate() !== last_date.getDate()\n          ? date_utils.format(date, \"D MMMM\", this.options.language)\n          : \"\",\n      \"Quarter Day_upper\":\n        date.getDate() !== last_date.getDate()\n          ? date_utils.format(date, \"D MMM\", this.options.language)\n          : \"\",\n      \"Half Day_upper\":\n        date.getDate() !== last_date.getDate()\n          ? date.getMonth() !== last_date.getMonth()\n            ? date_utils.format(date, \"D MMM\", this.options.language)\n            : date_utils.format(date, \"D\", this.options.language)\n          : \"\",\n      Day_upper:\n        date.getMonth() !== last_date.getMonth() || !last_date_info\n          ? date_utils.format(date, \"MMMM\", this.options.language)\n          : \"\",\n      Week_upper:\n        date.getMonth() !== last_date.getMonth()\n          ? date_utils.format(date, \"MMMM\", this.options.language)\n          : \"\",\n      Month_upper:\n        date.getFullYear() !== last_date.getFullYear()\n          ? date_utils.format(date, \"YYYY\", this.options.language)\n          : \"\",\n      Year_upper:\n        date.getFullYear() !== last_date.getFullYear()\n          ? date_utils.format(date, \"YYYY\", this.options.language)\n          : \"\",\n    };\n    let column_width = this.view_is(VIEW_MODE.MONTH) ? (date_utils.get_days_in_month(date) * this.options.column_width) / 30 : this.options.column_width;\n    const base_pos = {\n      x: last_date_info\n        ? last_date_info.base_pos_x + last_date_info.column_width\n        : 0,\n      lower_y: this.options.header_height - 20,\n      upper_y: this.options.header_height - 50,\n    };\n    const x_pos = {\n      Hour_lower: column_width / 2,\n      Hour_upper: column_width * 12,\n      \"Quarter Day_lower\": column_width / 2,\n      \"Quarter Day_upper\": column_width * 2,\n      \"Half Day_lower\": column_width / 2,\n      \"Half Day_upper\": column_width,\n      Day_lower: column_width / 2,\n      Day_upper: column_width / 2,\n      Week_lower: column_width / 2,\n      Week_upper: (column_width * 4) / 2,\n      Month_lower: column_width / 2,\n      Month_upper: column_width / 2,\n      Year_lower: column_width / 2,\n      Year_upper: (column_width * 30) / 2,\n    };\n    return {\n      date,\n      formatted_date: date_utils.format(date).replaceAll(' ', '_'),\n      column_width,\n      base_pos_x: base_pos.x,\n      upper_text: this.options.lower_text ? this.options.upper_text(date, this.options.view_mode, date_text[`${this.options.view_mode}_upper`]) : date_text[`${this.options.view_mode}_upper`],\n      lower_text: this.options.lower_text ? this.options.lower_text(date, this.options.view_mode, date_text[`${this.options.view_mode}_lower`]) : date_text[`${this.options.view_mode}_lower`],\n      upper_x: base_pos.x + x_pos[`${this.options.view_mode}_upper`],\n      upper_y: base_pos.upper_y,\n      lower_x: base_pos.x + x_pos[`${this.options.view_mode}_lower`],\n      lower_y: base_pos.lower_y,\n    };\n  }\n\n  make_bars() {\n    this.bars = this.tasks.map((task) => {\n      const bar = new Bar(this, task);\n      this.layers.bar.appendChild(bar.group);\n      return bar;\n    });\n  }\n\n  make_arrows() {\n    this.arrows = [];\n    for (let task of this.tasks) {\n      let arrows = [];\n      arrows = task.dependencies\n        .map((task_id) => {\n          const dependency = this.get_task(task_id);\n          if (!dependency) return;\n          const arrow = new Arrow(\n            this,\n            this.bars[dependency._index], // from_task\n            this.bars[task._index], // to_task\n          );\n          this.layers.arrow.appendChild(arrow.element);\n          return arrow;\n        })\n        .filter(Boolean); // filter falsy values\n      this.arrows = this.arrows.concat(arrows);\n    }\n  }\n\n  map_arrows_on_bars() {\n    for (let bar of this.bars) {\n      bar.arrows = this.arrows.filter((arrow) => {\n        return (\n          arrow.from_task.task.id === bar.task.id ||\n          arrow.to_task.task.id === bar.task.id\n        );\n      });\n    }\n  }\n\n  set_width() {\n    const cur_width = this.$svg.getBoundingClientRect().width;\n    const actual_width = this.$svg.querySelector('.grid .grid-row') ? this.$svg\n      .querySelector('.grid .grid-row')\n      .getAttribute('width') : 0;\n    if (cur_width < actual_width) {\n      this.$svg.setAttribute(\"width\", actual_width);\n    }\n  }\n\n  set_scroll_position(date) {\n    if (!date || date === 'start') {\n      date = this.gantt_start\n    } else if (date === 'today') {\n      return this.scroll_today()\n    } else if (typeof date === 'string') {\n      date = date_utils.parse(date)\n    }\n\n    const parent_element = this.$svg.parentElement;\n    if (!parent_element) return;\n\n    const hours_before_first_task = date_utils.diff(\n      date,\n      this.gantt_start,\n      \"hour\",\n    ) + 24;\n\n    const scroll_pos =\n      (hours_before_first_task / this.options.step) *\n      this.options.column_width -\n      this.options.column_width;\n    parent_element.scrollTo({ left: scroll_pos, behavior: 'smooth' })\n  }\n\n  scroll_today() {\n    this.set_scroll_position(new Date())\n  }\n\n  bind_grid_click() {\n    $.on(\n      this.$svg,\n      this.options.popup_trigger,\n      \".grid-row, .grid-header\",\n      () => {\n        this.unselect_all();\n        this.hide_popup();\n      },\n    );\n\n    this.bind_bar_create();\n  }\n\n  bind_bar_create() {\n    // 只针对没有任务项的可以创建\n    let x_on_start = 0;\n    let y_on_start = 0;\n    let is_creating = null;\n    let holder = null;\n\n    const radius = this.options.bar_corner_radius;\n    const height = this.options.bar_height;\n\n    $.on(this.$svg, \"mousedown\", \".grid-row\", (e) => {\n      is_creating = true;\n      // 选区\n      x_on_start = e.offsetX;\n      [, y_on_start] = this.get_snap_coord(e.offsetX, e.offsetY);\n      // const date = this.get_snap_date(x_on_start);\n    });\n\n    $.on(this.$svg, \"mousemove\", (e) => {\n      if (!is_creating) return;\n      let dx = e.offsetX - x_on_start;\n\n      // limit block\n      // const width = this.get_snap_position(Math.abs(dx));\n      // free distance\n      const width = Math.abs(dx);\n      // create rect\n      if (!holder) {\n        holder = createSVG('rect', {\n          x: x_on_start,\n          y: y_on_start,\n          width: 0,\n          height: height,\n          rx: radius,\n          ry: radius,\n          class: 'bar-progress',\n          append_to: this.layers.progress,\n        });\n      }\n      // move-right\n      let x = x_on_start;\n      if (dx < 0) {\n        // move-left\n        x = x_on_start - width;\n      }\n      holder.setAttribute('x', x);\n      holder.setAttribute('width', width);\n    });\n\n    $.on(this.$svg, \"mouseup\", () => {\n      is_creating = false;\n      if (holder) {\n        const start_x = holder.getX();\n        const end_x = holder.getX() + holder.getBBox().width;\n        const date_start = this.get_snap_date(start_x);\n        const date_end = this.get_snap_date(end_x);\n        console.log('ddd ==> date_start end', date_start, date_end);\n      }\n      // this.layers.progress.removeChild(holder);\n      holder = null;\n    });\n  }\n\n  bind_bar_events() {\n    let is_dragging = false;\n    let x_on_start = 0;\n    let x_on_scroll_start = 0;\n    let y_on_start = 0;\n    let is_resizing_left = false;\n    let is_resizing_right = false;\n    let parent_bar_id = null;\n    let bars = []; // instanceof Bar\n    this.bar_being_dragged = null;\n\n    function action_in_progress() {\n      return is_dragging || is_resizing_left || is_resizing_right;\n    }\n\n    $.on(this.$svg, \"mousedown\", \".bar-wrapper, .handle\", (e, element) => {\n      const bar_wrapper = $.closest(\".bar-wrapper\", element);\n      bars.forEach((bar) => bar.group.classList.remove(\"active\"));\n\n      if (element.classList.contains(\"left\")) {\n        is_resizing_left = true;\n      } else if (element.classList.contains(\"right\")) {\n        is_resizing_right = true;\n      } else if (element.classList.contains(\"bar-wrapper\")) {\n        is_dragging = true;\n      }\n\n      bar_wrapper.classList.add(\"active\");\n      if (this.popup) {\n        this.popup.parent.classList.add('hidden');\n      }\n\n      x_on_start = e.offsetX;\n      y_on_start = e.offsetY;\n\n      parent_bar_id = bar_wrapper.getAttribute(\"data-id\");\n      const ids = [\n        parent_bar_id\n      ];\n      // drag sync children\n      if (this.options.drag_sync_child) {\n        ids.push(...this.get_all_dependent_tasks(parent_bar_id));\n      }\n      bars = ids.map((id) => this.get_bar(id));\n\n      this.bar_being_dragged = parent_bar_id;\n\n      bars.forEach((bar) => {\n        if (bar.empty) return;\n        const $bar = bar.$bar;\n        $bar.ox = $bar.getX();\n        $bar.oy = $bar.getY();\n        $bar.owidth = $bar.getWidth();\n        $bar.finaldx = 0;\n      });\n    });\n    $.on(this.$container, 'scroll', e => {\n      let elements = document.querySelectorAll('.bar-wrapper');\n      let localBars = [];\n      const ids = [];\n      let dx;\n      if (x_on_scroll_start) {\n        dx = e.currentTarget.scrollLeft - x_on_scroll_start;\n      }\n\n      const daysSinceStart = e.currentTarget.scrollLeft / this.options.column_width * this.options.step / 24;\n      let format_str = \"D MMM\"\n      if ([\"Year\", \"Month\"].includes(this.options.view_mode)) format_str = 'YYYY'\n      else if ([\"Day\", \"Week\"].includes(this.options.view_mode)) format_str = 'MMMM'\n      else if (this.view_is('Half Day')) format_str = 'D'\n      else if (this.view_is('Hour')) format_str = \"D MMMM\"\n\n\n      let currentUpper = date_utils.format(\n        date_utils.add(this.gantt_start, daysSinceStart, 'day'),\n        format_str\n      );\n      const upperTexts = Array.from(document.querySelectorAll('.upper-text'));\n      const $el = upperTexts.find(el => el.textContent === currentUpper)\n      if ($el && !$el.classList.contains('current-upper')) {\n        const $current = document.querySelector('.current-upper')\n        if ($current) {\n          $current.classList.remove('current-upper')\n          $current.style.left = this.upper_texts_x[$current.textContent] + 'px';\n          $current.style.top = this.options.header_height - 50 + 'px';\n        }\n\n        $el.classList.add('current-upper')\n        let dimensions = this.$svg.getBoundingClientRect()\n        $el.style.left = dimensions.x + this.$container.scrollLeft + 10 + 'px';\n        $el.style.top = dimensions.y + this.options.header_height - 50 + 'px';\n      }\n\n      Array.prototype.forEach.call(elements, function (el, i) {\n        ids.push(el.getAttribute('data-id'));\n      });\n\n      if (dx) {\n        localBars = ids.map(id => this.get_bar(id));\n        if (this.options.auto_move_label) {\n          localBars.forEach(bar => {\n            bar.update_label_position_on_horizontal_scroll({ x: dx, sx: e.currentTarget.scrollLeft });\n          });\n        }\n      }\n\n      x_on_scroll_start = e.currentTarget.scrollLeft;\n    });\n\n    $.on(this.$svg, \"mousemove\", (e) => {\n      if (!action_in_progress()) return;\n      const dx = e.offsetX - x_on_start;\n      const dy = e.offsetY - y_on_start;\n\n      bars.forEach((bar) => {\n        if (bar.empty) return;\n        const $bar = bar.$bar;\n        // limit-block\n        // $bar.finaldx = this.get_snap_position(dx);\n        // free-distance\n        $bar.finaldx = dx;\n        this.hide_popup();\n        if (is_resizing_left) {\n          // 左不能大于右\n          if ($bar.finaldx - $bar.owidth >= 0) return;\n          if (parent_bar_id === bar.task.id) {\n            bar.update_bar_position({\n              x: $bar.ox + $bar.finaldx,\n              width: $bar.owidth - $bar.finaldx,\n            });\n          } else {\n            bar.update_bar_position({\n              x: $bar.ox + $bar.finaldx,\n            });\n          }\n        } else if (is_resizing_right) {\n          // 右不能小于左\n          if ($bar.finaldx + $bar.owidth < 0) return;\n          if (parent_bar_id === bar.task.id) {\n            bar.update_bar_position({\n              width: $bar.owidth + $bar.finaldx,\n            });\n          }\n        } else if (is_dragging && !this.options.readonly) {\n          bar.update_bar_position({ x: $bar.ox + $bar.finaldx });\n        }\n      });\n    });\n\n    document.addEventListener(\"mouseup\", (e) => {\n\n      is_dragging = false;\n      is_resizing_left = false;\n      is_resizing_right = false;\n    });\n\n    $.on(this.$svg, \"mouseup\", (e) => {\n      this.bar_being_dragged = null;\n      bars.forEach((bar) => {\n        if (bar.empty) return;\n        const $bar = bar.$bar;\n        if (!$bar.finaldx) return;\n        bar.date_changed();\n        bar.set_action_completed();\n      });\n    });\n\n    this.bind_bar_progress();\n  }\n\n  bind_bar_progress() {\n    let x_on_start = 0;\n    let y_on_start = 0;\n    let is_resizing = null;\n    let bar = null;\n    let $bar_progress = null;\n    let $bar = null;\n\n    $.on(this.$svg, \"mousedown\", \".handle.progress\", (e, handle) => {\n      is_resizing = true;\n      x_on_start = e.offsetX;\n      y_on_start = e.offsetY;\n\n      const $bar_wrapper = $.closest(\".bar-wrapper\", handle);\n      const id = $bar_wrapper.getAttribute(\"data-id\");\n      bar = this.get_bar(id);\n\n      $bar_progress = bar.$bar_progress;\n      $bar = bar.$bar;\n\n      $bar_progress.finaldx = 0;\n      $bar_progress.owidth = $bar_progress.getWidth();\n      $bar_progress.min_dx = -$bar_progress.getWidth();\n      $bar_progress.max_dx = $bar.getWidth() - $bar_progress.getWidth();\n    });\n\n    $.on(this.$svg, \"mousemove\", (e) => {\n      if (!is_resizing) return;\n      let dx = e.offsetX - x_on_start;\n      let dy = e.offsetY - y_on_start;\n\n      if (dx > $bar_progress.max_dx) {\n        dx = $bar_progress.max_dx;\n      }\n      if (dx < $bar_progress.min_dx) {\n        dx = $bar_progress.min_dx;\n      }\n\n      const $handle = bar.$handle_progress;\n      $.attr($bar_progress, \"width\", $bar_progress.owidth + dx);\n      $.attr($handle, \"points\", bar.get_progress_polygon_points());\n      $bar_progress.finaldx = dx;\n    });\n\n    $.on(this.$svg, \"mouseup\", () => {\n      is_resizing = false;\n      if (!($bar_progress && $bar_progress.finaldx)) return;\n\n      $bar_progress.finaldx = 0;\n      bar.progress_changed();\n      bar.set_action_completed();\n      bar = null;\n      $bar_progress = null;\n      $bar = null;\n    });\n  }\n\n  get_all_dependent_tasks(task_id) {\n    let out = [];\n    let to_process = [task_id];\n    while (to_process.length) {\n      const deps = to_process.reduce((acc, curr) => {\n        acc = acc.concat(this.dependency_map[curr]);\n        return acc;\n      }, []);\n\n      out = out.concat(deps);\n      to_process = deps.filter((d) => !to_process.includes(d));\n    }\n\n    return out.filter(Boolean);\n  }\n\n  get_snap_position(dx) {\n    let odx = dx,\n      rem,\n      position;\n\n    if (this.view_is(VIEW_MODE.WEEK)) {\n      rem = dx % (this.options.column_width / 7);\n      position =\n        odx -\n        rem +\n        (rem < this.options.column_width / 14\n          ? 0\n          : this.options.column_width / 7);\n    } else if (this.view_is(VIEW_MODE.MONTH)) {\n      rem = dx % (this.options.column_width / 30);\n      position =\n        odx -\n        rem +\n        (rem < this.options.column_width / 60\n          ? 0\n          : this.options.column_width / 30);\n    } else if (this.view_is(VIEW_MODE.YEAR)) {\n      rem = dx % (this.options.column_width / 365);\n      position =\n        odx -\n        rem +\n        (rem < this.options.column_width / 120\n          ? 0\n          : this.options.column_width / 365);\n    } else {\n      rem = dx % this.options.column_width;\n      position =\n        odx -\n        rem +\n        (rem < this.options.column_width / 2 ? 0 : this.options.column_width);\n    }\n    return position;\n  }\n\n  get_snap_coord(ox, oy) {\n    console.log('ddd ==> ox', ox);\n    let start_x = ox;\n    // 网格区\n    if (\n      this.view_is(VIEW_MODE.HOUR) ||\n      this.view_is(VIEW_MODE.HALF_DAY) ||\n      this.view_is(VIEW_MODE.QUARTER_DAY) ||\n      this.view_is(VIEW_MODE.DAY)\n    ) {\n      start_x = parseInt(ox / this.options.column_width) * this.options.column_width;\n    }\n\n    const padding = this.options.padding / 2;\n    const header_height = this.options.header_height;\n    const row_height = this.options.bar_height + this.options.padding;\n\n    const mod = parseInt((oy - header_height) / row_height);\n    const start_y = header_height + mod * row_height + padding;\n\n    return [start_x, start_y];\n  }\n\n  get_snap_date(x) {\n    const x_in_units = x / this.options.column_width;\n    return date_utils.add(\n      this.gantt_start,\n      x_in_units * this.options.step,\n      \"hour\",\n    );\n  }\n\n  unselect_all() {\n    [...this.$svg.querySelectorAll(\".bar-wrapper\")].forEach((el) => {\n      el.classList.remove(\"active\");\n    });\n    if (this.popup) {\n      this.popup.parent.classList.remove('hidden');\n    }\n  }\n\n  view_is(modes) {\n    if (typeof modes === \"string\") {\n      return this.options.view_mode === modes;\n    }\n\n    if (Array.isArray(modes)) {\n      return modes.some((mode) => this.options.view_mode === mode);\n    }\n\n    return false;\n  }\n\n  get_task(id) {\n    return this.tasks.find((task) => {\n      return task.id === id;\n    });\n  }\n\n  get_bar(id) {\n    return this.bars.find((bar) => {\n      return bar.task.id === id;\n    });\n  }\n\n  show_popup(options) {\n    if (this.options.popup === false) return\n    if (!this.popup) {\n      this.popup = new Popup(\n        this.$popup_wrapper,\n        this.options.popup,\n      );\n    }\n    this.popup.show(options);\n  }\n\n  hide_popup() {\n    this.popup && this.popup.hide();\n  }\n\n  trigger_event(event, args) {\n    if (this.options[\"on_\" + event]) {\n      this.options[\"on_\" + event].apply(null, args);\n    }\n  }\n\n  /**\n   * Gets the oldest starting date from the list of tasks\n   *\n   * @returns Date\n   * @memberof Gantt\n   */\n  get_oldest_starting_date() {\n    if (!this.tasks.length) return new Date()\n    return this.tasks\n      .map((task) => task._start)\n      .reduce((prev_date, cur_date) =>\n        (cur_date && cur_date <= prev_date) ? cur_date : prev_date,\n      );\n  }\n\n  /**\n   * Clear all elements from the parent svg element\n   *\n   * @memberof Gantt\n   */\n  clear() {\n    this.$svg.innerHTML = \"\";\n    this.$header?.remove?.()\n    this.$current_highlight?.remove?.()\n    this.popup?.hide?.()\n  }\n}\n\nGantt.VIEW_MODE = VIEW_MODE;\n\nfunction generate_id(task) {\n  return task.name + \"_\" + Math.random().toString(36).slice(2, 12);\n}\n"],"names":["YEAR","MONTH","DAY","HOUR","MINUTE","SECOND","MILLISECOND","SHORTENED","January","February","March","April","May","June","July","August","September","October","November","December","date_utils","parse_duration","duration","matches","exec","parseInt","scale","parse","date","date_separator","time_separator","Date","date_parts","time_parts","parts","split","map","val","vals","length","parseFloat","concat","to_string","with_time","TypeError","this","get_date_values","i","padStart","date_string","time_string","format","format_string","lang","month_name","Intl","DateTimeFormat","month","month_name_capitalized","charAt","toUpperCase","slice","values","d","format_map","YYYY","MM","DD","HH","mm","ss","SSS","D","MMMM","MMM","str","formatted_values","Object","keys","sort","a","b","forEach","key","includes","replaceAll","push","value","diff","date_a","date_b","milliseconds","seconds","hours","minutes","days","months","years","endsWith","Math","floor","today","now","add","qty","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","getMilliseconds","start_of","scores","should_reset","_scale","clone","get_days_in_month","no_of_days","year","targetLength","padString","String","repeat","$","expr","con","document","querySelector","createSVG","tag","attrs","elem","createElementNS","attr","append_to","appendChild","innerHTML","setAttribute","animateSVG","svgElement","from","to","animatedSvgElement","dur","begin","animEl","attributeName","animateElement","calcMode","keyTimes","keySplines","cubic_bezier","getAnimationElement","event","createEvent","initEvent","eventName","dispatchEvent","name","ease","linear","on","element","selector","callback","delegate","bind","off","handler","removeEventListener","addEventListener","e","delegatedTarget","target","closest","call","parentNode","getAttribute","Bar","constructor","gantt","task","set_defaults","prepare","draw","action_completed","prepare_values","prepare_helpers","empty","invalid","height","options","bar_height","image_size","compute_x","compute_y","compute_duration","corner_radius","bar_corner_radius","width","column_width","progress_width","progress","group","class","custom_class","important","id","bar_group","handle_group","SVGElement","prototype","getX","getY","getWidth","getHeight","getEndX","prepare_expected_progress_values","compute_expected_progress","expected_progress_width","expected_progress","draw_bar","draw_progress_bar","show_expected_progress","draw_expected_progress_bar","draw_label","draw_resize_handles","thumbnail","draw_thumbnail","$bar","x","y","rx","ry","classList","$expected_bar_progress","$bar_progress","_start","gantt_start","step","$date_highlight","createElement","style","top","header_height","left","$lower_header","prepend","x_coord","requestAnimationFrame","update_label_position","defs","clipPath","href","readonly","bar","handle_width","$handle_progress","points","get_progress_polygon_points","join","bar_progress","icon_width","icon_height","setup_click_event","timeout","task_id","trigger_event","screenX","screenY","setTimeout","show_popup","offsetX","display","clearTimeout","popup","hide","popup_trigger","bar_being_dragged","subtitle","language","_end","target_element","title","update_bar_position","drag_limit_child","dependencies","dep","get_bar","reduce","_","curr","update_attr","update_handle_position","date_changed","update_expected_progressbar_position","update_progressbar_position","update_arrow_position","update_label_position_on_horizontal_scroll","sx","container","label","img","img_mask","barWidthLimit","newLabelX","newImgX","imgWidth","getBBox","labelEndX","viewportCentral","clientWidth","contains","changed","new_start_date","new_end_date","compute_start_end_date","Number","progress_changed","new_progress","compute_progress","set_action_completed","x_in_units","width_in_units","task_start","view_is","padding","_index","get_snap_position","dx","rem","position","odx","isNaN","x_offset_label_img","labelWidth","barWidth","remove","handle","arrows","arrow","update","Arrow","from_task","to_task","calculate_path","drawInner","rowHeight","taskHeight","arrowCurve","arrow_curve","arrowIndent","taskFrom","taskTo","taskFromX2","taskFromY1","taskToX1","taskToEndPosition","taskFromEndPosition","path","trianglePoints","svgPath","fill","svgPolygon","Popup","parent","custom_html","make","pointer","show","Error","html","position_meta","HTMLElement","getBoundingClientRect","opacity","VIEW_MODE","QUARTER_DAY","HALF_DAY","WEEK","VIEW_MODE_PADDING","DEFAULT_OPTIONS","view_modes","view_mode","date_format","drag_sync_child","highlight_weekend","scroll_to","lines","auto_move_label","today_button","view_mode_select","Gantt","wrapper","tasks","setup_wrapper","setup_options","setup_tasks","change_view_mode","bind_events","svg_element","wrapper_element","$svg","$container","parentElement","$popup_wrapper","view_mode_padding","entries","start","undefined","end","tmpDuration","every","deps","trim","filter","random","toString","generate_id","setup_dependencies","dependency_map","t","refresh","mode","update_view_scale","setup_dates","render","setup_gantt_dates","setup_date_values","gantt_end","viewKey","padding_start","padding_end","setHours","dates","cur_date","bind_grid_click","bind_bar_events","clear","setup_layers","make_grid","make_dates","make_bars","make_grid_extras","make_arrows","map_arrows_on_bars","set_width","set_scroll_position","layers","layer","make_grid_background","make_grid_rows","make_grid_header","make_grid_highlights","make_grid_ticks","grid_width","grid_height","rows_layer","grid","row_width","row_height","row_y","$header","$upper_header","make_side_header","$side_header","$select","$el","selected","disabled","textContent","$option","$today_button","onclick","scroll_today","min","scrollLeft","tick_x","tick_y","tick_height","$lines_layer","x1","y1","x2","y2","tick_class","highlightWeekends","setDate","getDay","computeGridHighlightDimensions","todayDate","startDate","endDate","setMonth","setFullYear","$current_highlight","create_el","classes","$today","getElementById","upper_texts_x","get_dates_to_draw","$lower_text","lower_x","lower_y","formatted_date","innerText","lower_text","upper_text","upper_x","$upper_text","upper_y","last_date","get_date_info","last_date_info","date_text","Hour_lower","Day_lower","Week_lower","Month_lower","Year_lower","Hour_upper","Day_upper","Week_upper","Month_upper","Year_upper","base_pos","base_pos_x","x_pos","bars","dependency","get_task","Boolean","cur_width","actual_width","parent_element","scroll_pos","scrollTo","behavior","unselect_all","hide_popup","bind_bar_create","x_on_start","y_on_start","is_creating","holder","radius","get_snap_coord","offsetY","abs","start_x","end_x","date_start","get_snap_date","date_end","console","log","is_dragging","x_on_scroll_start","is_resizing_left","is_resizing_right","parent_bar_id","bar_wrapper","ids","get_all_dependent_tasks","ox","oy","owidth","finaldx","elements","querySelectorAll","localBars","currentTarget","daysSinceStart","format_str","currentUpper","Array","find","el","$current","dimensions","bind_bar_progress","is_resizing","min_dx","max_dx","$handle","out","to_process","acc","modes","isArray","some","args","apply","get_oldest_starting_date","prev_date"],"mappings":"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"}