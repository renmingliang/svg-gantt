{"version":3,"file":"frappe-gantt.min.js","sources":["../src/date_utils.js","../src/svg_utils.js","../src/lang_utils.js","../src/bar.js","../src/arrow.js","../src/popup.js","../src/backdrop.js","../src/index.js"],"sourcesContent":["const YEAR = \"year\";\nconst MONTH = \"month\";\nconst DAY = \"day\";\nconst HOUR = \"hour\";\nconst MINUTE = \"minute\";\nconst SECOND = \"second\";\nconst MILLISECOND = \"millisecond\";\n\nconst SHORTENED = {\n  January: \"Jan\",\n  February: \"Feb\",\n  March: \"Mar\",\n  April: \"Apr\",\n  May: \"May\",\n  June: \"Jun\",\n  July: \"Jul\",\n  August: \"Aug\",\n  September: \"Sep\",\n  October: \"Oct\",\n  November: \"Nov\",\n  December: \"Dec\"\n};\n\nexport default {\n  parse_duration(duration) {\n    const regex = /([0-9]{1,})+(y|m|d|h|min|s|ms)/gm;\n    const matches = regex.exec(duration);\n\n    if (matches !== null) {\n      if (matches[2] === \"y\") {\n        return { duration: parseInt(matches[1]), scale: `year` };\n      } else if (matches[2] === \"m\") {\n        return { duration: parseInt(matches[1]), scale: `month` };\n      } else if (matches[2] === \"d\") {\n        return { duration: parseInt(matches[1]), scale: `day` };\n      } else if (matches[2] === \"h\") {\n        return { duration: parseInt(matches[1]), scale: `hour` };\n      } else if (matches[2] === \"min\") {\n        return { duration: parseInt(matches[1]), scale: `minute` };\n      } else if (matches[2] === \"s\") {\n        return { duration: parseInt(matches[1]), scale: `second` };\n      } else if (matches[2] === \"ms\") {\n        return { duration: parseInt(matches[1]), scale: `millisecond` };\n      }\n    }\n  },\n  parse(date, date_separator = \"-\", time_separator = /[.:]/) {\n    if (date instanceof Date) {\n      return date;\n    }\n    if (typeof date === \"string\") {\n      let date_parts, time_parts;\n      const parts = date.split(\" \");\n      date_parts = parts[0]\n        .split(date_separator)\n        .map((val) => parseInt(val, 10));\n      time_parts = parts[1] && parts[1].split(time_separator);\n\n      // month is 0 indexed\n      date_parts[1] = date_parts[1] ? date_parts[1] - 1 : 0;\n\n      let vals = date_parts;\n\n      if (time_parts && time_parts.length) {\n        if (time_parts.length === 4) {\n          time_parts[3] = \"0.\" + time_parts[3];\n          time_parts[3] = parseFloat(time_parts[3]) * 1000;\n        }\n        vals = vals.concat(time_parts);\n      }\n      return new Date(...vals);\n    }\n  },\n\n  to_string(date, with_time = false) {\n    if (!(date instanceof Date)) {\n      throw new TypeError(\"Invalid argument type\");\n    }\n    const vals = this.get_date_values(date).map((val, i) => {\n      if (i === 1) {\n        // add 1 for month\n        val = val + 1;\n      }\n\n      if (i === 6) {\n        return padStart(val + \"\", 3, \"0\");\n      }\n\n      return padStart(val + \"\", 2, \"0\");\n    });\n    const date_string = `${vals[0]}-${vals[1]}-${vals[2]}`;\n    const time_string = `${vals[3]}:${vals[4]}:${vals[5]}.${vals[6]}`;\n\n    return date_string + (with_time ? \" \" + time_string : \"\");\n  },\n\n  format(date, format_string = \"YYYY-MM-DD HH:mm:ss.SSS\", lang = \"en\") {\n    const dateTimeFormat = new Intl.DateTimeFormat(lang, {\n      month: \"long\",\n    });\n    const month_name = dateTimeFormat.format(date);\n    const month_name_capitalized =\n      month_name.charAt(0).toUpperCase() + month_name.slice(1);\n\n    const values = this.get_date_values(date);\n    const format_map = {\n      YYYY: values[0],\n      MM: padStart(values[1] + 1, 2, 0),\n      DD: padStart(values[2], 2, 0),\n      HH: padStart(values[3], 2, 0),\n      mm: padStart(values[4], 2, 0),\n      ss: padStart(values[5], 2, 0),\n      M: values[1] + 1,\n      D: values[2],\n      h: values[3],\n      m: values[4],\n      s: values[5],\n      SSS: values[6],\n      Q: parseInt((values[1] + 1) / 3) + 1,\n      MMMM: month_name_capitalized,\n      MMM: SHORTENED[month_name_capitalized] || month_name_capitalized,\n    };\n\n    let str = format_string;\n    const formatted_values = [];\n\n    Object.keys(format_map)\n      .sort((a, b) => b.length - a.length) // big string first\n      .forEach((key) => {\n        if (str.includes(key)) {\n          str = str.replaceAll(key, `$${formatted_values.length}`);\n          formatted_values.push(format_map[key]);\n        }\n      });\n\n    formatted_values.forEach((value, i) => {\n      str = str.replaceAll(`$${i}`, value);\n    });\n\n    return str;\n  },\n\n  diff(date_a, date_b, scale = DAY) {\n    let milliseconds, seconds, hours, minutes, days, months, years;\n\n    milliseconds = date_a - date_b;\n    seconds = milliseconds / 1000;\n    minutes = seconds / 60;\n    hours = minutes / 60;\n    days = hours / 24;\n    months = days / 30;\n    years = months / 12;\n\n    if (!scale.endsWith(\"s\")) {\n      scale += \"s\";\n    }\n\n    return Math.floor(\n      {\n        milliseconds,\n        seconds,\n        minutes,\n        hours,\n        days,\n        months,\n        years,\n      }[scale],\n    );\n  },\n\n  today() {\n    const vals = this.get_date_values(new Date()).slice(0, 3);\n    return new Date(...vals);\n  },\n\n  now() {\n    return new Date();\n  },\n\n  add(date, qty, scale) {\n    qty = parseInt(qty, 10);\n    const vals = [\n      date.getFullYear() + (scale === YEAR ? qty : 0),\n      date.getMonth() + (scale === MONTH ? qty : 0),\n      date.getDate() + (scale === DAY ? qty : 0),\n      date.getHours() + (scale === HOUR ? qty : 0),\n      date.getMinutes() + (scale === MINUTE ? qty : 0),\n      date.getSeconds() + (scale === SECOND ? qty : 0),\n      date.getMilliseconds() + (scale === MILLISECOND ? qty : 0),\n    ];\n    return new Date(...vals);\n  },\n\n  start_of(date, scale) {\n    const scores = {\n      [YEAR]: 6,\n      [MONTH]: 5,\n      [DAY]: 4,\n      [HOUR]: 3,\n      [MINUTE]: 2,\n      [SECOND]: 1,\n      [MILLISECOND]: 0,\n    };\n\n    function should_reset(_scale) {\n      const max_score = scores[scale];\n      return scores[_scale] <= max_score;\n    }\n\n    const vals = [\n      date.getFullYear(),\n      should_reset(YEAR) ? 0 : date.getMonth(),\n      should_reset(MONTH) ? 1 : date.getDate(),\n      should_reset(DAY) ? 0 : date.getHours(),\n      should_reset(HOUR) ? 0 : date.getMinutes(),\n      should_reset(MINUTE) ? 0 : date.getSeconds(),\n      should_reset(SECOND) ? 0 : date.getMilliseconds(),\n    ];\n\n    return new Date(...vals);\n  },\n\n  clone(date) {\n    return new Date(...this.get_date_values(date));\n  },\n\n  get_date_values(date) {\n    return [\n      date.getFullYear(),\n      date.getMonth(),\n      date.getDate(),\n      date.getHours(),\n      date.getMinutes(),\n      date.getSeconds(),\n      date.getMilliseconds(),\n    ];\n  },\n\n  get_days_in_month(date) {\n    const no_of_days = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n\n    const month = date.getMonth();\n\n    if (month !== 1) {\n      return no_of_days[month];\n    }\n\n    // Feb\n    const year = date.getFullYear();\n    if ((year % 4 === 0 && year % 100 != 0) || year % 400 === 0) {\n      return 29;\n    }\n    return 28;\n  },\n};\n\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/padStart\nfunction padStart(str, targetLength, padString) {\n  str = str + \"\";\n  targetLength = targetLength >> 0;\n  padString = String(typeof padString !== \"undefined\" ? padString : \" \");\n  if (str.length > targetLength) {\n    return String(str);\n  } else {\n    targetLength = targetLength - str.length;\n    if (targetLength > padString.length) {\n      padString += padString.repeat(targetLength / padString.length);\n    }\n    return padString.slice(0, targetLength) + String(str);\n  }\n}\n","export function $(expr, con) {\n  return typeof expr === \"string\"\n    ? (con || document).querySelector(expr)\n    : expr || null;\n}\n\nexport function createSVG(tag, attrs) {\n  const elem = document.createElementNS(\"http://www.w3.org/2000/svg\", tag);\n  for (let attr in attrs) {\n    if (attr === \"append_to\") {\n      const parent = attrs.append_to;\n      parent.appendChild(elem);\n    } else if (attr === \"innerHTML\") {\n      elem.innerHTML = attrs.innerHTML;\n    } else if (attr === 'clipPath') {\n      elem.setAttribute('clip-path', 'url(#' + attrs[attr] + ')');\n    } else {\n      elem.setAttribute(attr, attrs[attr]);\n    }\n  }\n  return elem;\n}\n\nexport function animateSVG(svgElement, attr, from, to) {\n  const animatedSvgElement = getAnimationElement(svgElement, attr, from, to);\n\n  if (animatedSvgElement === svgElement) {\n    // triggered 2nd time programmatically\n    // trigger artificial click event\n    const event = document.createEvent(\"HTMLEvents\");\n    event.initEvent(\"click\", true, true);\n    event.eventName = \"click\";\n    animatedSvgElement.dispatchEvent(event);\n  }\n}\n\nfunction getAnimationElement(\n  svgElement,\n  attr,\n  from,\n  to,\n  dur = \"0.4s\",\n  begin = \"0.1s\",\n) {\n  const animEl = svgElement.querySelector(\"animate\");\n  if (animEl) {\n    $.attr(animEl, {\n      attributeName: attr,\n      from,\n      to,\n      dur,\n      begin: \"click + \" + begin, // artificial click\n    });\n    return svgElement;\n  }\n\n  const animateElement = createSVG(\"animate\", {\n    attributeName: attr,\n    from,\n    to,\n    dur,\n    begin,\n    calcMode: \"spline\",\n    values: from + \";\" + to,\n    keyTimes: \"0; 1\",\n    keySplines: cubic_bezier(\"ease-out\"),\n  });\n  svgElement.appendChild(animateElement);\n\n  return svgElement;\n}\n\nfunction cubic_bezier(name) {\n  return {\n    ease: \".25 .1 .25 1\",\n    linear: \"0 0 1 1\",\n    \"ease-in\": \".42 0 1 1\",\n    \"ease-out\": \"0 0 .58 1\",\n    \"ease-in-out\": \".42 0 .58 1\",\n  }[name];\n}\n\n$.on = (element, event, selector, callback) => {\n  if (!callback) {\n    callback = selector;\n    $.bind(element, event, callback);\n  } else {\n    $.delegate(element, event, selector, callback);\n  }\n};\n\n$.off = (element, event, handler) => {\n  element.removeEventListener(event, handler);\n};\n\n$.bind = (element, event, callback) => {\n  event.split(/\\s+/).forEach(function (event) {\n    element.addEventListener(event, callback);\n  });\n};\n\n$.delegate = (element, event, selector, callback) => {\n  element.addEventListener(event, function (e) {\n    const delegatedTarget = e.target.closest(selector);\n    if (delegatedTarget) {\n      e.delegatedTarget = delegatedTarget;\n      callback.call(this, e, delegatedTarget);\n    }\n  });\n};\n\n$.closest = (selector, element) => {\n  if (!element) return null;\n\n  if (element.matches(selector)) {\n    return element;\n  }\n\n  return $.closest(selector, element.parentNode);\n};\n\n$.attr = (element, attr, value) => {\n  if (!value && typeof attr === \"string\") {\n    return element.getAttribute(attr);\n  }\n\n  if (typeof attr === \"object\") {\n    for (let key in attr) {\n      $.attr(element, key, attr[key]);\n    }\n    return;\n  }\n\n  element.setAttribute(attr, value);\n};\n\n$.throttle = function (delay, noTrailing, callback, debounceMode) {\n    // After wrapper has stopped being called, this timeout ensures that\n    // `callback` is executed at the proper times in `throttle` and `end`\n    // debounce modes.\n    var timeoutID;\n\n    // Keep track of the last time `callback` was executed.\n    var lastExec = 0;\n\n    // `noTrailing` defaults to falsy.\n    if (typeof noTrailing !== 'boolean') {\n        debounceMode = callback;\n        callback = noTrailing;\n        noTrailing = undefined;\n    }\n\n    // The `wrapper` function encapsulates all of the throttling / debouncing\n    // functionality and when executed will limit the rate at which `callback`\n    // is executed.\n    function wrapper() {\n        var self = this;\n        var elapsed = Number(new Date()) - lastExec;\n        var args = arguments;\n\n        // Execute `callback` and update the `lastExec` timestamp.\n        function exec() {\n            lastExec = Number(new Date());\n            callback.apply(self, args);\n        }\n\n        // If `debounceMode` is true (at begin) this is used to clear the flag\n        // to allow future `callback` executions.\n        function clear() {\n            timeoutID = undefined;\n        }\n\n        if (debounceMode && !timeoutID) {\n            // Since `wrapper` is being called for the first time and\n            // `debounceMode` is true (at begin), execute `callback`.\n            exec();\n        }\n\n        // Clear any existing timeout.\n        if (timeoutID) {\n            clearTimeout(timeoutID);\n        }\n\n        if (debounceMode === undefined && elapsed > delay) {\n            // In throttle mode, if `delay` time has been exceeded, execute\n            // `callback`.\n            exec();\n        } else if (noTrailing !== true) {\n            // In trailing throttle mode, since `delay` time has not been\n            // exceeded, schedule `callback` to execute `delay` ms after most\n            // recent execution.\n            //\n            // If `debounceMode` is true (at begin), schedule `clear` to execute\n            // after `delay` ms.\n            //\n            // If `debounceMode` is false (at end), schedule `callback` to\n            // execute after `delay` ms.\n            timeoutID = setTimeout(\n                debounceMode ? clear : exec,\n                debounceMode === undefined ? delay - elapsed : delay,\n            );\n        }\n    }\n\n    // Return the wrapper function.\n    return wrapper;\n};\n","export const VIEW_MODE = {\n  HOUR: \"Hour\",\n  QUARTER_DAY: \"Quarter Day\",\n  HALF_DAY: \"Half Day\",\n  DAY: \"Day\",\n  WEEK: \"Week\",\n  MONTH: \"Month\",\n  QUARTER_YEAR: \"Quarter Year\",\n  YEAR: \"Year\",\n};\n\nexport const getLang = function(lan) {\n  if (lan === 'zh') {\n    return LAN_ZH;\n  } else {\n    return LAN_EN;\n  }\n}\n\nexport const LAN_ZH = {\n  HOUR: \"时\",\n  QUARTER_DAY: \"季时\",\n  HALF_DAY: \"半天\",\n  DAY: \"日\",\n  WEEK: \"周\",\n  MONTH: \"月\",\n  QUARTER_YEAR: \"季\",\n  YEAR: \"年\",\n  TODAY: \"今天\"\n};\n\nexport const LAN_EN = {\n  HOUR: 'Hour',\n  QUARTER_DAY: 'Quarter Day',\n  HALF_DAY: 'Half Day',\n  DAY: 'Day',\n  WEEK: 'Week',\n  MONTH: 'Month',\n  QUARTER_YEAR: 'Quarter Year',\n  YEAR: 'Year',\n  TODAY: \"Today\"\n};","import date_utils from \"./date_utils\";\nimport { $, createSVG, animateSVG } from \"./svg_utils\";\nimport { VIEW_MODE } from \"./lang_utils\";\n\nexport default class Bar {\n  constructor(gantt, task) {\n    this.set_defaults(gantt, task);\n    this.prepare();\n    this.draw();\n    this.bind();\n  }\n\n  set_defaults(gantt, task) {\n    this.action_completed = false;\n    this.gantt = gantt;\n    this.task = task;\n  }\n\n  prepare() {\n    this.prepare_doms();\n    this.prepare_values();\n    this.prepare_helpers();\n  }\n\n  prepare_doms() {\n    this.group = createSVG(\"g\", {\n      class: \"bar-wrapper\" + (this.task.custom_class ? \" \" + this.task.custom_class : \"\") + (this.task.important ? ' important' : ''),\n      \"data-id\": this.task.id,\n    });\n    this.bar_group = createSVG(\"g\", {\n      class: \"bar-group\",\n      append_to: this.group,\n    });\n    this.handle_group = createSVG(\"g\", {\n      class: \"handle-group\",\n      append_to: this.group,\n    });\n  }\n\n  prepare_values() {\n    this.empty = this.task.empty;\n    this.invalid = this.task.invalid;\n    this.height = this.gantt.options.bar_height;\n    this.image_size = this.height - 5;\n    this.compute_x();\n    this.compute_y();\n    this.compute_duration();\n    this.corner_radius = this.gantt.options.bar_corner_radius;\n    this.width = this.gantt.options.column_width * this.duration;\n    this.progress_width =\n      this.gantt.options.column_width *\n      this.duration *\n      (this.task.progress / 100) || 0;\n  }\n\n  prepare_helpers() {\n    SVGElement.prototype.getX = function () {\n      return +this.getAttribute(\"x\");\n    };\n    SVGElement.prototype.getY = function () {\n      return +this.getAttribute(\"y\");\n    };\n    SVGElement.prototype.getWidth = function () {\n      return +this.getAttribute(\"width\");\n    };\n    SVGElement.prototype.getHeight = function () {\n      return +this.getAttribute(\"height\");\n    };\n    SVGElement.prototype.getEndX = function () {\n      return this.getX() + this.getWidth();\n    };\n  }\n\n  prepare_expected_progress_values() {\n    this.compute_expected_progress();\n    this.expected_progress_width =\n      this.gantt.options.column_width *\n      this.duration *\n      (this.expected_progress / 100) || 0;\n  }\n\n  draw() {\n    if (this.empty) return;\n    this.draw_bar();\n    this.draw_progress_bar();\n    if (this.gantt.options.show_expected_progress) {\n      this.prepare_expected_progress_values();\n      this.draw_expected_progress_bar();\n    }\n    this.draw_label();\n    this.draw_resize_handles();\n\n    if (this.task.thumbnail) {\n      this.draw_thumbnail();\n    }\n  }\n\n  draw_bar() {\n    this.$bar = createSVG(\"rect\", {\n      x: this.x,\n      y: this.y,\n      width: this.width,\n      height: this.height,\n      rx: this.corner_radius,\n      ry: this.corner_radius,\n      class: \"bar-inner\",\n      append_to: this.bar_group,\n    });\n\n    animateSVG(this.$bar, \"width\", 0, this.width);\n\n    if (this.invalid) {\n      this.$bar.classList.add(\"bar-invalid\");\n    }\n  }\n\n  draw_expected_progress_bar() {\n    if (this.invalid) return;\n    this.$expected_bar_progress = createSVG(\"rect\", {\n      x: this.x,\n      y: this.y,\n      width: this.expected_progress_width,\n      height: this.height,\n      rx: this.corner_radius,\n      ry: this.corner_radius,\n      class: \"bar-expected-progress\",\n      append_to: this.bar_group,\n    });\n\n    animateSVG(\n      this.$expected_bar_progress,\n      \"width\",\n      0,\n      this.expected_progress_width,\n    );\n  }\n\n  draw_progress_bar() {\n    if (this.invalid) return;\n    this.$bar_progress = createSVG(\"rect\", {\n      x: this.x,\n      y: this.y,\n      width: this.progress_width,\n      height: this.height,\n      rx: this.corner_radius,\n      ry: this.corner_radius,\n      class: \"bar-progress\",\n      append_to: this.bar_group,\n    });\n    animateSVG(this.$bar_progress, \"width\", 0, this.progress_width);\n  }\n\n  draw_label() {\n    let x_coord = this.x + this.$bar.getWidth() / 2;\n\n    if (this.task.thumbnail) {\n      x_coord = this.x + 10 + this.image_size + 5;\n    }\n\n    createSVG(\"text\", {\n      x: x_coord,\n      y: this.y + this.height / 2,\n      innerHTML: this.task.name,\n      class: \"bar-label\",\n      append_to: this.bar_group,\n    });\n    // labels get BBox in the next tick\n    requestAnimationFrame(() => this.update_label_position());\n  }\n\n  draw_thumbnail() {\n    let x_offset = 10, y_offset = 2;\n    let defs, clipPath;\n\n    defs = createSVG('defs', {\n      append_to: this.bar_group\n    });\n\n    createSVG('rect', {\n      id: 'rect_' + this.task.id,\n      x: this.x + x_offset,\n      y: this.y + y_offset,\n      width: this.image_size,\n      height: this.image_size,\n      rx: '15',\n      class: 'img_mask',\n      append_to: defs\n    });\n\n    clipPath = createSVG('clipPath', {\n      id: 'clip_' + this.task.id,\n      append_to: defs\n    });\n\n    createSVG('use', {\n      href: '#rect_' + this.task.id,\n      append_to: clipPath\n    });\n\n    createSVG('image', {\n      x: this.x + x_offset,\n      y: this.y + y_offset,\n      width: this.image_size,\n      height: this.image_size,\n      class: 'bar-img',\n      href: this.task.thumbnail,\n      clipPath: 'clip_' + this.task.id,\n      append_to: this.bar_group\n    });\n  }\n\n  draw_resize_handles() {\n    if (this.gantt.options.readonly) return;\n\n    const bar = this.$bar;\n    const handle_width = this.gantt.options.handle_width;\n\n    const gw = bar.getWidth();\n\n    createSVG(\"rect\", {\n      x: bar.getX() + 1,\n      y: bar.getY() + 1,\n      width: handle_width,\n      height: this.height - 2,\n      rx: this.corner_radius,\n      ry: this.corner_radius,\n      class: \"handle left\",\n      append_to: this.handle_group,\n    });\n\n    createSVG(\"rect\", {\n      x: bar.getX() + (gw > handle_width ? (gw - handle_width - 1) : gw),\n      y: bar.getY() + 1,\n      width: handle_width,\n      height: this.height - 2,\n      rx: this.corner_radius,\n      ry: this.corner_radius,\n      class: \"handle right\",\n      append_to: this.handle_group,\n    });\n\n    if (this.gantt.options.drag_bar_progress) {\n      this.$handle_progress = createSVG('polygon', {\n        points: this.get_progress_polygon_points().join(','),\n        class: 'handle progress',\n        append_to: this.handle_group,\n      });\n    }\n  }\n\n  get_progress_polygon_points() {\n    const bar_progress = this.$bar_progress;\n    if (!bar_progress) return [];\n    let icon_width = 10;\n    let icon_height = 15;\n\n    return [\n      bar_progress.getEndX() - icon_width / 2,\n      bar_progress.getY() + bar_progress.getHeight() / 2,\n\n      bar_progress.getEndX(),\n      bar_progress.getY() + bar_progress.getHeight() / 2 - icon_height / 2,\n\n      bar_progress.getEndX() + icon_width / 2,\n      bar_progress.getY() + bar_progress.getHeight() / 2,\n\n      bar_progress.getEndX(),\n      bar_progress.getY() + bar_progress.getHeight() / 2 + icon_height / 2,\n\n      bar_progress.getEndX() - icon_width / 2,\n      bar_progress.getY() + bar_progress.getHeight() / 2,\n    ];\n  }\n\n  bind() {\n    this.setup_click_event();\n  }\n\n  setup_click_event() {\n    $.on(this.group, \"mouseover\", (e) => {\n      this.gantt.trigger_event(\"hover\", [this.task, e.screenX, e.screenY, e])\n    })\n\n    let timeout;\n    $.on(this.group, \"mouseenter\", (e) => timeout = setTimeout(() => {\n      const scrollLeft = this.gantt.$container_main.scrollLeft;\n      this.show_popup(e.offsetX - scrollLeft);\n    }, 600))\n\n    $.on(this.group, \"mouseleave\", () => {\n      clearTimeout(timeout)\n      this.gantt.hide_popup();\n    })\n\n    let clickTimeout;\n    let clickCount = 0;\n    $.on(this.group, 'click', () => {\n      if (this.action_completed) {\n        // just finished a move action, wait for a few seconds\n        return;\n      }\n\n      clickCount += 1;\n      if (clickCount === 1) {\n        clickTimeout = setTimeout(() => {\n            this.gantt.trigger_event('click', [this.task]);\n            clickCount = 0;\n        }, 250);\n      } else {\n        clearTimeout(clickTimeout);\n        clickCount = 0;\n      }\n    });\n\n    $.on(this.group, \"dblclick\", () => {\n      clearTimeout(clickTimeout);\n      clickCount = 0;\n      this.gantt.trigger_event(\"double_click\", [this.task]);\n    });\n  }\n\n  show_popup(x) {\n    if (this.gantt.bar_being_dragged) return;\n\n    const start_date = date_utils.format(\n      this.task._start,\n      \"MM月DD日\",\n      this.gantt.options.language,\n    );\n    const end_date = date_utils.format(\n      date_utils.add(this.task._end, -1, \"second\"),\n      \"MM月DD日\",\n      this.gantt.options.language,\n    );\n    const subtitle = `${start_date} -  ${end_date}<br/>Progress: ${this.task.progress}`;\n\n    this.gantt.show_popup({\n      x,\n      target_element: this.$bar,\n      title: this.task.name,\n      subtitle: subtitle,\n      task: this.task,\n    });\n  }\n\n  update_bar_task(task) {\n    this.action_completed = false;\n    this.task = task;\n    this.prepare_values();\n\n    const label = this.bar_group.querySelector('.bar-label')\n    if(label) label.innerHTML = task.name;\n  }\n\n  update_bar_vertical({ offset }) {\n    // recalculate\n    this.compute_y();\n\n    if (this.empty) return;\n    // update-bar_group\n    Array.prototype.forEach.call(this.bar_group.children, function (el, i) {\n      const y = $.attr(el, 'y') * 1;\n      el.setAttribute('y', y + offset);\n    });\n    // update-thumbnail\n    if (this.task.thumbnail) {\n      const $thumbnail = this.bar_group.querySelector('#rect_' + this.task.id);\n      const y = $.attr($thumbnail, 'y') * 1;\n      $thumbnail.setAttribute('y', y + offset);\n    }\n    // update-handle_group\n    Array.prototype.forEach.call(this.handle_group.children, function (el, i, arr) {\n      const y = $.attr(el, 'y') * 1;\n      el.setAttribute('y', y + offset);\n    });\n    // update-polygon\n    const $handle = this.$handle_progress;\n    if ($handle) {\n      $handle.setAttribute('points', this.get_progress_polygon_points());\n    }\n  }\n\n  update_bar_position({ x = null, width = null }) {\n    const bar = this.$bar;\n    if (x != undefined) {\n      if (this.gantt.options.drag_limit_child) {\n        // get all x values of parent task\n        const xs = this.task.dependencies.map((dep) => {\n          return this.gantt.get_bar(dep).$bar.getX();\n        });\n        // child task must not go before parent\n        const valid_x = xs.reduce((_, curr) => {\n          return x >= curr;\n        }, x);\n\n        if (!valid_x) {\n          width = null;\n          return;\n        }\n      }\n\n      this.update_attr(bar, \"x\", x);\n      if (this.$date_highlight) this.$date_highlight.style.left = x + 'px';\n    }\n    if (width) {\n      this.update_attr(bar, \"width\", width);\n      if (this.$date_highlight) this.$date_highlight.style.width = width + 'px';\n    }\n    this.update_label_position();\n    this.update_handle_position();\n    if (this.gantt.options.show_expected_progress) {\n      this.date_changed();\n      this.compute_duration();\n      this.update_expected_progressbar_position();\n    }\n    this.update_progressbar_position();\n    this.update_arrow_position();\n  }\n\n  update_label_position_on_horizontal_scroll({ x, sx }) {\n    const container = document.querySelector('.gantt-container');\n    const label = this.group.querySelector('.bar-label');\n    const img = this.group.querySelector('.bar-img') || '';\n    const img_mask = this.bar_group.querySelector('.img_mask') || '';\n\n    let barWidthLimit = this.$bar.getX() + this.$bar.getWidth();\n    let newLabelX = label.getX() + x;\n    let newImgX = img && img.getX() + x || 0;\n    let imgWidth = img && img.getBBox().width + 7 || 7;\n    let labelEndX = newLabelX + label.getBBox().width + 7;\n    let viewportCentral = sx + container.clientWidth / 2;\n\n    if (label.classList.contains('big')) return;\n\n    if (labelEndX < barWidthLimit && x > 0 && labelEndX < viewportCentral) {\n      label.setAttribute('x', newLabelX);\n      if (img) {\n        img.setAttribute('x', newImgX);\n        img_mask.setAttribute('x', newImgX);\n      }\n    } else if ((newLabelX - imgWidth) > this.$bar.getX() && x < 0 && labelEndX > viewportCentral) {\n      label.setAttribute('x', newLabelX);\n      if (img) {\n        img.setAttribute('x', newImgX);\n        img_mask.setAttribute('x', newImgX);\n      }\n    }\n  }\n\n  date_changed() {\n    let changed = false;\n    const { new_start_date, new_end_date } = this.compute_start_end_date();\n\n    if (Number(this.task._start) !== Number(new_start_date)) {\n      changed = true;\n      this.task._start = new_start_date;\n    }\n\n    if (Number(this.task._end) !== Number(new_end_date)) {\n      changed = true;\n      this.task._end = new_end_date;\n    }\n\n    if (!changed) return;\n\n    if (this.invalid) {\n      this.invalid = false;\n      this.task.invalid = false;\n      this.$bar.classList.remove('bar-invalid');\n    }\n\n    this.gantt.trigger_event(\"date_change\", [\n      this.task,\n      new_start_date,\n      date_utils.add(new_end_date, -1, \"second\"),\n    ]);\n  }\n\n  progress_changed() {\n    const new_progress = this.compute_progress();\n    this.task.progress = new_progress;\n    this.gantt.trigger_event(\"progress_change\", [this.task, new_progress]);\n  }\n\n  set_action_completed() {\n    this.action_completed = true;\n    setTimeout(() => (this.action_completed = false), 800);\n  }\n\n  compute_start_end_date() {\n    const bx = this.$bar.getX();\n    const bw = this.$bar.getWidth();\n\n    const new_start_date = this.gantt.get_snap_date(bx, this.gantt.gantt_start);\n    const new_end_date = this.gantt.get_snap_date(bw, new_start_date);\n\n    return { new_start_date, new_end_date };\n  }\n\n  compute_progress() {\n    const progress =\n      (this.$bar_progress.getWidth() / this.$bar.getWidth()) * 100;\n    return parseInt(progress, 10);\n  }\n\n  compute_expected_progress() {\n    this.expected_progress =\n      date_utils.diff(date_utils.today(), this.task._start, \"hour\") /\n      this.gantt.options.step;\n    // Revision date after today\n    if (this.expected_progress < 0) {\n      this.expected_progress = 0;\n    }\n    this.expected_progress =\n      ((this.expected_progress < this.duration\n        ? this.expected_progress\n        : this.duration) *\n        100) /\n      this.duration;\n  }\n\n  compute_x() {\n    const { step, column_width } = this.gantt.options;\n    const task_start = this.task._start;\n    const gantt_start = this.gantt.gantt_start;\n\n    const diff = date_utils.diff(task_start, gantt_start, \"hour\");\n    let x = (diff / step) * column_width;\n\n    if (this.gantt.view_is(VIEW_MODE.MONTH)) {\n      const diff = date_utils.diff(task_start, gantt_start, \"day\");\n      x = (diff * column_width) / 30;\n    }\n    this.x = x;\n  }\n\n  compute_y() {\n    this.y = this.gantt.options.padding / 2 +\n      this.task._index * (this.height + this.gantt.options.padding);\n  }\n\n  compute_duration() {\n    this.duration =\n      date_utils.diff(this.task._end, this.task._start, \"hour\") /\n      this.gantt.options.step;\n  }\n\n  update_attr(element, attr, value) {\n    value = +value;\n    if (!isNaN(value)) {\n      element.setAttribute(attr, value);\n    }\n    return element;\n  }\n\n  update_expected_progressbar_position() {\n    if (!this.$expected_bar_progress) return;\n\n    this.$expected_bar_progress.setAttribute(\"x\", this.$bar.getX());\n    this.compute_expected_progress();\n    this.$expected_bar_progress.setAttribute(\n      \"width\",\n      this.gantt.options.column_width *\n      this.duration *\n      (this.expected_progress / 100) || 0,\n    );\n  }\n\n  update_progressbar_position() {\n    if (this.gantt.options.readonly) return;\n    if (!this.$bar_progress) return;\n\n    this.$bar_progress.setAttribute(\"x\", this.$bar.getX());\n    this.$bar_progress.setAttribute(\n      \"width\",\n      this.$bar.getWidth() * (this.task.progress / 100),\n    );\n\n    const $handle = this.$handle_progress;\n    if ($handle) {\n      $handle.setAttribute('points', this.get_progress_polygon_points());\n    }\n  }\n\n  update_label_position() {\n    const img_mask = this.bar_group.querySelector('.img_mask');\n    const bar = this.$bar,\n      label = this.group.querySelector(\".bar-label\"),\n      img = this.group.querySelector('.bar-img');\n\n    let x_offset = 10;\n    let x_offset_label_img = this.image_size + 5;\n    const barWidth = bar.getWidth();\n    const labelWidth = label.getBBox().width;\n    const contentWidth = labelWidth + (img ? x_offset_label_img : 0);\n    if (contentWidth + x_offset > barWidth) {\n      label.classList.add(\"big\");\n      if (img) {\n        img.setAttribute('x', bar.getX() + barWidth + x_offset);\n        img_mask.setAttribute('x', bar.getX() + barWidth + x_offset);\n        label.setAttribute('x', bar.getX() + barWidth + x_offset + x_offset_label_img);\n      } else {\n        label.setAttribute('x', bar.getX() + barWidth + x_offset);\n      }\n    } else {\n      label.classList.remove(\"big\");\n      if (img) {\n        img.setAttribute('x', bar.getX() + x_offset);\n        img_mask.setAttribute('x', bar.getX() + x_offset);\n        label.setAttribute('x', bar.getX() + x_offset + x_offset_label_img);\n      } else {\n        label.setAttribute('x', bar.getX() + barWidth / 2 - contentWidth / 2);\n      }\n    }\n  }\n\n  update_handle_position() {\n    if (this.gantt.options.readonly) return;\n    const bar = this.$bar;\n    const handle_width = this.gantt.options.handle_width;\n\n    this.handle_group\n      .querySelector(\".handle.left\")\n      .setAttribute(\"x\", bar.getX() + 1);\n    this.handle_group\n      .querySelector(\".handle.right\")\n      .setAttribute(\"x\", bar.getEndX() - handle_width - 1);\n  }\n\n  update_arrow_position() {\n    this.arrows = this.arrows || [];\n    for (let arrow of this.arrows) {\n      arrow.update();\n    }\n  }\n}\n","import { createSVG } from \"./svg_utils\";\n\nexport default class Arrow {\n  constructor(gantt, from_task, to_task) {\n    this.gantt = gantt;\n    this.from_task = from_task;\n    this.to_task = to_task;\n\n    this.calculate_path();\n    this.draw();\n    this.drawInner();\n  }\n\n  calculate_path() {\n    if (this.from_task.empty || this.to_task.empty) return;\n\n    const rowHeight = this.gantt.options.bar_height + this.gantt.options.padding;\n    const taskHeight = this.gantt.options.bar_height;\n    const arrowCurve = this.gantt.options.arrow_curve;\n    // const arrowIndent = this.gantt.options.column_width / 2;\n    const arrowIndent = 19; // fixed indent\n    const taskFrom = this.from_task;\n    const taskTo = this.to_task;\n\n    const taskFromX2 = taskFrom.$bar.getEndX();\n    const taskFromY1 = taskFrom.$bar.getY();\n    const taskToX1 = taskTo.$bar.getX();\n    const taskToY1 = taskTo.$bar.getY();\n\n    const indexCompare = taskFrom.task._index > taskTo.task._index ? -1 : 1;\n    const taskToEndPosition = taskToY1 + taskHeight / 2;\n    const taskFromEndPosition = taskFromX2 + arrowIndent * 2;\n\n    const taskFromHorizontalOffsetValue =\n        taskFromEndPosition < taskToX1 ? '' : `H ${taskToX1 - arrowIndent}`;\n    const taskToHorizontalOffsetValue =\n        taskFromEndPosition > taskToX1\n            ? arrowIndent\n            : taskToX1 - taskFromX2 - arrowIndent;\n\n    const path = `M ${taskFromX2} ${taskFromY1 + taskHeight / 2}\n    h ${arrowIndent}\n    v ${(indexCompare * rowHeight) / 2}\n    ${taskFromHorizontalOffsetValue}\n    V ${taskToEndPosition}\n    h ${taskToHorizontalOffsetValue}`;\n\n    const trianglePoints = `${taskToX1},${taskToEndPosition}\n    ${taskToX1 - arrowCurve},${taskToEndPosition - arrowCurve}\n    ${taskToX1 - arrowCurve},${taskToEndPosition + arrowCurve}`;\n\n    this.path = path;\n\n    this.points = trianglePoints;\n  }\n\n  draw() {\n    this.element = createSVG(\"g\", {\n      \"data-from\": this.from_task.task.id,\n      \"data-to\": this.to_task.task.id,\n    });\n  }\n\n  drawInner() {\n    if (this.from_task.empty || this.to_task.empty) return;\n\n    this.svgPath = createSVG(\"path\", {\n      d: this.path,\n      fill: \"none\",\n      append_to: this.element\n    });\n    this.svgPolygon = createSVG(\"polygon\", {\n      points: this.points,\n      append_to: this.element,\n    });\n  }\n\n  update() {\n    if (this.from_task.empty || this.to_task.empty) return;\n\n    this.calculate_path();\n    this.svgPath.setAttribute(\"d\", this.path);\n    this.svgPolygon.setAttribute(\"points\", this.points);\n  }\n}\n","export default class Popup {\n  constructor(gantt, parent) {\n    this.gantt = gantt;\n    this.parent = parent;\n    this.custom_html = gantt.options.popup;\n    this.make();\n  }\n\n  make() {\n    this.parent.innerHTML = `\n        <div class=\"title\"></div>\n        <div class=\"subtitle\"></div>\n        <div class=\"pointer\"></div>\n    `;\n\n    this.hide();\n\n    this.title = this.parent.querySelector(\".title\");\n    this.subtitle = this.parent.querySelector(\".subtitle\");\n    this.pointer = this.parent.querySelector(\".pointer\");\n  }\n\n  show(options) {\n    if (!options.target_element) {\n      throw new Error(\"target_element is required to show popup\");\n    }\n    const target_element = options.target_element;\n\n    if (typeof this.custom_html === 'function') {\n      let html = this.custom_html(options.task);\n      html += '<div class=\"pointer\"></div>';\n      this.parent.innerHTML = html;\n      this.pointer = this.parent.querySelector(\".pointer\");\n    } else {\n      // set data\n      this.title.innerHTML = options.title;\n      this.subtitle.innerHTML = options.subtitle;\n    }\n\n    // set position\n    let position_meta;\n    if (target_element instanceof HTMLElement) {\n      position_meta = target_element.getBoundingClientRect();\n    } else if (target_element instanceof SVGElement) {\n      position_meta = target_element.getBBox();\n    }\n    const parentWidth = this.parent.clientWidth;\n    const parentHeight = this.parent.clientHeight;\n    const ganttOptions = this.gantt.options;\n    const ganttWidth = this.gantt.$container.clientWidth;\n    const ganttHeight = this.gantt.$container.clientHeight;\n\n    const dy = this.gantt.$container_main.scrollTop;\n\n    // get position\n    let pos_x = options.x - parentWidth / 2;\n    let pos_y =\n        position_meta.y +\n        position_meta.height +\n        ganttOptions.header_height -\n        dy +\n        10;\n\n    if (pos_y > ganttHeight - parentHeight) {\n      pos_y = position_meta.y - parentHeight - 10 - dy + ganttOptions.header_height;\n    }\n\n    if (pos_x > ganttWidth - parentWidth) {\n      const diff = pos_x - (ganttWidth - parentWidth - 5);\n      pos_x -= diff;\n    }\n\n    if (pos_x < 0) {\n      pos_x = 2\n    }\n\n    this.parent.style.left = pos_x + \"px\";\n    this.parent.style.top = pos_y + \"px\";\n\n    this.pointer.style.left = parentWidth / 2 + 'px';\n    this.pointer.style.top = \"-15px\";\n\n    // show\n    this.parent.style.display = \"block\";\n  }\n\n  hide() {\n    this.parent.style.display = \"none\";\n    this.parent.style.left = 0;\n  }\n}\n","export default class Backdrop {\n  constructor(parent) {\n    this.parent = parent;\n    this.make();\n  }\n\n  make() {\n    this.parent.innerHTML = `\n      <div class=\"gantt-drag-mask\">\n        <div class=\"date-range\"></div>\n      </div>\n    `;\n\n    // this.hide();\n\n    this.drag_mask = this.parent.querySelector('.gantt-drag-mask');\n    this.date_range = this.parent.querySelector('.date-range');\n  }\n\n  showAt({ x, width, range }) {\n    if (range && range.length) {\n      const htmlHold = `<span>${range[0]}</span><span>${range[1]}</span>`;\n      this.date_range.innerHTML = htmlHold;\n    }\n\n    this.drag_mask.style.left = x + 'px';\n    this.drag_mask.style.width = width + 'px';\n\n    this.show();\n  }\n\n  show() {\n    this.parent.style.display = 'block';\n    this.drag_mask.style.display = 'block';\n  }\n\n  hide() {\n    this.parent.style.display = \"none\";\n    this.drag_mask.style.display = \"none\";\n  }\n}","import date_utils from './date_utils';\nimport { $, createSVG } from './svg_utils';\nimport { getLang, VIEW_MODE } from './lang_utils';\nimport Bar from './bar';\nimport Arrow from './arrow';\nimport Popup from './popup';\nimport Backdrop from './backdrop';\n\nimport './gantt.scss';\n\nconst VIEW_MODE_PADDING = {\n  HOUR: ['7d', '7d'],\n  QUARTER_DAY: ['7d', '7d'],\n  HALF_DAY: ['7d', '7d'],\n  DAY: ['1m', '1m'],\n  WEEK: ['1m', '1m'],\n  MONTH: ['1m', '1m'],\n  QUARTER_YEAR: ['3m', '3m'],\n  YEAR: ['1y', '1y'],\n};\n\nconst TICK_LINE = {\n  BOTH: 'both',\n  HORIZONTAL: 'horizontal',\n  VERTICAL: 'vertical',\n};\n\nconst DEFAULT_OPTIONS = {\n  header_height: 65,\n  header_tick: false,\n  // column_width: 30,\n  // step: 24,\n  bar_height: 30,\n  bar_corner_radius: 3,\n  arrow_curve: 5,\n  handle_width: 8,\n  padding: 18,\n  view_modes: [...Object.values(VIEW_MODE)],\n  view_mode: VIEW_MODE.DAY,\n  popup_trigger: 'click',\n  show_expected_progress: false,\n  dependencies: 'arrow',\n  drag_ignore_hours: true,\n  drag_bar_progress: true,\n  drag_sync_child: false,\n  drag_limit_child: false,\n  popup: null,\n  language: 'en',\n  readonly: false,\n  highlight_weekend: true,\n  scroll_to: 'start',\n  lines: TICK_LINE.BOTH,\n  auto_move_label: true,\n  today_button: true,\n  view_mode_select: false,\n};\n\nexport default class Gantt {\n  constructor(wrapper, tasks, options) {\n    this.setup_wrapper(wrapper);\n    this.setup_options(options);\n    this.setup_tasks(tasks);\n    // initialize with default view mode\n    this.change_view_mode();\n    this.bind_events();\n  }\n\n  setup_wrapper(element) {\n    let svg_element, wrapper_element;\n\n    // CSS Selector is passed\n    if (typeof element === 'string') {\n      element = document.querySelector(element);\n    }\n\n    // get the SVGElement\n    if (element instanceof HTMLElement) {\n      wrapper_element = element;\n      svg_element = element.querySelector('svg');\n    } else if (element instanceof SVGElement) {\n      svg_element = element;\n    } else {\n      throw new TypeError(\n        'Frappé Gantt only supports usage of a string CSS selector,' +\n          \" HTML DOM element or SVG DOM element for the 'element' parameter\",\n      );\n    }\n\n    // svg element\n    if (!svg_element) {\n      // create it\n      this.$svg = createSVG('svg', {\n        append_to: wrapper_element,\n        class: 'gantt',\n      });\n    } else {\n      this.$svg = svg_element;\n      this.$svg.classList.add('gantt');\n    }\n\n    // container element\n    this.$container = document.createElement('div');\n    this.$container.classList.add('gantt-container');\n\n    // 1.header horizontal-scroll\n    this.$container_header = document.createElement('div');\n    this.$container_header.classList.add('gantt-container_header');\n    this.$container.appendChild(this.$container_header);\n\n    // 2.main vertical-scroll\n    this.$container_main = document.createElement('div');\n    this.$container_main.classList.add('gantt-container_main');\n    this.$container.appendChild(this.$container_main);\n\n    // 3. svg appendTo wrapper\n    const parent_element = this.$svg.parentElement;\n    parent_element.appendChild(this.$container);\n    this.$container_main.appendChild(this.$svg);\n\n    // 4. toobar wrapper\n    this.$container_toolbar = document.createElement('div');\n    this.$container_toolbar.classList.add('gantt-container_toolbar');\n    this.$container.appendChild(this.$container_toolbar);\n\n    // 5.popup wrapper\n    this.$popup_wrapper = document.createElement('div');\n    this.$popup_wrapper.classList.add('gantt-popup-wrapper');\n    this.$container.appendChild(this.$popup_wrapper);\n\n    // 6.backdrop wrapper\n    this.$drag_backdrop = document.createElement('div');\n    this.$drag_backdrop.classList.add('gantt-drag-backdrop');\n    this.$container.appendChild(this.$drag_backdrop);\n  }\n\n  setup_options(options) {\n    this.options = { ...DEFAULT_OPTIONS, ...options };\n    if (!options.view_mode_padding) options.view_mode_padding = {};\n    for (let [key, value] of Object.entries(options.view_mode_padding)) {\n      if (typeof value === 'string') {\n        // Configure for single value given\n        options.view_mode_padding[key] = [value, value];\n      }\n    }\n\n    this.options.view_mode_padding = {\n      ...VIEW_MODE_PADDING,\n      ...options.view_mode_padding,\n    };\n  }\n\n  setup_tasks(tasks) {\n    // prepare tasks\n    this.tasks = tasks.map((task, i) => {\n      return this.format_task(task, i);\n    });\n\n    this.setup_dependencies();\n  }\n\n  setup_dependencies() {\n    this.dependency_map = {};\n    for (let t of this.tasks) {\n      this.format_dependency(t);\n    }\n  }\n\n  format_task(task, i) {\n    // reset symbol\n    task.empty = false;\n    task.invalid = false;\n    task.progress = task.progress || 0;\n\n    // convert to Date objects\n    task._start = date_utils.parse(task.start);\n    if (task.end === undefined && task.duration !== undefined) {\n      task.end = task._start;\n      let durations = task.duration.split(' ');\n\n      durations.forEach((tmpDuration) => {\n        let { duration, scale } = date_utils.parse_duration(tmpDuration);\n        task.end = date_utils.add(task.end, duration, scale);\n      });\n    }\n    task._end = date_utils.parse(task.end);\n    let diff = date_utils.diff(task._end, task._start, 'year');\n    if (diff < 0) {\n      throw Error(\n        \"start of task can't be after end of task: in task #, \" + (i + 1),\n      );\n    }\n    // make task invalid if duration too large\n    if (date_utils.diff(task._end, task._start, 'year') > 10) {\n      task.end = null;\n    }\n\n    // cache index\n    task._index = i;\n\n    // invalid flag\n    if (!task.start) {\n      task.invalid = 'start';\n    }\n    if (!task.end) {\n      task.invalid = 'end';\n    }\n    if (!task.start && !task.end) {\n      task._start = null;\n      task._end = null;\n      task.empty = true;\n      task.invalid = true;\n    }\n\n    // mock daterange\n    if (task.start && !task.end) {\n      task._end = date_utils.add(task._start, 2, 'day');\n    }\n    if (!task.start && task.end) {\n      task._start = date_utils.add(task._end, -2, 'day');\n    }\n\n    // if hours is not set, assume the last day is full day\n    // e.g: 2018-09-09 becomes 2018-09-09 23:59:59\n    if (task._end) {\n      const task_end_values = date_utils.get_date_values(task._end);\n      if (task_end_values.slice(3).every((d) => d === 0)) {\n        task._end = date_utils.add(task._end, 24, 'hour');\n      }\n    }\n\n    // dependencies\n    if (typeof task.dependencies === 'string' || !task.dependencies) {\n      let deps = [];\n      if (task.dependencies) {\n        deps = task.dependencies\n          .split(',')\n          .map((d) => d.trim().replaceAll(' ', '_'))\n          .filter((d) => d);\n      }\n      task.dependencies = deps;\n    }\n\n    // uids\n    if (!task.id) {\n      task.id = generate_id(task);\n    } else if (typeof task.id === 'string') {\n      task.id = task.id.replaceAll(' ', '_');\n    } else {\n      task.id = `${task.id}`;\n    }\n    return task;\n  }\n\n  format_dependency(task) {\n    for (let d of task.dependencies) {\n      this.dependency_map[d] = this.dependency_map[d] || [];\n      this.dependency_map[d].push(task.id);\n    }\n  }\n\n  refresh(tasks) {\n    this.setup_tasks(tasks);\n    this.change_view_mode();\n  }\n\n  update(task) {\n    const original = this.get_task(task.id);\n    // new object\n    const current = Object.keys(original).reduce((result, key) => {\n      const val = task[key];\n      result[key] = val === undefined ? original[key] : val;\n      return result;\n    }, {});\n\n    const update_task = this.format_task(current, original._index);\n\n    // empty daterange\n    if (original.empty || update_task.empty) {\n      this.replace(update_task, original);\n      return;\n    }\n\n    // invalid daterange\n    if (original.invalid !== update_task.invalid) {\n      this.replace(update_task, original);\n      return;\n    }\n\n    // update task\n    const bar = this.get_bar(update_task.id);\n    bar.update_bar_task(update_task);\n    this.tasks.splice(original._index, 1, update_task);\n\n    if (Number(original._start) !== Number(update_task._start)) {\n      // move-left\n      const start_date = date_utils.parse(update_task._start);\n      const dx = this.get_snap_distance(original._start, start_date);\n      bar.update_bar_position({\n        x: bar.$bar.getX() - dx,\n        width: bar.$bar.getWidth() + dx,\n      });\n    }\n\n    if (Number(original._end) !== Number(update_task._end)) {\n      // move-right\n      const end_date = date_utils.parse(update_task._end);\n      const dx = this.get_snap_distance(original._end, end_date);\n      bar.update_bar_position({\n        width: bar.$bar.getWidth() - dx,\n      });\n    }\n  }\n\n  remove(task) {\n    let index = null;\n    if (typeof task === 'object') {\n      const tid = `${task.id}`.replaceAll(' ', '_');\n      index = this.tasks.findIndex((item) => item.id === tid);\n    } else {\n      index = task;\n    }\n    if (index === -1 || index >= this.tasks.length) return;\n    const row_height = this.options.bar_height + this.options.padding;\n\n    // remove tasks bars\n    const remove_bar = this.bars[index];\n    this.layers.bar.removeChild(remove_bar.group);\n    this.tasks.splice(index, 1);\n    this.bars.splice(index, 1);\n\n    // resort task._index\n    let i = index;\n    while (i < this.tasks.length) {\n      this.tasks[i]._index = i;\n      this.bars[i].update_bar_vertical({ offset: -row_height });\n      i += 1;\n    }\n\n    // remove grid-row row-line\n    const $rows = this.layers.grid.querySelector('.rows_layer');\n    $rows.lastChild && $rows.removeChild($rows.lastChild);\n    const $lines = this.layers.grid.querySelector('.lines_layer');\n    $lines.lastChild && $lines.removeChild($lines.lastChild);\n\n    // redraw arrows\n    this.layers.arrow.innerHTML = '';\n    this.make_arrows();\n    this.map_arrows_on_bars();\n\n    // update grid_height\n    const grid_height = this.tasks.length * row_height;\n    this.$svg.setAttribute('height', grid_height);\n    this.$svg\n      .querySelector('.grid-background')\n      .setAttribute('height', grid_height);\n  }\n\n  insert(task, index) {\n    let target;\n    if (index === undefined) {\n      target = this.tasks.length; // default end\n    } else if (typeof index === 'object') {\n      target = this.tasks.findIndex((task) => task.id === index.id);\n      target += 1; // target task\n    } else {\n      target = index; // target index\n    }\n    const insert_task = this.format_task(task, target);\n    // resort task._index\n    let i = target;\n    while (i < this.tasks.length) {\n      this.tasks[i]._index = i + 1;\n      i += 1;\n    }\n    // insert task target\n    this.tasks.splice(target, 0, insert_task);\n    this.setup_dependencies();\n\n    // calculate daterange\n    let limit_start = null,\n      limit_end = null;\n    if (insert_task._start && insert_task._start < this.gantt_start) {\n      limit_start = insert_task._start;\n    }\n    if (insert_task._end && insert_task._end > this.gantt_end) {\n      limit_end = insert_task._end;\n    }\n    // out of limit date\n    if (limit_start || limit_end) {\n      this.update_gantt_dates({ start: limit_start, end: limit_end });\n    }\n\n    // update bars y\n    const row_height = this.options.bar_height + this.options.padding;\n    i = target;\n    while (i < this.bars.length) {\n      this.bars[i].update_bar_vertical({ offset: row_height });\n      i += 1;\n    }\n\n    // insert bar\n    const insert_bar = new Bar(this, insert_task);\n    const target_bar = this.bars[target + 1];\n    this.layers.bar.insertBefore(\n      insert_bar.group,\n      target_bar ? target_bar.group : null,\n    );\n    this.bars.splice(target, 0, insert_bar);\n\n    // append grid-row\n    const row_width = this.dates.length * this.options.column_width;\n    const insert_y = (this.tasks.length - 1) * row_height;\n    const $grid_el = this.layers.grid;\n    createSVG('rect', {\n      x: 0,\n      y: insert_y,\n      width: row_width,\n      height: row_height,\n      class: 'grid-row',\n      append_to: $grid_el.querySelector('.rows_layer'),\n    });\n    // append row-line\n    const $lines_layer = $grid_el.querySelector('.lines_layer');\n    if ($lines_layer) {\n      if (this.options.lines !== TICK_LINE.VERTICAL) {\n        createSVG('line', {\n          x1: 0,\n          y1: insert_y,\n          x2: row_width,\n          y2: insert_y,\n          class: 'row-line',\n          append_to: $lines_layer,\n        });\n      }\n    }\n\n    // redraw arrows\n    this.layers.arrow.innerHTML = '';\n    this.make_arrows();\n    this.map_arrows_on_bars();\n\n    // update grid_height\n    const grid_height = this.tasks.length * row_height;\n    this.$svg.setAttribute('height', grid_height);\n    this.$svg\n      .querySelector('.grid-background')\n      .setAttribute('height', grid_height);\n  }\n\n  replace(update_task, prev_task) {\n    // Bar\n    const update_bar = new Bar(this, update_task);\n\n    // remove old_bar from bars and bar-layers\n    const old_bar = this.bars[prev_task._index];\n    this.layers.bar.removeChild(old_bar.group);\n    this.bars.splice(prev_task._index, 1, update_bar);\n\n    // replace update_bar and update tasks\n    const target_postion = this.bars[prev_task._index + 1];\n    this.layers.bar.insertBefore(\n      update_bar.group,\n      target_postion ? target_postion.group : null,\n    );\n    this.tasks.splice(prev_task._index, 1, update_task);\n\n    // redraw arrows\n    this.layers.arrow.innerHTML = '';\n    this.make_arrows();\n    this.map_arrows_on_bars();\n  }\n\n  change_view_mode(mode = this.options.view_mode) {\n    const record_start = performance.now();\n    this.update_view_scale(mode);\n    this.setup_dates();\n    this.render();\n    const record_end = performance.now();\n    const record_time = record_end - record_start;\n    // fire viewmode_change event delay\n    this.trigger_event('view_change', [mode, record_time]);\n  }\n\n  update_view_scale(view_mode) {\n    this.options.view_mode = view_mode;\n    if (view_mode === VIEW_MODE.HOUR) {\n      this.options.step = 24 / 24;\n      this.options.column_width = 38;\n    } else if (view_mode === VIEW_MODE.QUARTER_DAY) {\n      this.options.step = 24 / 4;\n      this.options.column_width = 38;\n    } else if (view_mode === VIEW_MODE.HALF_DAY) {\n      this.options.step = 24 / 2;\n      this.options.column_width = 38;\n    } else if (view_mode === VIEW_MODE.DAY) {\n      this.options.step = 24;\n      this.options.column_width = 38;\n    } else if (view_mode === VIEW_MODE.WEEK) {\n      this.options.step = 24 * 7;\n      this.options.column_width = 140;\n    } else if (view_mode === VIEW_MODE.MONTH) {\n      this.options.step = 24 * 30;\n      this.options.column_width = 280;\n    } else if (view_mode === VIEW_MODE.QUARTER_YEAR) {\n      this.options.step = (24 * 365) / 4;\n      this.options.column_width = 400;\n    } else if (view_mode === VIEW_MODE.YEAR) {\n      this.options.step = 24 * 365;\n      this.options.column_width = 480;\n    }\n  }\n\n  setup_dates() {\n    this.setup_gantt_dates();\n    this.setup_date_values();\n  }\n\n  setup_gantt_dates() {\n    this.gantt_start = this.gantt_end = null;\n\n    for (let task of this.tasks) {\n      // set global start and end date\n      if (\n        !this.gantt_start ||\n        (task._start && task._start < this.gantt_start)\n      ) {\n        this.gantt_start = task._start;\n      }\n      if (!this.gantt_end || (task._end && task._end > this.gantt_end)) {\n        this.gantt_end = task._end;\n      }\n    }\n    let gantt_start, gantt_end;\n    if (!this.gantt_start) gantt_start = new Date();\n    else gantt_start = date_utils.start_of(this.gantt_start, 'day');\n    if (!this.gantt_end) gantt_end = new Date();\n    else gantt_end = date_utils.start_of(this.gantt_end, 'day');\n\n    // ensure today in daterange\n    const today = date_utils.today();\n    if (gantt_start > today) gantt_start = today;\n    if (gantt_end < today) gantt_end = today;\n\n    // pad date start and end\n    this.pad_gantt_dates(gantt_start, gantt_end);\n  }\n\n  pad_gantt_dates(start, end) {\n    // add date padding on both sides\n    let viewKey;\n    for (let [key, value] of Object.entries(VIEW_MODE)) {\n      if (value === this.options.view_mode) {\n        viewKey = key;\n      }\n    }\n    const [padding_start, padding_end] = this.options.view_mode_padding[\n      viewKey\n    ].map(date_utils.parse_duration);\n\n    const gantt_start = date_utils.add(\n      start,\n      -padding_start.duration,\n      padding_start.scale,\n    );\n\n    let format_string;\n    if (this.view_is(VIEW_MODE.YEAR)) {\n      format_string = 'YYYY';\n    } else if (this.view_is([VIEW_MODE.MONTH, VIEW_MODE.QUARTER_YEAR])) {\n      format_string = 'YYYY-MM';\n    } else if (this.view_is(VIEW_MODE.DAY)) {\n      format_string = 'YYYY-MM-DD';\n    } else {\n      format_string = 'YYYY-MM-DD HH';\n    }\n    this.gantt_start = date_utils.parse(\n      date_utils.format(gantt_start, format_string),\n    );\n    this.gantt_start.setHours(0, 0, 0, 0);\n\n    this.gantt_end = date_utils.add(\n      end,\n      padding_end.duration,\n      padding_end.scale,\n    );\n    this.gantt_end.setHours(0, 0, 0, 0);\n\n    // quarter_year start January end December\n    // if (this.view_is(VIEW_MODE.QUARTER_YEAR)) {\n    //   this.gantt_start = new Date(this.gantt_start.setMonth(0, 1));\n    //   this.gantt_end = new Date(this.gantt_end.setMonth(9, 1));\n    // }\n  }\n\n  setup_date_values() {\n    this.dates = [];\n    let cur_date = null;\n\n    while (cur_date === null || cur_date < this.gantt_end) {\n      if (!cur_date) {\n        cur_date = date_utils.clone(this.gantt_start);\n      } else {\n        if (this.view_is(VIEW_MODE.YEAR)) {\n          cur_date = date_utils.add(cur_date, 1, 'year');\n        } else if (this.view_is(VIEW_MODE.MONTH)) {\n          cur_date = date_utils.add(cur_date, 1, 'month');\n        } else if (this.view_is(VIEW_MODE.QUARTER_YEAR)) {\n          cur_date = date_utils.add(cur_date, 3, 'month');\n        } else {\n          cur_date = date_utils.add(cur_date, this.options.step, 'hour');\n        }\n      }\n      this.dates.push(cur_date);\n    }\n  }\n\n  update_gantt_dates({ start, end }) {\n    if (start && start < this.gantt_start) {\n      this.old_gantt_start = this.gantt_start;\n      const new_gantt_start = new Date(\n        date_utils.add(start, -1, 'day').setHours(0, 0, 0, 0),\n      );\n      const left_dates = this.get_left_dates(new_gantt_start, this.old_gantt_start);\n      console.log('ddd ==> gantt_update left_dates', left_dates);\n      this.gantt_start = left_dates[0];\n\n      const dx = this.get_snap_distance(this.old_gantt_start, this.gantt_start);\n      this.scale_grid(dx);\n      this.translate(dx);\n\n      this.update_gantt_left(left_dates);\n    }\n\n    if (end && end > this.gantt_end) {\n      this.old_gantt_end = this.gantt_end;\n      const new_gantt_end = new Date(\n        date_utils.add(end, 1, 'day').setHours(0, 0, 0, 0),\n      );\n      this.gantt_end = new_gantt_end;\n\n      const dx = this.get_snap_distance(new_gantt_end, this.old_gantt_end);\n      this.scale_grid(dx);\n\n      this.update_gantt_right();\n    }\n  }\n\n  update_gantt_left(left_dates) {\n    // 绘制\n    this.get_dates_to_draw(left_dates, null).forEach((date, i) => {\n      this.draw_date(date, i);\n    });\n    // 合并\n    this.dates = left_dates.concat(this.dates);\n    // 高亮\n    this.highlightWeekends(\n      this.gantt_start,\n      date_utils.add(this.old_gantt_start, -1, 'day'),\n    );\n    this.highlightToday();\n    // 线条\n    this.draw_col_tick(left_dates);\n  }\n\n  get_left_dates(start, end) {\n    const left_dates = [];\n\n    let start_temp = end;\n    while (start_temp > start) {\n      if (this.view_is(VIEW_MODE.YEAR)) {\n        start_temp = date_utils.add(start_temp, -1, 'year');\n      } else if (this.view_is(VIEW_MODE.MONTH)) {\n        start_temp = date_utils.add(start_temp, -1, 'month');\n      } else if (this.view_is(VIEW_MODE.QUARTER_YEAR)) {\n        start_temp = date_utils.add(start_temp, -3, 'month');\n      } else {\n        start_temp = date_utils.add(start_temp, -this.options.step, 'hour');\n      }\n\n      left_dates.unshift(start_temp);\n    }\n\n    return left_dates;\n  }\n\n  update_gantt_right() {\n    const initial_date = this.last_date_info.date;\n    const right_dates = this.get_right_dates(initial_date, this.gantt_end);\n    console.log('ddd ==> gantt_update right_dates', right_dates);\n    // 日期\n    this.get_dates_to_draw(right_dates, this.last_date_info).forEach(\n      (date, i) => {\n        this.last_date_info = date;\n        this.draw_date(date, i);\n      },\n    );\n    // 合并\n    this.dates = this.dates.concat(right_dates);\n    // 高亮\n    this.highlightWeekends(initial_date, this.gantt_end, true);\n    this.highlightToday();\n    // 线条\n    this.draw_col_tick(right_dates, initial_date);\n  }\n\n  get_right_dates(start, end) {\n    const right_dates = [];\n\n    let start_temp = start;\n    while (start_temp < end) {\n      if (this.view_is(VIEW_MODE.YEAR)) {\n        start_temp = date_utils.add(start_temp, 1, 'year');\n      } else if (this.view_is(VIEW_MODE.MONTH)) {\n        start_temp = date_utils.add(start_temp, 1, 'month');\n      } else if (this.view_is(VIEW_MODE.QUARTER_YEAR)) {\n        start_temp = date_utils.add(start_temp, 3, 'month');\n      } else {\n        start_temp = date_utils.add(start_temp, this.options.step, 'hour');\n      }\n      right_dates.push(start_temp);\n    }\n    return right_dates;\n  }\n\n  scale_grid(dx) {\n    const old_grid_width = $.attr(this.$svg, 'width');\n    const new_grid_width = old_grid_width * 1 + dx;\n    // header\n    this.$header.style.width = new_grid_width + 'px';\n    // background\n    $.attr(this.$svg, { width: new_grid_width });\n    $.attr(this.$svg.querySelector('.grid-background'), {\n      width: new_grid_width,\n    });\n    // rows\n    const rows = this.layers.grid.querySelectorAll('.grid-row');\n    rows.forEach((row) => $.attr(row, { width: new_grid_width }));\n    // lines\n    const lines = this.layers.grid.querySelectorAll('.row-line');\n    lines.forEach((line) => $.attr(line, { x2: new_grid_width }));\n  }\n\n  translate(dx) {\n    const uppers = this.$upper_header.querySelectorAll('.upper-text');\n    uppers.forEach((u) => {\n      const old_x = this.upper_texts_x[u.textContent];\n      const new_x = old_x * 1 + dx;\n      this.upper_texts_x[u.textContent] = new_x;\n\n      u.classList.remove('current-upper');\n      u.style.left = new_x + 'px';\n    });\n\n    const lowers = this.$lower_header.querySelectorAll('.lower-text');\n    lowers.forEach((l) => {\n      const old_x = l.style.left.replace('px', '');\n      const new_x = old_x * 1 + dx;\n      l.style.left = new_x + 'px';\n    });\n\n    const holidays = this.layers.grid.querySelectorAll('.holiday-highlight');\n    holidays.forEach((h) => {\n      const old_x = $.attr(h, 'x');\n      const new_x = old_x * 1 + dx;\n      $.attr(h, { x: new_x });\n    });\n\n    const ticks = this.layers.grid.querySelectorAll('.tick');\n    ticks.forEach((tick) => {\n      const dpath = $.attr(tick, 'd')\n        .split(' ')\n        .map((d, i) => {\n          if (i === 1) {\n            return d * 1 + dx;\n          } else {\n            return d;\n          }\n        })\n        .join(' ');\n      $.attr(tick, { d: dpath });\n    });\n\n    this.bars.forEach((bar) => {\n      if (bar.empty) return;\n      bar.update_bar_position({ x: bar.$bar.getX() + dx });\n    });\n  }\n\n  bind_events() {\n    this.bind_grid_scroll();\n\n    if (this.options.readonly) return;\n    this.bind_grid_click();\n    this.bind_bar_create();\n    this.bind_bar_events();\n  }\n\n  render() {\n    this.clear();\n    this.setup_layers();\n    this.make_grid();\n    this.make_dates();\n    this.make_bars();\n    this.make_grid_extras();\n    this.make_arrows();\n    this.map_arrows_on_bars();\n    this.set_scroll_position(this.options.scroll_to);\n  }\n\n  setup_layers() {\n    this.layers = {};\n    const layers = ['grid', 'today', 'arrow', 'progress', 'bar'];\n    // make group layers\n    for (let layer of layers) {\n      this.layers[layer] = createSVG('g', {\n        class: layer,\n        append_to: this.$svg,\n      });\n    }\n  }\n\n  make_grid() {\n    this.make_grid_background();\n    this.make_grid_rows();\n    this.make_grid_header();\n    this.make_grid_toolbar();\n  }\n\n  make_grid_extras() {\n    this.make_grid_highlights();\n    this.make_grid_ticks();\n  }\n\n  make_grid_background() {\n    const grid_width = this.dates.length * this.options.column_width;\n    const grid_height =\n      (this.options.bar_height + this.options.padding) * this.tasks.length;\n\n    createSVG('rect', {\n      x: 0,\n      y: 0,\n      width: grid_width,\n      height: grid_height,\n      class: 'grid-background',\n      append_to: this.$svg,\n    });\n\n    const scroll_height = this.options.height\n      ? this.options.height + 'px'\n      : `calc(100% - ${this.options.header_height + 1}px`;\n    this.$container_main.style.height = scroll_height;\n    this.$container_main.style.width = '100%';\n    this.$container_main.style.overflow = 'auto';\n    this.$container_main.style.position = 'relative';\n    this.$container.style.overflow = 'hidden';\n\n    $.attr(this.$svg, {\n      height: grid_height,\n      width: grid_width,\n    });\n  }\n\n  make_grid_rows() {\n    const row_width = this.dates.length * this.options.column_width;\n    const row_height = this.options.bar_height + this.options.padding;\n\n    let row_y = 0;\n    const fragment = document.createDocumentFragment();\n    for (let _ of this.tasks) {\n      createSVG('rect', {\n        x: 0,\n        y: row_y,\n        width: row_width,\n        height: row_height,\n        class: 'grid-row',\n        append_to: fragment,\n      });\n      if (\n        this.options.lines === TICK_LINE.BOTH ||\n        this.options.lines === TICK_LINE.HORIZONTAL\n      ) {\n      }\n\n      row_y += this.options.bar_height + this.options.padding;\n    }\n\n    const $rows_layer = createSVG('g', {\n      class: 'rows_layer',\n      append_to: this.layers.grid,\n    });\n    $rows_layer.appendChild(fragment);\n  }\n\n  make_grid_header() {\n    const grid_width = this.dates.length * this.options.column_width;\n    let $header = document.createElement('div');\n    $header.style.height = this.options.header_height + 'px';\n    $header.style.width = grid_width + 'px';\n    $header.classList.add('grid-header');\n    this.$header = $header;\n\n    let $upper_header = document.createElement('div');\n    $upper_header.classList.add('upper-header');\n    this.$upper_header = $upper_header;\n    this.$header.appendChild($upper_header);\n\n    let $lower_header = document.createElement('div');\n    $lower_header.classList.add('lower-header');\n    this.$lower_header = $lower_header;\n    this.$header.appendChild($lower_header);\n\n    let $line_header = document.createElement('div');\n    $line_header.classList.add('line-header');\n    this.$line_header = $line_header;\n    this.$header.appendChild($line_header);\n\n    this.$container_header.appendChild(this.$header);\n  }\n\n  make_grid_toolbar() {\n    if (!this.options.view_mode_select && !this.options.today_button) return;\n\n    const $side_header = this.$container_toolbar;\n    const lang = getLang(this.options.language);\n\n    // Create view mode change select\n    if (this.options.view_mode_select) {\n      const $select = document.createElement('select');\n      $select.classList.add('viewmode-select');\n\n      const modes = this.options.view_modes;\n      const modes_values = Object.values(VIEW_MODE);\n      const modes_keys = Object.keys(VIEW_MODE);\n      for (const key in modes) {\n        const $option = document.createElement('option');\n        const val = modes[key];\n        const index = modes_values.findIndex((vm) => vm === val);\n        const label = modes_keys[index];\n        $option.value = val;\n        $option.textContent = lang[label] || val;\n        $select.appendChild($option);\n      }\n      $select.value = this.options.view_mode;\n      $select.addEventListener(\n        'change',\n        function () {\n          this.change_view_mode($select.value);\n        }.bind(this),\n      );\n      $side_header.appendChild($select);\n    }\n\n    // Create today button\n    if (this.options.today_button) {\n      let $today_button = document.createElement('button');\n      $today_button.classList.add('today-button');\n      $today_button.textContent = lang.TODAY;\n      $today_button.onclick = this.scroll_today.bind(this);\n      $side_header.appendChild($today_button);\n    }\n\n    // position\n    const top = Math.max(0, this.options.header_height - 50 - 5);\n    $side_header.style.top = top + 'px';\n  }\n\n  make_grid_ticks() {\n    if (!Object.values(TICK_LINE).includes(this.options.lines)) return;\n    this.draw_row_line();\n\n    this.draw_col_tick(this.dates);\n  }\n\n  draw_row_line() {\n    let row_y = 0;\n    const row_width = this.dates.length * this.options.column_width;\n    const row_height = this.options.bar_height + this.options.padding;\n    const row_fragment = document.createDocumentFragment();\n    if (this.options.lines !== TICK_LINE.VERTICAL) {\n      for (let _ of this.tasks) {\n        createSVG('line', {\n          x1: 0,\n          y1: row_y + row_height,\n          x2: row_width,\n          y2: row_y + row_height,\n          class: 'row-line',\n          append_to: row_fragment,\n        });\n        row_y += row_height;\n      }\n    }\n    const $lines_layer = createSVG('g', {\n      class: 'lines_layer',\n      append_to: this.layers.grid,\n    });\n    $lines_layer.appendChild(row_fragment);\n  }\n\n  draw_col_tick(dates, target) {\n    if (this.options.lines === TICK_LINE.HORIZONTAL) return;\n\n    let tick_x = 0;\n    if (target) {\n      const dc = this.get_snap_distance(target, this.gantt_start);\n      tick_x = dc + this.get_date_width(target);\n    }\n    const data_height =\n      (this.options.bar_height + this.options.padding) * this.tasks.length;\n    const tick_height = Math.max(5000, data_height);\n\n    const tick_fragment = document.createDocumentFragment();\n    for (let date of dates) {\n      let tick_class = 'tick';\n      if (this.get_thick_mode(date)) {\n        tick_class += ' thick';\n      }\n\n      createSVG('path', {\n        d: `M ${tick_x} 0 v ${tick_height}`,\n        class: tick_class,\n        append_to: tick_fragment,\n      });\n\n      tick_x += this.get_date_width(date);\n    }\n\n    const $el = this.layers.grid.querySelector('.ticks_layer');\n    if ($el) {\n      if (target) {\n        $el.appendChild(tick_fragment);\n      } else {\n        $el.insertBefore(tick_fragment, $el.firstChild);\n      }\n    } else {\n      const $ticks_layer = createSVG('g', {\n        class: 'ticks_layer',\n        append_to: this.layers.grid,\n      });\n      $ticks_layer.appendChild(tick_fragment);\n    }\n  }\n\n  get_thick_mode(date) {\n    let thick = false;\n    // thick tick for monday\n    if (this.view_is(VIEW_MODE.DAY) && date.getDate() === 1) {\n      thick = true;\n    }\n    // thick tick for first week\n    if (\n      this.view_is(VIEW_MODE.WEEK) &&\n      date.getDate() >= 1 &&\n      date.getDate() < 8\n    ) {\n      thick = true;\n    }\n    // thick ticks for quarters\n    if (this.view_is(VIEW_MODE.MONTH) && date.getMonth() % 3 === 0) {\n      thick = true;\n    }\n    // thick ticks for quarter_year\n    if (this.view_is(VIEW_MODE.QUARTER_YEAR) && date.getMonth() === 0) {\n      thick = true;\n    }\n    // thick ticks for year\n    if (this.view_is(VIEW_MODE.YEAR)) {\n      thick = true;\n    }\n    return thick;\n  }\n\n  get_date_width(date) {\n    if (this.view_is(VIEW_MODE.MONTH)) {\n      return (\n        (date_utils.get_days_in_month(date) * this.options.column_width) / 30\n      );\n    } else {\n      return this.options.column_width;\n    }\n  }\n\n  computeGridHighlightDimensions(view_mode) {\n    const today = date_utils.today();\n    let x = view_mode === VIEW_MODE.DAY ? this.options.column_width / 2 : 0;\n\n    return {\n      x: x + this.get_snap_distance(today, this.gantt_start),\n      date: today,\n    };\n  }\n\n  make_grid_highlights() {\n    this.highlightWeekends(this.gantt_start, this.gantt_end);\n    this.highlightToday();\n  }\n\n  highlightWeekends(start, end, append) {\n    if (!this.options.highlight_weekend) return;\n    if (!this.view_is([VIEW_MODE.DAY, VIEW_MODE.HALF_DAY])) return;\n\n    const weekends_fragment = document.createDocumentFragment();\n    for (let d = new Date(start); d <= end; d.setDate(d.getDate() + 1)) {\n      if (d.getDay() === 0 || d.getDay() === 6) {\n        const x = this.get_snap_distance(d, this.gantt_start);\n        createSVG('rect', {\n          x,\n          y: 0,\n          width:\n            (this.view_is(VIEW_MODE.DAY) ? 1 : 2) * this.options.column_width,\n          height: '100%',\n          class: 'holiday-highlight',\n          append_to: weekends_fragment,\n        });\n      }\n    }\n\n    const $el = this.layers.grid.querySelector('.holidays_layer');\n    if ($el) {\n      if (append) {\n        $el.appendChild(weekends_fragment);\n      } else {\n        $el.insertBefore(weekends_fragment, $el.firstChild);\n      }\n    } else {\n      const $holidays_layer = createSVG('g', {\n        class: 'holidays_layer',\n        append_to: this.layers.grid,\n      });\n      $holidays_layer.appendChild(weekends_fragment);\n    }\n  }\n\n  highlightToday() {\n    // highlight today's | week's | month's | quarter_year's | year's\n    if (\n      this.view_is(VIEW_MODE.DAY) ||\n      this.view_is(VIEW_MODE.WEEK) ||\n      this.view_is(VIEW_MODE.MONTH) ||\n      this.view_is(VIEW_MODE.QUARTER_YEAR) ||\n      this.view_is(VIEW_MODE.YEAR)\n    ) {\n      // Used as we must find the _end_ of session if view is not Day\n      const { x: left, date } = this.computeGridHighlightDimensions(\n        this.options.view_mode,\n      );\n\n      const data_height =\n        (this.options.bar_height + this.options.padding) * this.tasks.length;\n      const path_height = Math.max(5000, data_height);\n\n      const $el = this.layers.today.querySelector('.today-date-line');\n      if ($el) {\n        $.attr($el, { d: `M ${left} 0 v ${path_height}` });\n      } else {\n        createSVG('path', {\n          d: `M ${left} 0 v ${path_height}`,\n          class: 'today-date-line',\n          append_to: this.layers.today,\n        });\n      }\n\n      const $today = document.getElementById(\n        date_utils.format(date).replaceAll(' ', '_'),\n      );\n      if ($today) {\n        if (!$today.classList.contains('today-date-highlight')) {\n          $today.classList.add('today-date-highlight');\n          $today.style.top = +$today.style.top.slice(0, -2) - 4 + 'px';\n          $today.style.left = +$today.style.left.slice(0, -2) - 8 + 'px';\n        }\n      }\n    }\n  }\n\n  create_el({ left, top, width, height, id, classes, append_to }) {\n    let $el = document.createElement('div');\n    $el.classList.add(classes);\n    $el.style.top = top + 'px';\n    $el.style.left = left + 'px';\n    if (id) $el.id = id;\n    if (width) $el.style.width = width + 'px';\n    if (height) $el.style.height = height + 'px';\n    append_to.appendChild($el);\n    return $el;\n  }\n\n  make_dates() {\n    this.upper_texts_x = {};\n    this.get_dates_to_draw(this.dates, null).forEach((date, i) => {\n      this.last_date_info = date;\n      this.draw_date(date, i);\n    });\n  }\n\n  get_dates_to_draw(dates, last) {\n    let last_date = last;\n    return dates.map((date, i) => {\n      const d = this.get_date_info(date, last_date, i);\n      last_date = d;\n      return d;\n    });\n  }\n\n  get_date_info(date, last_date_info) {\n    let last_date = last_date_info\n      ? last_date_info.date\n      : date_utils.add(date, 1, 'day');\n    const date_text = {\n      Hour_lower: date_utils.format(date, 'HH', this.options.language),\n      'Quarter Day_lower': date_utils.format(date, 'HH', this.options.language),\n      'Half Day_lower': date_utils.format(date, 'HH', this.options.language),\n      Day_lower:\n        date.getDate() !== last_date.getDate()\n          ? date_utils.format(date, 'D', this.options.language)\n          : '',\n      Week_lower:\n        date.getMonth() !== last_date.getMonth()\n          ? date_utils.format(date, 'M月D日', this.options.language)\n          : date_utils.format(date, 'D', this.options.language),\n      Month_lower: date_utils.format(date, 'M月', this.options.language),\n      'Quarter Year_lower':\n        !last_date_info || date.getMonth() !== last_date.getMonth()\n          ? 'Q' + date_utils.format(date, 'Q', this.options.language)\n          : '',\n      Year_lower: date_utils.format(date, 'YYYY年', this.options.language),\n      Hour_upper:\n        date.getDate() !== last_date.getDate()\n          ? date_utils.format(date, 'MM月D日', this.options.language)\n          : '',\n      'Quarter Day_upper':\n        date.getDate() !== last_date.getDate()\n          ? date_utils.format(date, 'MM月D日', this.options.language)\n          : '',\n      'Half Day_upper':\n        date.getDate() !== last_date.getDate()\n          ? date_utils.format(date, 'MM月D日', this.options.language)\n          : '',\n      Day_upper:\n        !last_date_info || date.getMonth() !== last_date.getMonth()\n          ? date_utils.format(date, 'YYYY年MM月', this.options.language)\n          : '',\n      Week_upper:\n        !last_date_info || date.getMonth() !== last_date.getMonth()\n          ? date_utils.format(date, 'YYYY年MM月', this.options.language)\n          : '',\n      Month_upper:\n        !last_date_info || date.getFullYear() !== last_date.getFullYear()\n          ? date_utils.format(date, 'YYYY年', this.options.language)\n          : '',\n      'Quarter Year_upper':\n        !last_date_info || date.getFullYear() !== last_date.getFullYear()\n          ? date_utils.format(date, 'YYYY年', this.options.language)\n          : '',\n      Year_upper: '',\n    };\n\n    // special Month scale\n    let column_width = this.get_date_width(date);\n\n    const base_pos = {\n      x: last_date_info\n        ? last_date_info.base_pos_x + last_date_info.column_width\n        : 0,\n      lower_y: this.options.header_height - 20,\n      upper_y: Math.max(6, this.options.header_height - 50),\n    };\n\n    const base_tick = {\n      line: false,\n    };\n    if (this.options.header_tick) {\n      base_tick.line = this.get_thick_mode(date);\n    }\n\n    // starting_point upper:center-or-start lower:center\n    const x_pos = {\n      Hour_lower: column_width / 2,\n      Hour_upper: (column_width * 24) / 2,\n      'Quarter Day_lower': column_width / 2,\n      'Quarter Day_upper': (column_width * 4) / 2,\n      'Half Day_lower': column_width / 2,\n      'Half Day_upper': (column_width * 2) / 2,\n      Day_lower: column_width / 2,\n      Day_upper: column_width / 2,\n      Week_lower: column_width / 2,\n      Week_upper: 19,\n      Month_lower: column_width / 2,\n      Month_upper: 19,\n      'Quarter Year_lower': column_width / 2,\n      'Quarter Year_upper': (column_width * 4) / 2,\n      Year_lower: column_width / 2,\n      Year_upper: 19,\n    };\n    return {\n      date,\n      formatted_date: date_utils.format(date).replaceAll(' ', '_'),\n      column_width,\n      base_pos_x: base_pos.x,\n      upper_text: this.options.upper_text\n        ? this.options.upper_text(\n            date,\n            this.options.view_mode,\n            date_text[`${this.options.view_mode}_upper`],\n          )\n        : date_text[`${this.options.view_mode}_upper`],\n      lower_text: this.options.lower_text\n        ? this.options.lower_text(\n            date,\n            this.options.view_mode,\n            date_text[`${this.options.view_mode}_lower`],\n          )\n        : date_text[`${this.options.view_mode}_lower`],\n      upper_x: base_pos.x + x_pos[`${this.options.view_mode}_upper`],\n      upper_y: base_pos.upper_y,\n      lower_x: base_pos.x + x_pos[`${this.options.view_mode}_lower`],\n      lower_y: base_pos.lower_y,\n      tick_line: base_tick.line,\n    };\n  }\n\n  draw_date(date, i) {\n    let $lower_text = this.create_el({\n      left: date.lower_x,\n      top: date.lower_y,\n      id: date.formatted_date,\n      classes: 'lower-text',\n      append_to: this.$lower_header,\n    });\n    $lower_text.innerText = date.lower_text;\n    $lower_text.style.left =\n      +$lower_text.style.left.slice(0, -2) - $lower_text.clientWidth / 2 + 'px';\n\n    if (date.upper_text) {\n      if (this.upper_texts_x[date.upper_text] === undefined) {\n        let $upper_text = this.create_el({\n          left: date.upper_x,\n          top: date.upper_y,\n          classes: 'upper-text',\n          append_to: this.$upper_header,\n        });\n        $upper_text.innerText = date.upper_text;\n      }\n\n      this.upper_texts_x[date.upper_text] = date.upper_x;\n    }\n\n    if (date.tick_line) {\n      this.create_el({\n        left: date.base_pos_x - 1,\n        top: date.lower_y,\n        width: 2,\n        height: this.options.header_height - 20,\n        classes: 'tick-line',\n        append_to: this.$line_header,\n      });\n    }\n  }\n\n  make_bars() {\n    const bar_fragment = document.createDocumentFragment();\n    this.bars = this.tasks.map((task) => {\n      const bar = new Bar(this, task);\n      bar_fragment.appendChild(bar.group);\n      return bar;\n    });\n    this.layers.bar.appendChild(bar_fragment);\n  }\n\n  make_arrows() {\n    this.arrows = [];\n    if (!this.options.dependencies) return;\n    const arrow_fragment = document.createDocumentFragment();\n    for (let task of this.tasks) {\n      let arrows = [];\n      arrows = task.dependencies\n        .map((task_id) => {\n          const dependency = this.get_task(task_id);\n          if (!dependency) return;\n          const arrow = new Arrow(\n            this,\n            this.bars[dependency._index], // from_task\n            this.bars[task._index], // to_task\n          );\n          arrow_fragment.appendChild(arrow.element);\n          return arrow;\n        })\n        .filter(Boolean); // filter falsy values\n      this.arrows = this.arrows.concat(arrows);\n    }\n    this.layers.arrow.appendChild(arrow_fragment);\n  }\n\n  map_arrows_on_bars() {\n    for (let bar of this.bars) {\n      bar.arrows = this.arrows.filter((arrow) => {\n        return (\n          arrow.from_task.task.id === bar.task.id ||\n          arrow.to_task.task.id === bar.task.id\n        );\n      });\n    }\n  }\n\n  set_scroll_position(date) {\n    if (!date || date === 'start') {\n      date = this.gantt_start;\n    } else if (date === 'today') {\n      return this.scroll_today();\n    } else if (typeof date === 'string') {\n      date = date_utils.parse(date);\n    }\n\n    const parent_element = this.$svg.parentElement;\n    if (!parent_element) return;\n\n    const hours_before_first_task = date_utils.diff(\n      date,\n      this.gantt_start,\n      'hour',\n    );\n    // 1/3 padding\n    const sharing = parent_element.clientWidth / 3;\n    const space = (sharing / this.options.column_width) * this.options.step;\n    const distance = hours_before_first_task - space;\n\n    // position\n    const scroll_pos =\n      (distance / this.options.step) * this.options.column_width;\n    // smooth、auto\n    parent_element.scrollTo({ left: scroll_pos, behavior: 'auto' });\n  }\n\n  scroll_today() {\n    this.set_scroll_position(new Date().setHours(0, 0, 0, 0));\n  }\n\n  bind_grid_scroll() {\n    // onmousewheel\n    $.on(this.$container_header, 'wheel', (event) => {\n      if (event.shiftKey || event.deltaX) {\n        const scrollMove = event.deltaX ? event.deltaX : event.deltaY;\n        const scrollX = this.$container_main.scrollLeft || 0;\n        const grid_width = $.attr(this.$svg, 'width');\n        let newScrollX = scrollX + scrollMove;\n        if (newScrollX < 0) {\n          newScrollX = 0;\n        } else if (newScrollX > grid_width) {\n          newScrollX = grid_width;\n        }\n        this.$container_main.scrollLeft = newScrollX;\n        event.preventDefault();\n      }\n    });\n\n    $.on(\n      this.$container_main,\n      'scroll',\n      $.throttle(20, () => {\n        const scrollLeft = this.$container_main.scrollLeft;\n        this.$container_header.scrollLeft = scrollLeft;\n      }),\n    );\n  }\n\n  bind_grid_click() {\n    $.on(this.$container, this.options.popup_trigger, () => {\n      this.unselect_all();\n      this.hide_popup();\n    });\n  }\n\n  bind_bar_create() {\n    let x_on_start = 0;\n    let y_on_start = 0;\n    let matched_task = null;\n    let is_creating = null;\n    let holder = null;\n    this.bar_being_created = null;\n\n    const radius = this.options.bar_corner_radius;\n    const bar_height = this.options.bar_height;\n    const row_height = bar_height + this.options.padding;\n\n    $.on(this.$svg, 'mousedown', (e) => {\n      // location\n      const index = parseInt(e.offsetY / row_height);\n      matched_task = this.tasks[index];\n      // only empty date\n      if (!matched_task || (matched_task && matched_task.empty !== true))\n        return;\n      this.bar_being_created = matched_task.id;\n      // start record\n      is_creating = true;\n      x_on_start = e.offsetX;\n      y_on_start = this.get_snap_coord(e.offsetY);\n    });\n\n    $.on(this.$svg, 'mousemove', (e) => {\n      if (!is_creating) return;\n      let dx = e.offsetX - x_on_start;\n\n      // free distance\n      const width = Math.abs(dx);\n      // create rect\n      if (!holder) {\n        holder = createSVG('rect', {\n          x: x_on_start,\n          y: y_on_start,\n          width: 0,\n          height: bar_height,\n          rx: radius,\n          ry: radius,\n          class: 'bar-inner',\n          'data-id': matched_task.id,\n          append_to: this.layers.progress,\n        });\n      }\n      // move-right\n      let x = x_on_start;\n      if (dx < 0) {\n        // move-left\n        x = x_on_start - width;\n      }\n      holder.setAttribute('x', x);\n      holder.setAttribute('width', width);\n    });\n\n    $.on(this.$svg, 'mouseup', () => {\n      this.bar_being_created = null;\n      if (holder) {\n        const start_x = holder.getX();\n        const end_x = holder.getX() + holder.getBBox().width;\n        let date_start = this.get_snap_date(start_x);\n        let date_end = this.get_snap_date(end_x);\n        if (this.options.drag_ignore_hours) {\n          // Non-hourly computation\n          if (\n            !this.view_is([\n              VIEW_MODE.HOUR,\n              VIEW_MODE.QUARTER_DAY,\n              VIEW_MODE.HALF_DAY,\n            ])\n          ) {\n            date_start = new Date(date_start.setHours(0, 0, 0, 0));\n            date_end = new Date(\n              date_utils.add(date_end, 1, 'day').setHours(0, 0, 0, 0),\n            );\n          }\n        }\n\n        const update_task = Object.assign(matched_task, {\n          start: date_start,\n          _start: date_start,\n          end: date_end,\n          _end: date_end,\n          empty: false,\n          invalid: false,\n        });\n        this.replace(update_task, matched_task);\n\n        // remove holder dom\n        this.layers.progress.removeChild(holder);\n        // trigger event\n        this.trigger_event('date_change', [matched_task, date_start, date_end]);\n      }\n      holder = null;\n    });\n\n    document.addEventListener('mouseup', () => {\n      is_creating = false;\n    });\n  }\n\n  bind_bar_events() {\n    let is_dragging = false;\n    let x_on_start = 0;\n    let x_on_scroll_start = 0;\n    let y_on_start = 0;\n    let is_resizing_left = false;\n    let is_resizing_right = false;\n    let parent_bar_id = null;\n    let bars = []; // instanceof Bar\n    this.bar_being_dragged = null;\n\n    function action_in_progress() {\n      return is_dragging || is_resizing_left || is_resizing_right;\n    }\n\n    $.on(this.$svg, 'mousedown', '.bar-wrapper, .handle', (e, element) => {\n      const bar_wrapper = $.closest('.bar-wrapper', element);\n      bars.forEach((bar) => bar.group.classList.remove('active'));\n\n      if (element.classList.contains('left')) {\n        is_resizing_left = true;\n      } else if (element.classList.contains('right')) {\n        is_resizing_right = true;\n      } else if (element.classList.contains('bar-wrapper')) {\n        is_dragging = true;\n      }\n\n      bar_wrapper.classList.add('active');\n      this.hide_popup();\n\n      x_on_start = e.offsetX;\n      y_on_start = e.offsetY;\n\n      parent_bar_id = bar_wrapper.getAttribute('data-id');\n      const ids = [parent_bar_id];\n      // drag sync children\n      if (this.options.drag_sync_child) {\n        ids.push(...this.get_all_dependent_tasks(parent_bar_id));\n      }\n      bars = ids.map((id) => this.get_bar(id));\n\n      this.bar_being_dragged = parent_bar_id;\n\n      bars.forEach((bar) => {\n        if (bar.empty) return;\n        const $bar = bar.$bar;\n        $bar.ox = $bar.getX();\n        $bar.oy = $bar.getY();\n        $bar.owidth = $bar.getWidth();\n        $bar.finaldx = 0;\n      });\n    });\n\n    const handle_width = this.options.handle_width;\n    $.on(this.$svg, 'mousemove', (e) => {\n      if (!action_in_progress()) return;\n      const dx = e.offsetX - x_on_start;\n      const dy = e.offsetY - y_on_start;\n\n      bars.forEach((bar) => {\n        if (bar.empty) return;\n        const $bar = bar.$bar;\n        // free-distance\n        $bar.finaldx = dx;\n        this.hide_popup();\n        if (is_resizing_left) {\n          if ($bar.finaldx - $bar.owidth + handle_width >= 0) return;\n          if (parent_bar_id === bar.task.id) {\n            bar.update_bar_position({\n              x: $bar.ox + $bar.finaldx,\n              width: $bar.owidth - $bar.finaldx,\n            });\n          } else {\n            bar.update_bar_position({\n              x: $bar.ox + $bar.finaldx,\n            });\n          }\n        } else if (is_resizing_right) {\n          if ($bar.finaldx + $bar.owidth < handle_width) return;\n          if (parent_bar_id === bar.task.id) {\n            bar.update_bar_position({\n              width: $bar.owidth + $bar.finaldx,\n            });\n          }\n        } else if (is_dragging) {\n          bar.update_bar_position({ x: $bar.ox + $bar.finaldx });\n        }\n\n        // show drag_backdrop\n        if (parent_bar_id === bar.task.id) {\n          let x = 0;\n          const scrollLeft = this.$container_main.scrollLeft;\n          if (is_resizing_right) {\n            x = $bar.ox - scrollLeft;\n          } else {\n            x = $bar.ox + $bar.finaldx - scrollLeft;\n          }\n          this.show_backdrop({\n            x: x,\n            width: $bar.getWidth(),\n            bar,\n          });\n        }\n      });\n    });\n\n    $.on(this.$svg, 'mouseup', () => {\n      this.bar_being_dragged = null;\n      this.hide_backdrop();\n      bars.forEach((bar) => {\n        if (bar.empty) return;\n        const $bar = bar.$bar;\n        if (!$bar.finaldx) return;\n\n        // calculate start_date end_date\n        const { new_start_date, new_end_date } = bar.compute_start_end_date();\n\n        const date_start = new Date(date_utils.clone(new_start_date).setHours(0, 0, 0, 0));\n        const dx_start = this.get_snap_distance(date_start, this.gantt_start);\n\n        let date_end = new Date(date_utils.clone(new_end_date).setHours(0, 0, 0, 0));\n        if (new_end_date > date_end) {\n          date_end = date_utils.add(date_end, 1, 'day');\n        }\n        const dx_end = this.get_snap_distance(date_end, this.gantt_start);\n\n        if (this.options.drag_ignore_hours) {\n          // calculate drop coord\n          if (\n            !this.view_is([\n              VIEW_MODE.HOUR,\n              VIEW_MODE.QUARTER_DAY,\n              VIEW_MODE.HALF_DAY,\n            ])\n          ) {\n            bar.update_bar_position({\n              x: dx_start,\n              width: dx_end - dx_start,\n            });\n          }\n        }\n        // out of limit date\n        if (date_start < this.gantt_start || date_end > this.gantt_end) {\n          this.update_gantt_dates({\n            start: date_start,\n            end: date_end,\n          });\n        }\n\n        $bar.finaldx = 0;\n        bar.date_changed();\n        bar.set_action_completed();\n      });\n    });\n\n    document.addEventListener('mouseup', () => {\n      is_dragging = false;\n      is_resizing_left = false;\n      is_resizing_right = false;\n    });\n\n    $.on(this.$container_main, 'scroll', (e) => {\n      let elements = document.querySelectorAll('.bar-wrapper');\n      let localBars = [];\n      const ids = [];\n      let dx;\n      if (x_on_scroll_start) {\n        dx = e.currentTarget.scrollLeft - x_on_scroll_start;\n      }\n\n      const daysSinceStart =\n        ((e.currentTarget.scrollLeft / this.options.column_width) *\n          this.options.step) /\n        24;\n      let format_str = 'D MMM';\n      if (\n        this.view_is([VIEW_MODE.YEAR, VIEW_MODE.QUARTER_YEAR, VIEW_MODE.MONTH])\n      )\n        format_str = 'YYYY年';\n      else if (this.view_is([VIEW_MODE.DAY, VIEW_MODE.WEEK]))\n        format_str = 'YYYY年MM月';\n      else if (this.view_is(VIEW_MODE.HALF_DAY)) format_str = 'D MMM';\n      else if (this.view_is(VIEW_MODE.HOUR)) format_str = 'D MMMM';\n\n      // language\n      const currentUpper = date_utils.format(\n        date_utils.add(this.gantt_start, daysSinceStart, 'day'),\n        format_str,\n        this.options.language,\n      );\n      const upperTexts = Array.from(document.querySelectorAll('.upper-text'));\n      const $el = upperTexts.find((el) => el.textContent === currentUpper);\n      if ($el && !$el.classList.contains('current-upper')) {\n        const $current = document.querySelector('.current-upper');\n        if ($current) {\n          $current.classList.remove('current-upper');\n          $current.style.left = this.upper_texts_x[$current.textContent] + 'px';\n        }\n\n        $el.classList.add('current-upper');\n        // 38/2 - 8 first-point\n        $el.style.left = '11px';\n      }\n\n      Array.prototype.forEach.call(elements, function (el, i) {\n        ids.push(el.getAttribute('data-id'));\n      });\n\n      if (dx) {\n        localBars = ids.map((id) => this.get_bar(id));\n        if (this.options.auto_move_label) {\n          localBars.forEach((bar) => {\n            bar.update_label_position_on_horizontal_scroll({\n              x: dx,\n              sx: e.currentTarget.scrollLeft,\n            });\n          });\n        }\n      }\n\n      x_on_scroll_start = e.currentTarget.scrollLeft;\n\n      this.trigger_event('scroll', [e]);\n    });\n\n    if (this.options.drag_bar_progress) {\n      this.bind_bar_progress();\n    }\n  }\n\n  bind_bar_progress() {\n    let x_on_start = 0;\n    let y_on_start = 0;\n    let is_resizing = null;\n    let bar = null;\n    let $bar_progress = null;\n    let $bar = null;\n\n    $.on(this.$svg, 'mousedown', '.handle.progress', (e, handle) => {\n      is_resizing = true;\n      x_on_start = e.offsetX;\n      y_on_start = e.offsetY;\n\n      const $bar_wrapper = $.closest('.bar-wrapper', handle);\n      const id = $bar_wrapper.getAttribute('data-id');\n      bar = this.get_bar(id);\n\n      $bar_progress = bar.$bar_progress;\n      $bar = bar.$bar;\n\n      $bar_progress.finaldx = 0;\n      $bar_progress.owidth = $bar_progress.getWidth();\n      $bar_progress.min_dx = -$bar_progress.getWidth();\n      $bar_progress.max_dx = $bar.getWidth() - $bar_progress.getWidth();\n    });\n\n    $.on(this.$svg, 'mousemove', (e) => {\n      if (!is_resizing) return;\n      let dx = e.offsetX - x_on_start;\n      let dy = e.offsetY - y_on_start;\n\n      if (dx > $bar_progress.max_dx) {\n        dx = $bar_progress.max_dx;\n      }\n      if (dx < $bar_progress.min_dx) {\n        dx = $bar_progress.min_dx;\n      }\n\n      const $handle = bar.$handle_progress;\n      $.attr($bar_progress, 'width', $bar_progress.owidth + dx);\n      $.attr($handle, 'points', bar.get_progress_polygon_points());\n      $bar_progress.finaldx = dx;\n    });\n\n    $.on(this.$svg, 'mouseup', () => {\n      is_resizing = false;\n      if (!($bar_progress && $bar_progress.finaldx)) return;\n\n      $bar_progress.finaldx = 0;\n      bar.progress_changed();\n      bar.set_action_completed();\n      bar = null;\n      $bar_progress = null;\n      $bar = null;\n    });\n  }\n\n  get_all_dependent_tasks(task_id) {\n    let out = [];\n    let to_process = [task_id];\n    while (to_process.length) {\n      const deps = to_process.reduce((acc, curr) => {\n        acc = acc.concat(this.dependency_map[curr]);\n        return acc;\n      }, []);\n\n      out = out.concat(deps);\n      to_process = deps.filter((d) => !to_process.includes(d));\n    }\n\n    return out.filter(Boolean);\n  }\n\n  get_snap_date(x, base_date = this.gantt_start) {\n    const x_in_units = x / this.options.column_width;\n    return date_utils.add(base_date, x_in_units * this.options.step, 'hour');\n  }\n\n  get_snap_distance(end, start) {\n    const hours = date_utils.diff(end, start, 'hour');\n    let x = (hours / this.options.step) * this.options.column_width;\n\n    if (this.view_is(VIEW_MODE.MONTH)) {\n      const days = date_utils.diff(end, start, 'day');\n      x = (days * this.options.column_width) / 30;\n\n      // 修正误差\n      const date_coord = this.get_snap_date(x, start);\n      if (date_coord < end) {\n        const diff = date_utils.diff(end, date_coord, 'hour');\n        x += (diff / this.options.step) * this.options.column_width;\n      }\n    }\n\n    return x;\n  }\n\n  get_snap_coord(oy) {\n    const padding = this.options.padding / 2;\n    const header_height = 0;\n    const row_height = this.options.bar_height + this.options.padding;\n\n    const mod = parseInt((oy - header_height) / row_height);\n    return header_height + mod * row_height + padding;\n  }\n\n  unselect_all() {\n    [...this.$svg.querySelectorAll('.bar-wrapper')].forEach((el) => {\n      el.classList.remove('active');\n    });\n  }\n\n  view_is(modes) {\n    if (typeof modes === 'string') {\n      return this.options.view_mode === modes;\n    }\n\n    if (Array.isArray(modes)) {\n      return modes.some((mode) => this.options.view_mode === mode);\n    }\n\n    return false;\n  }\n\n  get_task(id) {\n    return this.tasks.find((task) => {\n      return task.id === id;\n    });\n  }\n\n  get_bar(id) {\n    return this.bars.find((bar) => {\n      return bar.task.id === id;\n    });\n  }\n\n  show_backdrop({ x, width, bar }) {\n    if (!this.backdrop) {\n      this.backdrop = new Backdrop(this.$drag_backdrop);\n    }\n\n    const { new_start_date, new_end_date } = bar.compute_start_end_date();\n    const subtract_second_date = date_utils.add(new_end_date, -1, 'second');\n\n    let symbol = 'MM-DD';\n    // different years\n    if (\n      date_utils.format(new_start_date, 'YYYY') !==\n      date_utils.format(subtract_second_date, 'YYYY')\n    ) {\n      symbol = 'YYYY-MM-DD';\n    }\n\n    const date_start = date_utils.format(new_start_date, symbol);\n    const date_end = date_utils.format(subtract_second_date, symbol);\n    this.backdrop.showAt({ x, width, range: [date_start, date_end] });\n  }\n\n  hide_backdrop() {\n    this.backdrop && this.backdrop.hide();\n  }\n\n  show_popup(options) {\n    if (this.options.popup === false) return;\n    if (!this.popup) {\n      this.popup = new Popup(this, this.$popup_wrapper);\n    }\n    this.popup.show(options);\n  }\n\n  hide_popup() {\n    this.popup && this.popup.hide();\n  }\n\n  trigger_event(event, args) {\n    if (this.options['on_' + event]) {\n      this.options['on_' + event].apply(null, args);\n    }\n  }\n\n  clear() {\n    this.$svg.innerHTML = '';\n    this.$container_toolbar.innerHTML = '';\n    this.$header?.remove?.();\n    this.hide_popup();\n  }\n}\n\nGantt.VIEW_MODE = VIEW_MODE;\n\nfunction generate_id(task) {\n  return task.name + '_' + Math.random().toString(36).slice(2, 12);\n}\n"],"names":["YEAR","MONTH","DAY","HOUR","MINUTE","SECOND","MILLISECOND","SHORTENED","January","February","March","April","May","June","July","August","September","October","November","December","date_utils","parse_duration","duration","matches","exec","parseInt","scale","parse","date","date_separator","time_separator","Date","date_parts","time_parts","parts","split","map","val","vals","length","parseFloat","concat","to_string","with_time","TypeError","this","get_date_values","i","padStart","date_string","time_string","format","format_string","lang","month_name","Intl","DateTimeFormat","month","month_name_capitalized","charAt","toUpperCase","slice","values","format_map","YYYY","MM","DD","HH","mm","ss","M","D","h","m","s","SSS","Q","MMMM","MMM","str","formatted_values","Object","keys","sort","a","b","forEach","key","includes","replaceAll","push","value","diff","date_a","date_b","milliseconds","seconds","hours","minutes","days","months","years","endsWith","Math","floor","today","now","add","qty","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","getMilliseconds","start_of","scores","should_reset","_scale","clone","get_days_in_month","no_of_days","year","targetLength","padString","String","repeat","$","expr","con","document","querySelector","createSVG","tag","attrs","elem","createElementNS","attr","append_to","appendChild","innerHTML","setAttribute","animateSVG","svgElement","from","to","animatedSvgElement","dur","begin","animEl","attributeName","animateElement","calcMode","keyTimes","keySplines","cubic_bezier","getAnimationElement","event","createEvent","initEvent","eventName","dispatchEvent","name","ease","linear","on","element","selector","callback","delegate","bind","off","handler","removeEventListener","addEventListener","e","delegatedTarget","target","closest","call","parentNode","getAttribute","throttle","delay","noTrailing","debounceMode","timeoutID","lastExec","undefined","self","elapsed","Number","args","arguments","apply","clear","clearTimeout","setTimeout","VIEW_MODE","QUARTER_DAY","HALF_DAY","WEEK","QUARTER_YEAR","LAN_ZH","TODAY","LAN_EN","Bar","constructor","gantt","task","set_defaults","prepare","draw","action_completed","prepare_doms","prepare_values","prepare_helpers","group","class","custom_class","important","id","bar_group","handle_group","empty","invalid","height","options","bar_height","image_size","compute_x","compute_y","compute_duration","corner_radius","bar_corner_radius","width","column_width","progress_width","progress","SVGElement","prototype","getX","getY","getWidth","getHeight","getEndX","prepare_expected_progress_values","compute_expected_progress","expected_progress_width","expected_progress","draw_bar","draw_progress_bar","show_expected_progress","draw_expected_progress_bar","draw_label","draw_resize_handles","thumbnail","draw_thumbnail","$bar","x","y","rx","ry","classList","$expected_bar_progress","$bar_progress","x_coord","requestAnimationFrame","update_label_position","defs","clipPath","href","readonly","bar","handle_width","gw","drag_bar_progress","$handle_progress","points","get_progress_polygon_points","join","bar_progress","icon_width","icon_height","setup_click_event","timeout","clickTimeout","trigger_event","screenX","screenY","scrollLeft","$container_main","show_popup","offsetX","hide_popup","clickCount","bar_being_dragged","subtitle","_start","language","_end","target_element","title","update_bar_task","label","update_bar_vertical","offset","Array","children","el","$thumbnail","arr","$handle","update_bar_position","drag_limit_child","dependencies","dep","get_bar","reduce","_","curr","update_attr","$date_highlight","style","left","update_handle_position","date_changed","update_expected_progressbar_position","update_progressbar_position","update_arrow_position","update_label_position_on_horizontal_scroll","sx","container","img","img_mask","barWidthLimit","newLabelX","newImgX","imgWidth","getBBox","labelEndX","viewportCentral","clientWidth","contains","changed","new_start_date","new_end_date","compute_start_end_date","remove","progress_changed","new_progress","compute_progress","set_action_completed","bx","bw","get_snap_date","gantt_start","step","task_start","view_is","padding","_index","isNaN","x_offset","x_offset_label_img","barWidth","contentWidth","arrows","arrow","update","Arrow","from_task","to_task","calculate_path","drawInner","rowHeight","taskHeight","arrowCurve","arrow_curve","taskFrom","taskTo","taskFromX2","taskFromY1","taskToX1","taskToEndPosition","taskFromEndPosition","arrowIndent","path","trianglePoints","svgPath","d","fill","svgPolygon","Popup","parent","custom_html","popup","make","hide","pointer","show","Error","html","position_meta","HTMLElement","getBoundingClientRect","parentWidth","parentHeight","clientHeight","ganttOptions","ganttWidth","$container","ganttHeight","dy","scrollTop","pos_x","pos_y","header_height","top","display","Backdrop","drag_mask","date_range","showAt","range","htmlHold","VIEW_MODE_PADDING","TICK_LINE","BOTH","HORIZONTAL","VERTICAL","DEFAULT_OPTIONS","header_tick","view_modes","view_mode","popup_trigger","drag_ignore_hours","drag_sync_child","highlight_weekend","scroll_to","lines","auto_move_label","today_button","view_mode_select","Gantt","wrapper","tasks","setup_wrapper","setup_options","setup_tasks","change_view_mode","bind_events","svg_element","wrapper_element","$svg","createElement","$container_header","parentElement","$container_toolbar","$popup_wrapper","$drag_backdrop","view_mode_padding","entries","format_task","setup_dependencies","dependency_map","t","format_dependency","start","end","tmpDuration","every","deps","trim","filter","random","toString","generate_id","refresh","original","get_task","current","result","update_task","replace","splice","start_date","dx","get_snap_distance","end_date","index","tid","findIndex","item","row_height","remove_bar","bars","layers","removeChild","$rows","grid","lastChild","$lines","make_arrows","map_arrows_on_bars","grid_height","insert","insert_task","limit_start","limit_end","gantt_end","update_gantt_dates","insert_bar","target_bar","insertBefore","row_width","dates","insert_y","$grid_el","$lines_layer","x1","y1","x2","y2","prev_task","update_bar","old_bar","target_postion","mode","record_start","performance","update_view_scale","setup_dates","render","record_time","setup_gantt_dates","setup_date_values","pad_gantt_dates","viewKey","padding_start","padding_end","setHours","cur_date","old_gantt_start","new_gantt_start","left_dates","get_left_dates","console","log","scale_grid","translate","update_gantt_left","old_gantt_end","new_gantt_end","update_gantt_right","get_dates_to_draw","draw_date","highlightWeekends","highlightToday","draw_col_tick","start_temp","unshift","initial_date","last_date_info","right_dates","get_right_dates","new_grid_width","$header","querySelectorAll","row","line","$upper_header","u","new_x","upper_texts_x","textContent","$lower_header","l","tick","dpath","bind_grid_scroll","bind_grid_click","bind_bar_create","bind_bar_events","setup_layers","make_grid","make_dates","make_bars","make_grid_extras","set_scroll_position","layer","make_grid_background","make_grid_rows","make_grid_header","make_grid_toolbar","make_grid_highlights","make_grid_ticks","grid_width","scroll_height","overflow","position","row_y","fragment","createDocumentFragment","$line_header","$side_header","$select","modes","modes_values","modes_keys","$option","vm","$today_button","onclick","scroll_today","max","draw_row_line","row_fragment","tick_x","get_date_width","data_height","tick_height","tick_fragment","tick_class","get_thick_mode","$el","firstChild","thick","computeGridHighlightDimensions","append","weekends_fragment","setDate","getDay","path_height","$today","getElementById","create_el","classes","last","last_date","get_date_info","date_text","Hour_lower","Day_lower","Week_lower","Month_lower","Year_lower","Hour_upper","Day_upper","Week_upper","Month_upper","Year_upper","base_pos","base_pos_x","lower_y","upper_y","base_tick","x_pos","formatted_date","upper_text","lower_text","upper_x","lower_x","tick_line","$lower_text","innerText","bar_fragment","arrow_fragment","task_id","dependency","Boolean","parent_element","scroll_pos","scrollTo","behavior","shiftKey","deltaX","scrollMove","deltaY","scrollX","newScrollX","preventDefault","unselect_all","x_on_start","y_on_start","matched_task","is_creating","holder","bar_being_created","radius","offsetY","get_snap_coord","abs","start_x","end_x","date_start","date_end","assign","is_dragging","x_on_scroll_start","is_resizing_left","is_resizing_right","parent_bar_id","bar_wrapper","ids","get_all_dependent_tasks","ox","oy","owidth","finaldx","show_backdrop","hide_backdrop","dx_start","dx_end","elements","localBars","currentTarget","daysSinceStart","format_str","currentUpper","find","$current","bind_bar_progress","is_resizing","handle","min_dx","max_dx","out","to_process","acc","base_date","x_in_units","date_coord","isArray","some","backdrop","subtract_second_date","symbol"],"mappings":"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"}