{"version":3,"file":"frappe-gantt.min.js","sources":["../src/date_utils.js","../src/svg_utils.js","../src/bar.js","../src/arrow.js","../src/popup.js","../src/index.js"],"sourcesContent":["const YEAR = \"year\";\nconst MONTH = \"month\";\nconst DAY = \"day\";\nconst HOUR = \"hour\";\nconst MINUTE = \"minute\";\nconst SECOND = \"second\";\nconst MILLISECOND = \"millisecond\";\n\nconst SHORTENED = {\n  January: \"Jan\",\n  February: \"Feb\",\n  March: \"Mar\",\n  April: \"Apr\",\n  May: \"May\",\n  June: \"Jun\",\n  July: \"Jul\",\n  August: \"Aug\",\n  September: \"Sep\",\n  October: \"Oct\",\n  November: \"Nov\",\n  December: \"Dec\"\n};\n\nexport default {\n  parse_duration(duration) {\n    const regex = /([0-9])+(y|m|d|h|min|s|ms)/gm;\n    const matches = regex.exec(duration);\n\n    if (matches !== null) {\n      if (matches[2] === \"y\") {\n        return { duration: parseInt(matches[1]), scale: `year` };\n      } else if (matches[2] === \"m\") {\n        return { duration: parseInt(matches[1]), scale: `month` };\n      } else if (matches[2] === \"d\") {\n        return { duration: parseInt(matches[1]), scale: `day` };\n      } else if (matches[2] === \"h\") {\n        return { duration: parseInt(matches[1]), scale: `hour` };\n      } else if (matches[2] === \"min\") {\n        return { duration: parseInt(matches[1]), scale: `minute` };\n      } else if (matches[2] === \"s\") {\n        return { duration: parseInt(matches[1]), scale: `second` };\n      } else if (matches[2] === \"ms\") {\n        return { duration: parseInt(matches[1]), scale: `millisecond` };\n      }\n    }\n  },\n  parse(date, date_separator = \"-\", time_separator = /[.:]/) {\n    if (date instanceof Date) {\n      return date;\n    }\n    if (typeof date === \"string\") {\n      let date_parts, time_parts;\n      const parts = date.split(\" \");\n      date_parts = parts[0]\n        .split(date_separator)\n        .map((val) => parseInt(val, 10));\n      time_parts = parts[1] && parts[1].split(time_separator);\n\n      // month is 0 indexed\n      date_parts[1] = date_parts[1] ? date_parts[1] - 1 : 0;\n\n      let vals = date_parts;\n\n      if (time_parts && time_parts.length) {\n        if (time_parts.length === 4) {\n          time_parts[3] = \"0.\" + time_parts[3];\n          time_parts[3] = parseFloat(time_parts[3]) * 1000;\n        }\n        vals = vals.concat(time_parts);\n      }\n      return new Date(...vals);\n    }\n  },\n\n  to_string(date, with_time = false) {\n    if (!(date instanceof Date)) {\n      throw new TypeError(\"Invalid argument type\");\n    }\n    const vals = this.get_date_values(date).map((val, i) => {\n      if (i === 1) {\n        // add 1 for month\n        val = val + 1;\n      }\n\n      if (i === 6) {\n        return padStart(val + \"\", 3, \"0\");\n      }\n\n      return padStart(val + \"\", 2, \"0\");\n    });\n    const date_string = `${vals[0]}-${vals[1]}-${vals[2]}`;\n    const time_string = `${vals[3]}:${vals[4]}:${vals[5]}.${vals[6]}`;\n\n    return date_string + (with_time ? \" \" + time_string : \"\");\n  },\n\n  format(date, format_string = \"YYYY-MM-DD HH:mm:ss.SSS\", lang = \"en\") {\n    const dateTimeFormat = new Intl.DateTimeFormat(lang, {\n      month: \"long\",\n    });\n    const month_name = dateTimeFormat.format(date);\n    const month_name_capitalized =\n      month_name.charAt(0).toUpperCase() + month_name.slice(1);\n\n    const values = this.get_date_values(date).map((d) => padStart(d, 2, 0));\n    const format_map = {\n      YYYY: values[0],\n      MM: padStart(+values[1] + 1, 2, 0),\n      DD: values[2],\n      HH: values[3],\n      mm: values[4],\n      ss: values[5],\n      SSS: values[6],\n      D: values[2],\n      MMMM: month_name_capitalized,\n      MMM: SHORTENED[month_name_capitalized],\n    };\n\n    let str = format_string;\n    const formatted_values = [];\n\n    Object.keys(format_map)\n      .sort((a, b) => b.length - a.length) // big string first\n      .forEach((key) => {\n        if (str.includes(key)) {\n          str = str.replaceAll(key, `$${formatted_values.length}`);\n          formatted_values.push(format_map[key]);\n        }\n      });\n\n    formatted_values.forEach((value, i) => {\n      str = str.replaceAll(`$${i}`, value);\n    });\n\n    return str;\n  },\n\n  diff(date_a, date_b, scale = DAY) {\n    let milliseconds, seconds, hours, minutes, days, months, years;\n\n    milliseconds = date_a - date_b;\n    seconds = milliseconds / 1000;\n    minutes = seconds / 60;\n    hours = minutes / 60;\n    days = hours / 24;\n    months = days / 30;\n    years = months / 12;\n\n    if (!scale.endsWith(\"s\")) {\n      scale += \"s\";\n    }\n\n    return Math.floor(\n      {\n        milliseconds,\n        seconds,\n        minutes,\n        hours,\n        days,\n        months,\n        years,\n      }[scale],\n    );\n  },\n\n  today() {\n    const vals = this.get_date_values(new Date()).slice(0, 3);\n    return new Date(...vals);\n  },\n\n  now() {\n    return new Date();\n  },\n\n  add(date, qty, scale) {\n    qty = parseInt(qty, 10);\n    const vals = [\n      date.getFullYear() + (scale === YEAR ? qty : 0),\n      date.getMonth() + (scale === MONTH ? qty : 0),\n      date.getDate() + (scale === DAY ? qty : 0),\n      date.getHours() + (scale === HOUR ? qty : 0),\n      date.getMinutes() + (scale === MINUTE ? qty : 0),\n      date.getSeconds() + (scale === SECOND ? qty : 0),\n      date.getMilliseconds() + (scale === MILLISECOND ? qty : 0),\n    ];\n    return new Date(...vals);\n  },\n\n  start_of(date, scale) {\n    const scores = {\n      [YEAR]: 6,\n      [MONTH]: 5,\n      [DAY]: 4,\n      [HOUR]: 3,\n      [MINUTE]: 2,\n      [SECOND]: 1,\n      [MILLISECOND]: 0,\n    };\n\n    function should_reset(_scale) {\n      const max_score = scores[scale];\n      return scores[_scale] <= max_score;\n    }\n\n    const vals = [\n      date.getFullYear(),\n      should_reset(YEAR) ? 0 : date.getMonth(),\n      should_reset(MONTH) ? 1 : date.getDate(),\n      should_reset(DAY) ? 0 : date.getHours(),\n      should_reset(HOUR) ? 0 : date.getMinutes(),\n      should_reset(MINUTE) ? 0 : date.getSeconds(),\n      should_reset(SECOND) ? 0 : date.getMilliseconds(),\n    ];\n\n    return new Date(...vals);\n  },\n\n  clone(date) {\n    return new Date(...this.get_date_values(date));\n  },\n\n  get_date_values(date) {\n    return [\n      date.getFullYear(),\n      date.getMonth(),\n      date.getDate(),\n      date.getHours(),\n      date.getMinutes(),\n      date.getSeconds(),\n      date.getMilliseconds(),\n    ];\n  },\n\n  get_days_in_month(date) {\n    const no_of_days = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n\n    const month = date.getMonth();\n\n    if (month !== 1) {\n      return no_of_days[month];\n    }\n\n    // Feb\n    const year = date.getFullYear();\n    if ((year % 4 === 0 && year % 100 != 0) || year % 400 === 0) {\n      return 29;\n    }\n    return 28;\n  },\n};\n\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/padStart\nfunction padStart(str, targetLength, padString) {\n  str = str + \"\";\n  targetLength = targetLength >> 0;\n  padString = String(typeof padString !== \"undefined\" ? padString : \" \");\n  if (str.length > targetLength) {\n    return String(str);\n  } else {\n    targetLength = targetLength - str.length;\n    if (targetLength > padString.length) {\n      padString += padString.repeat(targetLength / padString.length);\n    }\n    return padString.slice(0, targetLength) + String(str);\n  }\n}\n","export function $(expr, con) {\n  return typeof expr === \"string\"\n    ? (con || document).querySelector(expr)\n    : expr || null;\n}\n\nexport function createSVG(tag, attrs) {\n  const elem = document.createElementNS(\"http://www.w3.org/2000/svg\", tag);\n  for (let attr in attrs) {\n    if (attr === \"append_to\") {\n      const parent = attrs.append_to;\n      parent.appendChild(elem);\n    } else if (attr === \"innerHTML\") {\n      elem.innerHTML = attrs.innerHTML;\n    } else if (attr === 'clipPath') {\n      elem.setAttribute('clip-path', 'url(#' + attrs[attr] + ')');\n    } else {\n      elem.setAttribute(attr, attrs[attr]);\n    }\n  }\n  return elem;\n}\n\nexport function animateSVG(svgElement, attr, from, to) {\n  const animatedSvgElement = getAnimationElement(svgElement, attr, from, to);\n\n  if (animatedSvgElement === svgElement) {\n    // triggered 2nd time programmatically\n    // trigger artificial click event\n    const event = document.createEvent(\"HTMLEvents\");\n    event.initEvent(\"click\", true, true);\n    event.eventName = \"click\";\n    animatedSvgElement.dispatchEvent(event);\n  }\n}\n\nfunction getAnimationElement(\n  svgElement,\n  attr,\n  from,\n  to,\n  dur = \"0.4s\",\n  begin = \"0.1s\",\n) {\n  const animEl = svgElement.querySelector(\"animate\");\n  if (animEl) {\n    $.attr(animEl, {\n      attributeName: attr,\n      from,\n      to,\n      dur,\n      begin: \"click + \" + begin, // artificial click\n    });\n    return svgElement;\n  }\n\n  const animateElement = createSVG(\"animate\", {\n    attributeName: attr,\n    from,\n    to,\n    dur,\n    begin,\n    calcMode: \"spline\",\n    values: from + \";\" + to,\n    keyTimes: \"0; 1\",\n    keySplines: cubic_bezier(\"ease-out\"),\n  });\n  svgElement.appendChild(animateElement);\n\n  return svgElement;\n}\n\nfunction cubic_bezier(name) {\n  return {\n    ease: \".25 .1 .25 1\",\n    linear: \"0 0 1 1\",\n    \"ease-in\": \".42 0 1 1\",\n    \"ease-out\": \"0 0 .58 1\",\n    \"ease-in-out\": \".42 0 .58 1\",\n  }[name];\n}\n\n$.on = (element, event, selector, callback) => {\n  if (!callback) {\n    callback = selector;\n    $.bind(element, event, callback);\n  } else {\n    $.delegate(element, event, selector, callback);\n  }\n};\n\n$.off = (element, event, handler) => {\n  element.removeEventListener(event, handler);\n};\n\n$.bind = (element, event, callback) => {\n  event.split(/\\s+/).forEach(function (event) {\n    element.addEventListener(event, callback);\n  });\n};\n\n$.delegate = (element, event, selector, callback) => {\n  element.addEventListener(event, function (e) {\n    const delegatedTarget = e.target.closest(selector);\n    if (delegatedTarget) {\n      e.delegatedTarget = delegatedTarget;\n      callback.call(this, e, delegatedTarget);\n    }\n  });\n};\n\n$.closest = (selector, element) => {\n  if (!element) return null;\n\n  if (element.matches(selector)) {\n    return element;\n  }\n\n  return $.closest(selector, element.parentNode);\n};\n\n$.attr = (element, attr, value) => {\n  if (!value && typeof attr === \"string\") {\n    return element.getAttribute(attr);\n  }\n\n  if (typeof attr === \"object\") {\n    for (let key in attr) {\n      $.attr(element, key, attr[key]);\n    }\n    return;\n  }\n\n  element.setAttribute(attr, value);\n};\n\n$.throttle = function (delay, noTrailing, callback, debounceMode) {\n    // After wrapper has stopped being called, this timeout ensures that\n    // `callback` is executed at the proper times in `throttle` and `end`\n    // debounce modes.\n    var timeoutID;\n\n    // Keep track of the last time `callback` was executed.\n    var lastExec = 0;\n\n    // `noTrailing` defaults to falsy.\n    if (typeof noTrailing !== 'boolean') {\n        debounceMode = callback;\n        callback = noTrailing;\n        noTrailing = undefined;\n    }\n\n    // The `wrapper` function encapsulates all of the throttling / debouncing\n    // functionality and when executed will limit the rate at which `callback`\n    // is executed.\n    function wrapper() {\n        var self = this;\n        var elapsed = Number(new Date()) - lastExec;\n        var args = arguments;\n\n        // Execute `callback` and update the `lastExec` timestamp.\n        function exec() {\n            lastExec = Number(new Date());\n            callback.apply(self, args);\n        }\n\n        // If `debounceMode` is true (at begin) this is used to clear the flag\n        // to allow future `callback` executions.\n        function clear() {\n            timeoutID = undefined;\n        }\n\n        if (debounceMode && !timeoutID) {\n            // Since `wrapper` is being called for the first time and\n            // `debounceMode` is true (at begin), execute `callback`.\n            exec();\n        }\n\n        // Clear any existing timeout.\n        if (timeoutID) {\n            clearTimeout(timeoutID);\n        }\n\n        if (debounceMode === undefined && elapsed > delay) {\n            // In throttle mode, if `delay` time has been exceeded, execute\n            // `callback`.\n            exec();\n        } else if (noTrailing !== true) {\n            // In trailing throttle mode, since `delay` time has not been\n            // exceeded, schedule `callback` to execute `delay` ms after most\n            // recent execution.\n            //\n            // If `debounceMode` is true (at begin), schedule `clear` to execute\n            // after `delay` ms.\n            //\n            // If `debounceMode` is false (at end), schedule `callback` to\n            // execute after `delay` ms.\n            timeoutID = setTimeout(\n                debounceMode ? clear : exec,\n                debounceMode === undefined ? delay - elapsed : delay,\n            );\n        }\n    }\n\n    // Return the wrapper function.\n    return wrapper;\n};\n","import date_utils from \"./date_utils\";\nimport { $, createSVG, animateSVG } from \"./svg_utils\";\n\nexport default class Bar {\n  constructor(gantt, task) {\n    this.set_defaults(gantt, task);\n    this.prepare();\n    this.draw();\n    this.bind();\n  }\n\n  set_defaults(gantt, task) {\n    this.action_completed = false;\n    this.gantt = gantt;\n    this.task = task;\n  }\n\n  prepare() {\n    this.prepare_values();\n    this.prepare_helpers();\n  }\n\n  prepare_values() {\n    this.empty = this.task.empty;\n    this.invalid = this.task.invalid;\n    this.height = this.gantt.options.bar_height;\n    this.image_size = this.height - 5;\n    this.compute_x();\n    this.compute_y();\n    this.compute_duration();\n    this.corner_radius = this.gantt.options.bar_corner_radius;\n    this.width = this.gantt.options.column_width * this.duration;\n    this.progress_width =\n      this.gantt.options.column_width *\n      this.duration *\n      (this.task.progress / 100) || 0;\n    this.group = createSVG(\"g\", {\n      class: \"bar-wrapper\" + (this.task.custom_class ? \" \" + this.task.custom_class : \"\") + (this.task.important ? ' important' : ''),\n      \"data-id\": this.task.id,\n    });\n    this.bar_group = createSVG(\"g\", {\n      class: \"bar-group\",\n      append_to: this.group,\n    });\n    this.handle_group = createSVG(\"g\", {\n      class: \"handle-group\",\n      append_to: this.group,\n    });\n  }\n\n  prepare_helpers() {\n    SVGElement.prototype.getX = function () {\n      return +this.getAttribute(\"x\");\n    };\n    SVGElement.prototype.getY = function () {\n      return +this.getAttribute(\"y\");\n    };\n    SVGElement.prototype.getWidth = function () {\n      return +this.getAttribute(\"width\");\n    };\n    SVGElement.prototype.getHeight = function () {\n      return +this.getAttribute(\"height\");\n    };\n    SVGElement.prototype.getEndX = function () {\n      return this.getX() + this.getWidth();\n    };\n  }\n\n  prepare_expected_progress_values() {\n    this.compute_expected_progress();\n    this.expected_progress_width =\n      this.gantt.options.column_width *\n      this.duration *\n      (this.expected_progress / 100) || 0;\n  }\n\n  draw() {\n    if (this.empty) return;\n    this.draw_bar();\n    this.draw_progress_bar();\n    if (this.gantt.options.show_expected_progress) {\n      this.prepare_expected_progress_values();\n      this.draw_expected_progress_bar();\n    }\n    this.draw_label();\n    this.draw_resize_handles();\n\n    if (this.task.thumbnail) {\n      this.draw_thumbnail();\n    }\n  }\n\n  draw_bar() {\n    this.$bar = createSVG(\"rect\", {\n      x: this.x,\n      y: this.y,\n      width: this.width,\n      height: this.height,\n      rx: this.corner_radius,\n      ry: this.corner_radius,\n      class: \"bar\",\n      append_to: this.bar_group,\n    });\n\n    animateSVG(this.$bar, \"width\", 0, this.width);\n\n    if (this.invalid) {\n      this.$bar.classList.add(\"bar-invalid\");\n    }\n  }\n\n  draw_expected_progress_bar() {\n    if (this.invalid) return;\n    this.$expected_bar_progress = createSVG(\"rect\", {\n      x: this.x,\n      y: this.y,\n      width: this.expected_progress_width,\n      height: this.height,\n      rx: this.corner_radius,\n      ry: this.corner_radius,\n      class: \"bar-expected-progress\",\n      append_to: this.bar_group,\n    });\n\n    animateSVG(\n      this.$expected_bar_progress,\n      \"width\",\n      0,\n      this.expected_progress_width,\n    );\n  }\n\n  draw_progress_bar() {\n    if (this.invalid) return;\n    this.$bar_progress = createSVG(\"rect\", {\n      x: this.x,\n      y: this.y,\n      width: this.progress_width,\n      height: this.height,\n      rx: this.corner_radius,\n      ry: this.corner_radius,\n      class: \"bar-progress\",\n      append_to: this.bar_group,\n    });\n    const x = (date_utils.diff(this.task._start, this.gantt.gantt_start, 'hour') /\n      this.gantt.options.step) *\n      this.gantt.options.column_width;\n\n    // TODO 待优化-只需渲染一个\n    let $date_highlight = document.createElement(\"div\");\n    $date_highlight.id = `highlight-${this.task.id}`;\n    $date_highlight.classList.add('date-highlight')\n    $date_highlight.style.height = this.height * 0.8 + 'px'\n    $date_highlight.style.width = this.width + 'px'\n    $date_highlight.style.top = this.gantt.options.header_height - 25 + 'px'\n    $date_highlight.style.left = x + 'px'\n    this.$date_highlight = $date_highlight\n    this.gantt.$lower_header.prepend($date_highlight)\n\n    animateSVG(this.$bar_progress, \"width\", 0, this.progress_width);\n  }\n\n  draw_label() {\n    let x_coord = this.x + this.$bar.getWidth() / 2;\n\n    if (this.task.thumbnail) {\n      x_coord = this.x + 10 + this.image_size + 5;\n    }\n\n    createSVG(\"text\", {\n      x: x_coord,\n      y: this.y + this.height / 2,\n      innerHTML: this.task.name,\n      class: \"bar-label\",\n      append_to: this.bar_group,\n    });\n    // labels get BBox in the next tick\n    requestAnimationFrame(() => this.update_label_position());\n  }\n  draw_thumbnail() {\n    let x_offset = 10, y_offset = 2;\n    let defs, clipPath;\n\n    defs = createSVG('defs', {\n      append_to: this.bar_group\n    });\n\n    createSVG('rect', {\n      id: 'rect_' + this.task.id,\n      x: this.x + x_offset,\n      y: this.y + y_offset,\n      width: this.image_size,\n      height: this.image_size,\n      rx: '15',\n      class: 'img_mask',\n      append_to: defs\n    });\n\n    clipPath = createSVG('clipPath', {\n      id: 'clip_' + this.task.id,\n      append_to: defs\n    });\n\n    createSVG('use', {\n      href: '#rect_' + this.task.id,\n      append_to: clipPath\n    });\n\n    createSVG('image', {\n      x: this.x + x_offset,\n      y: this.y + y_offset,\n      width: this.image_size,\n      height: this.image_size,\n      class: 'bar-img',\n      href: this.task.thumbnail,\n      clipPath: 'clip_' + this.task.id,\n      append_to: this.bar_group\n    });\n  }\n\n  draw_resize_handles() {\n    if (this.invalid || this.gantt.options.readonly) return;\n\n    const bar = this.$bar;\n    const handle_width = this.gantt.options.handle_width;\n\n    const gw = bar.getWidth();\n\n    createSVG(\"rect\", {\n      x: bar.getX() + (gw > handle_width ? (gw - handle_width - 1) : (gw + handle_width)),\n      y: bar.getY() + 1,\n      width: handle_width,\n      height: this.height - 2,\n      rx: this.corner_radius,\n      ry: this.corner_radius,\n      class: \"handle right\",\n      append_to: this.handle_group,\n    });\n\n    createSVG(\"rect\", {\n      x: bar.getX() + 1,\n      y: bar.getY() + 1,\n      width: handle_width,\n      height: this.height - 2,\n      rx: this.corner_radius,\n      ry: this.corner_radius,\n      class: \"handle left\",\n      append_to: this.handle_group,\n    });\n\n    this.$handle_progress = createSVG(\"polygon\", {\n      points: this.get_progress_polygon_points().join(\",\"),\n      class: \"handle progress\",\n      append_to: this.handle_group,\n    });\n  }\n\n  get_progress_polygon_points() {\n    const bar_progress = this.$bar_progress;\n    let icon_width = 10;\n    let icon_height = 15;\n\n    return [\n      bar_progress.getEndX() - icon_width / 2,\n      bar_progress.getY() + bar_progress.getHeight() / 2,\n\n      bar_progress.getEndX(),\n      bar_progress.getY() + bar_progress.getHeight() / 2 - icon_height / 2,\n\n      bar_progress.getEndX() + icon_width / 2,\n      bar_progress.getY() + bar_progress.getHeight() / 2,\n\n      bar_progress.getEndX(),\n      bar_progress.getY() + bar_progress.getHeight() / 2 + icon_height / 2,\n\n      bar_progress.getEndX() - icon_width / 2,\n      bar_progress.getY() + bar_progress.getHeight() / 2,\n    ];\n  }\n\n  bind() {\n    if (this.invalid) return;\n    this.setup_click_event();\n  }\n\n  setup_click_event() {\n    let task_id = this.task.id;\n    $.on(this.group, \"mouseover\", (e) => {\n      this.gantt.trigger_event(\"hover\", [this.task, e.screenX, e.screenY, e])\n    })\n\n    let timeout;\n    $.on(this.group, \"mouseenter\", (e) => timeout = setTimeout(() => {\n      this.show_popup(e.offsetX)\n      document.querySelector(`#highlight-${task_id}`).style.display = 'block';\n    }, 200))\n\n    $.on(this.group, \"mouseleave\", () => {\n      clearTimeout(timeout)\n      this.gantt.popup?.hide?.()\n      document.querySelector(`#highlight-${task_id}`).style.display = 'none';\n    })\n\n\n    $.on(this.group, this.gantt.options.popup_trigger, () => {\n      this.gantt.trigger_event(\"click\", [this.task]);\n    });\n\n    $.on(this.group, \"dblclick\", (e) => {\n      if (this.action_completed) {\n        // just finished a move action, wait for a few seconds\n        return;\n      }\n\n      this.gantt.trigger_event(\"double_click\", [this.task]);\n    });\n  }\n\n  show_popup(x) {\n    if (this.gantt.bar_being_dragged) return;\n\n    const start_date = date_utils.format(\n      this.task._start,\n      \"MMM D\",\n      this.gantt.options.language,\n    );\n    const end_date = date_utils.format(\n      date_utils.add(this.task._end, -1, \"second\"),\n      \"MMM D\",\n      this.gantt.options.language,\n    );\n    const subtitle = `${start_date} -  ${end_date}<br/>Progress: ${this.task.progress}`;\n\n    this.gantt.show_popup({\n      x,\n      target_element: this.$bar,\n      title: this.task.name,\n      subtitle: subtitle,\n      task: this.task,\n    });\n  }\n\n  update_bar_position({ x = null, width = null }) {\n    const bar = this.$bar;\n    if (x) {\n      if (this.gantt.options.drag_limit_child) {\n        // get all x values of parent task\n        const xs = this.task.dependencies.map((dep) => {\n          return this.gantt.get_bar(dep).$bar.getX();\n        });\n        // child task must not go before parent\n        const valid_x = xs.reduce((_, curr) => {\n          return x >= curr;\n        }, x);\n\n        if (!valid_x) {\n          width = null;\n          return;\n        }\n      }\n\n      this.update_attr(bar, \"x\", x);\n      if (this.$date_highlight) this.$date_highlight.style.left = x + 'px';\n    }\n    if (width) {\n      this.update_attr(bar, \"width\", width);\n      if (this.$date_highlight) this.$date_highlight.style.width = width + 'px';\n    }\n    this.update_label_position();\n    this.update_handle_position();\n    if (this.gantt.options.show_expected_progress) {\n      this.date_changed();\n      this.compute_duration();\n      this.update_expected_progressbar_position();\n    }\n    this.update_progressbar_position();\n    this.update_arrow_position();\n  }\n\n  update_label_position_on_horizontal_scroll({ x, sx }) {\n    const container = document.querySelector('.gantt-container');\n    const label = this.group.querySelector('.bar-label');\n    const img = this.group.querySelector('.bar-img') || '';\n    const img_mask = this.bar_group.querySelector('.img_mask') || '';\n\n    let barWidthLimit = this.$bar.getX() + this.$bar.getWidth();\n    let newLabelX = label.getX() + x;\n    let newImgX = img && img.getX() + x || 0;\n    let imgWidth = img && img.getBBox().width + 7 || 7;\n    let labelEndX = newLabelX + label.getBBox().width + 7;\n    let viewportCentral = sx + container.clientWidth / 2;\n\n    if (label.classList.contains('big')) return;\n\n    if (labelEndX < barWidthLimit && x > 0 && labelEndX < viewportCentral) {\n      label.setAttribute('x', newLabelX);\n      if (img) {\n        img.setAttribute('x', newImgX);\n        img_mask.setAttribute('x', newImgX);\n      }\n    } else if ((newLabelX - imgWidth) > this.$bar.getX() && x < 0 && labelEndX > viewportCentral) {\n      label.setAttribute('x', newLabelX);\n      if (img) {\n        img.setAttribute('x', newImgX);\n        img_mask.setAttribute('x', newImgX);\n      }\n\n    }\n  }\n\n  date_changed() {\n    let changed = false;\n    const { new_start_date, new_end_date } = this.compute_start_end_date();\n\n    if (Number(this.task._start) !== Number(new_start_date)) {\n      changed = true;\n      this.task._start = new_start_date;\n    }\n\n    if (Number(this.task._end) !== Number(new_end_date)) {\n      changed = true;\n      this.task._end = new_end_date;\n    }\n\n    if (!changed) return;\n\n    // TODO new_start_date > this.gantt_start or new_end_date > this.gantt_end\n\n    this.gantt.trigger_event(\"date_change\", [\n      this.task,\n      new_start_date,\n      date_utils.add(new_end_date, -1, \"second\"),\n    ]);\n  }\n\n  progress_changed() {\n    const new_progress = this.compute_progress();\n    this.task.progress = new_progress;\n    this.gantt.trigger_event(\"progress_change\", [this.task, new_progress]);\n  }\n\n  set_action_completed() {\n    this.action_completed = true;\n    setTimeout(() => (this.action_completed = false), 1000);\n  }\n\n  compute_start_end_date() {\n    const bar = this.$bar;\n    const x_in_units = bar.getX() / this.gantt.options.column_width;\n    const new_start_date = date_utils.add(\n      this.gantt.gantt_start,\n      x_in_units * this.gantt.options.step,\n      \"hour\",\n    );\n    const width_in_units = bar.getWidth() / this.gantt.options.column_width;\n    const new_end_date = date_utils.add(\n      new_start_date,\n      width_in_units * this.gantt.options.step,\n      \"hour\",\n    );\n\n    return { new_start_date, new_end_date };\n  }\n\n  compute_progress() {\n    const progress =\n      (this.$bar_progress.getWidth() / this.$bar.getWidth()) * 100;\n    return parseInt(progress, 10);\n  }\n\n  compute_expected_progress() {\n    this.expected_progress =\n      date_utils.diff(date_utils.today(), this.task._start, \"hour\") /\n      this.gantt.options.step;\n    // 未到当前日期\n    if (this.expected_progress < 0) {\n      this.expected_progress = 0;\n    }\n    this.expected_progress =\n      ((this.expected_progress < this.duration\n        ? this.expected_progress\n        : this.duration) *\n        100) /\n      this.duration;\n  }\n\n  compute_x() {\n    const { step, column_width } = this.gantt.options;\n    const task_start = this.task._start;\n    const gantt_start = this.gantt.gantt_start;\n\n    const diff = date_utils.diff(task_start, gantt_start, \"hour\");\n    let x = (diff / step) * column_width;\n\n    if (this.gantt.view_is(\"Month\")) {\n      const diff = date_utils.diff(task_start, gantt_start, \"day\");\n      x = (diff * column_width) / 30;\n    }\n    this.x = x;\n  }\n\n  compute_y() {\n    // this.y =\n    //   this.gantt.options.header_height +\n    //   this.gantt.options.padding / 2 +\n    //   this.task._index * (this.height + this.gantt.options.padding);\n    this.y = this.gantt.options.padding / 2 +\n      this.task._index * (this.height + this.gantt.options.padding);\n  }\n\n  compute_duration() {\n    this.duration =\n      date_utils.diff(this.task._end, this.task._start, \"hour\") /\n      this.gantt.options.step;\n  }\n\n  get_snap_position(dx) {\n    let odx = dx,\n      rem,\n      position;\n\n    if (this.gantt.view_is(\"Week\")) {\n      rem = dx % (this.gantt.options.column_width / 7);\n      position =\n        odx -\n        rem +\n        (rem < this.gantt.options.column_width / 14\n          ? 0\n          : this.gantt.options.column_width / 7);\n    } else if (this.gantt.view_is(\"Month\")) {\n      rem = dx % (this.gantt.options.column_width / 30);\n      position =\n        odx -\n        rem +\n        (rem < this.gantt.options.column_width / 60\n          ? 0\n          : this.gantt.options.column_width / 30);\n    } else {\n      rem = dx % this.gantt.options.column_width;\n      position =\n        odx -\n        rem +\n        (rem < this.gantt.options.column_width / 2\n          ? 0\n          : this.gantt.options.column_width);\n    }\n    return position;\n  }\n\n  update_attr(element, attr, value) {\n    value = +value;\n    if (!isNaN(value)) {\n      element.setAttribute(attr, value);\n    }\n    return element;\n  }\n\n  update_expected_progressbar_position() {\n    if (this.invalid) return;\n    this.$expected_bar_progress.setAttribute(\"x\", this.$bar.getX());\n    this.compute_expected_progress();\n    this.$expected_bar_progress.setAttribute(\n      \"width\",\n      this.gantt.options.column_width *\n      this.duration *\n      (this.expected_progress / 100) || 0,\n    );\n  }\n\n  update_progressbar_position() {\n    if (this.invalid || this.gantt.options.readonly) return;\n    this.$bar_progress.setAttribute(\"x\", this.$bar.getX());\n    this.$bar_progress.setAttribute(\n      \"width\",\n      this.$bar.getWidth() * (this.task.progress / 100),\n    );\n  }\n\n  update_label_position() {\n    const img_mask = this.bar_group.querySelector('.img_mask') || '';\n    const bar = this.$bar,\n      label = this.group.querySelector(\".bar-label\"),\n      img = this.group.querySelector('.bar-img');\n\n\n    let padding = 10;\n    let x_offset_label_img = this.image_size + 5;\n    const labelWidth = label.getBBox().width\n    const barWidth = bar.getWidth()\n    if (labelWidth > barWidth) {\n      label.classList.add(\"big\");\n      if (img) {\n        img.setAttribute('x', bar.getX() + barWidth + padding);\n        img_mask.setAttribute('x', bar.getX() + barWidth + padding);\n        label.setAttribute('x', bar.getX() + barWidth + x_offset_label_img);\n      } else {\n        label.setAttribute('x', bar.getX() + barWidth + padding);\n      }\n    } else {\n      label.classList.remove(\"big\");\n      if (img) {\n        img.setAttribute('x', bar.getX() + padding);\n        img_mask.setAttribute('x', bar.getX() + padding);\n        label.setAttribute('x', bar.getX() + padding + x_offset_label_img);\n      } else {\n        label.setAttribute('x', bar.getX() + barWidth / 2 - labelWidth / 2);\n      }\n    }\n  }\n\n  update_handle_position() {\n    if (this.invalid || this.gantt.options.readonly) return;\n    const bar = this.$bar;\n    const handle_width = this.gantt.options.handle_width;\n\n    this.handle_group\n      .querySelector(\".handle.left\")\n      .setAttribute(\"x\", bar.getX() + 1);\n    this.handle_group\n      .querySelector(\".handle.right\")\n      .setAttribute(\"x\", bar.getEndX() - handle_width - 1);\n    const handle = this.group.querySelector(\".handle.progress\");\n    handle && handle.setAttribute(\"points\", this.get_progress_polygon_points());\n  }\n\n  update_arrow_position() {\n    this.arrows = this.arrows || [];\n    for (let arrow of this.arrows) {\n      arrow.update();\n    }\n  }\n}\n\nfunction isFunction(functionToCheck) {\n  let getType = {};\n  return (\n    functionToCheck &&\n    getType.toString.call(functionToCheck) === \"[object Function]\"\n  );\n}\n","import { createSVG } from \"./svg_utils\";\n\nexport default class Arrow {\n  constructor(gantt, from_task, to_task) {\n    this.gantt = gantt;\n    this.from_task = from_task;\n    this.to_task = to_task;\n\n    this.calculate_path();\n    this.draw();\n    this.drawInner();\n  }\n\n  calculate_path() {\n    if (this.from_task.empty || this.to_task.empty) return;\n\n    const rowHeight = this.gantt.options.bar_height + this.gantt.options.padding;\n    const taskHeight = this.gantt.options.bar_height;\n    const arrowCurve = this.gantt.options.arrow_curve;\n    const arrowIndent = this.gantt.options.column_width / 2;\n    const taskFrom = this.from_task;\n    const taskTo = this.to_task;\n\n    const taskFromX2 = taskFrom.$bar.getEndX();\n    const taskFromY1 = taskFrom.$bar.getY();\n    const taskToX1 = taskTo.$bar.getX();\n    const taskToY1 = taskTo.$bar.getY();\n\n    const indexCompare = taskFrom.task._index > taskTo.task._index ? -1 : 1;\n    const taskToEndPosition = taskToY1 + taskHeight / 2;\n    const taskFromEndPosition = taskFromX2 + arrowIndent * 2;\n\n    const taskFromHorizontalOffsetValue =\n        taskFromEndPosition < taskToX1 ? '' : `H ${taskToX1 - arrowIndent}`;\n    const taskToHorizontalOffsetValue =\n        taskFromEndPosition > taskToX1\n            ? arrowIndent\n            : taskToX1 - taskFromX2 - arrowIndent;\n\n    const path = `M ${taskFromX2} ${taskFromY1 + taskHeight / 2}\n    h ${arrowIndent}\n    v ${(indexCompare * rowHeight) / 2}\n    ${taskFromHorizontalOffsetValue}\n    V ${taskToEndPosition}\n    h ${taskToHorizontalOffsetValue}`;\n\n    const trianglePoints = `${taskToX1},${taskToEndPosition}\n    ${taskToX1 - arrowCurve},${taskToEndPosition - arrowCurve}\n    ${taskToX1 - arrowCurve},${taskToEndPosition + arrowCurve}`;\n\n    this.path = path;\n\n    this.points = trianglePoints;\n  }\n\n  draw() {\n    this.element = createSVG(\"g\", {\n      \"data-from\": this.from_task.task.id,\n      \"data-to\": this.to_task.task.id,\n    });\n  }\n\n  drawInner() {\n    if (this.from_task.empty || this.to_task.empty) return;\n\n    this.svgPath = createSVG(\"path\", {\n      d: this.path,\n      fill: \"none\",\n      append_to: this.element\n    });\n    this.svgPolygon = createSVG(\"polygon\", {\n      points: this.points,\n      append_to: this.element,\n    });\n  }\n\n  update() {\n    if (this.from_task.empty || this.to_task.empty) return;\n\n    this.calculate_path();\n    this.svgPath.setAttribute(\"d\", this.path);\n    this.svgPolygon.setAttribute(\"points\", this.points);\n  }\n}\n","export default class Popup {\n  constructor(parent, custom_html) {\n    this.parent = parent;\n    this.custom_html = custom_html;\n    this.make();\n  }\n\n  make() {\n    this.parent.innerHTML = `\n            <div class=\"title\"></div>\n            <div class=\"subtitle\"></div>\n            <div class=\"pointer\"></div>\n        `;\n\n    this.hide();\n\n    this.title = this.parent.querySelector(\".title\");\n    this.subtitle = this.parent.querySelector(\".subtitle\");\n    this.pointer = this.parent.querySelector(\".pointer\");\n  }\n\n  show(options) {\n    if (!options.target_element) {\n      throw new Error(\"target_element is required to show popup\");\n    }\n    const target_element = options.target_element;\n\n    if (this.custom_html) {\n      let html = this.custom_html(options.task);\n      html += '<div class=\"pointer\"></div>';\n      this.parent.innerHTML = html;\n      this.pointer = this.parent.querySelector(\".pointer\");\n    } else {\n      // set data\n      this.title.innerHTML = options.title;\n      this.subtitle.innerHTML = options.subtitle;\n    }\n\n    // set position\n    let position_meta;\n    if (target_element instanceof HTMLElement) {\n      position_meta = target_element.getBoundingClientRect();\n    } else if (target_element instanceof SVGElement) {\n      position_meta = options.target_element.getBBox();\n    }\n\n    this.parent.style.left = options.x - this.parent.clientWidth / 2 + \"px\";\n    this.parent.style.top = position_meta.y + position_meta.height + 10 + \"px\";\n\n    this.pointer.style.left = this.parent.clientWidth / 2 + \"px\";\n    this.pointer.style.top = \"-15px\";\n\n    // show\n    this.parent.style.opacity = 1;\n  }\n\n  hide() {\n    this.parent.style.opacity = 0;\n    this.parent.style.left = 0;\n  }\n}\n","import date_utils from \"./date_utils\";\nimport { $, createSVG } from \"./svg_utils\";\nimport Bar from \"./bar\";\nimport Arrow from \"./arrow\";\nimport Popup from \"./popup\";\n\nimport \"./gantt.scss\";\n\nconst VIEW_MODE = {\n  HOUR: \"Hour\",\n  QUARTER_DAY: \"Quarter Day\",\n  HALF_DAY: \"Half Day\",\n  DAY: \"Day\",\n  WEEK: \"Week\",\n  MONTH: \"Month\",\n  YEAR: \"Year\",\n};\n\nconst VIEW_MODE_PADDING = {\n  HOUR: [\"7d\", \"7d\"],\n  QUARTER_DAY: [\"7d\", \"7d\"],\n  HALF_DAY: [\"7d\", \"7d\"],\n  DAY: [\"1m\", \"1m\"],\n  WEEK: [\"1m\", \"1m\"],\n  MONTH: [\"1m\", \"1m\"],\n  YEAR: [\"2y\", \"2y\"],\n};\n\nconst DEFAULT_OPTIONS = {\n  header_height: 65,\n  // column_width: 30,\n  // step: 24,\n  bar_height: 30,\n  bar_corner_radius: 3,\n  arrow_curve: 5,\n  handle_width: 8,\n  padding: 18,\n  view_modes: [...Object.values(VIEW_MODE)],\n  view_mode: VIEW_MODE.DAY,\n  date_format: \"YYYY-MM-DD\",\n  popup_trigger: \"click\",\n  show_expected_progress: false,\n  drag_sync_child: false,\n  drag_limit_child: false,\n  popup: null,\n  language: \"en\",\n  readonly: false,\n  highlight_weekend: true,\n  scroll_to: 'start',\n  lines: 'both',\n  auto_move_label: true,\n  today_button: true,\n  view_mode_select: false,\n};\n\nlet count = 0;\n\nexport default class Gantt {\n  constructor(wrapper, tasks, options) {\n    this.setup_wrapper(wrapper);\n    this.setup_options(options);\n    this.setup_tasks(tasks);\n    // initialize with default view mode\n    this.change_view_mode();\n    this.bind_events();\n  }\n\n  setup_wrapper(element) {\n    let svg_element, wrapper_element;\n\n    // CSS Selector is passed\n    if (typeof element === \"string\") {\n      element = document.querySelector(element);\n    }\n\n    // count new Constructor\n    $.attr(element, { init: ++count });\n\n    // get the SVGElement\n    if (element instanceof HTMLElement) {\n      element.innerHTML = \"\";\n      wrapper_element = element;\n      svg_element = element.querySelector(\"svg\");\n    } else if (element instanceof SVGElement) {\n      svg_element = element;\n      // TODO if element is svg\n    } else {\n      throw new TypeError(\n        \"Frappé Gantt only supports usage of a string CSS selector,\" +\n        \" HTML DOM element or SVG DOM element for the 'element' parameter\",\n      );\n    }\n\n    // svg element\n    if (!svg_element) {\n      // create it\n      this.$svg = createSVG(\"svg\", {\n        append_to: wrapper_element,\n        class: \"gantt\",\n      });\n    } else {\n      this.$svg = svg_element;\n      this.$svg.classList.add(\"gantt\");\n    }\n\n    // wrapper element\n    this.$container = document.createElement(\"div\");\n    this.$container.classList.add(\"gantt-container\");\n\n    // 1.header horizontal-scroll\n    this.$container_header = document.createElement('div');\n    this.$container_header.classList.add('gantt-container_header');\n    this.$container.appendChild(this.$container_header);\n\n    // 2.main vertical-scroll\n    this.$container_main = document.createElement('div');\n    this.$container_main.classList.add('gantt-container_main');\n    this.$container.appendChild(this.$container_main);\n\n    // 3. appendTo wrapper\n    const parent_element = this.$svg.parentElement;\n    parent_element.appendChild(this.$container);\n    this.$container_main.appendChild(this.$svg);\n\n    // 4. toobar wrapper\n    this.$container_toolbar = document.createElement('div');\n    this.$container_toolbar.classList.add('gantt-container_toolbar');\n    this.$container.appendChild(this.$container_toolbar);\n\n    // 4.popup wrapper\n    this.$popup_wrapper = document.createElement(\"div\");\n    this.$popup_wrapper.classList.add(\"popup-wrapper\");\n    this.$popup_wrapper.classList.add(\"hidden\");\n    this.$container.appendChild(this.$popup_wrapper);\n  }\n\n  setup_options(options) {\n    this.options = { ...DEFAULT_OPTIONS, ...options }\n    if (!options.view_mode_padding) options.view_mode_padding = {}\n    for (let [key, value] of Object.entries(options.view_mode_padding)) {\n      if (typeof value === \"string\") {\n        // Configure for single value given\n        options.view_mode_padding[key] = [value, value];\n      }\n    }\n\n    this.options.view_mode_padding = {\n      ...VIEW_MODE_PADDING,\n      ...options.view_mode_padding,\n    };\n  }\n\n  setup_tasks(tasks) {\n    // prepare tasks\n    this.tasks = tasks.map((task, i) => {\n      // reset symbol\n      task.empty = false;\n      task.invalid = false;\n\n      // convert to Date objects\n      task._start = date_utils.parse(task.start);\n      if (task.end === undefined && task.duration !== undefined) {\n        task.end = task._start;\n        let durations = task.duration.split(\" \");\n\n        durations.forEach((tmpDuration) => {\n          let { duration, scale } = date_utils.parse_duration(tmpDuration);\n          task.end = date_utils.add(task.end, duration, scale);\n        });\n      }\n      task._end = date_utils.parse(task.end);\n      let diff = date_utils.diff(task._end, task._start, \"year\");\n      if (diff < 0) {\n        throw Error(\"start of task can't be after end of task: in task #, \" + (i + 1))\n      }\n      // make task invalid if duration too large\n      if (date_utils.diff(task._end, task._start, \"year\") > 10) {\n        task.end = null;\n      }\n\n\n      // cache index\n      task._index = i;\n\n      // invalid dates\n      if (!task.start && !task.end) {\n        task._start = null;\n        task._end = null;\n        task.empty = true;\n        // const today = date_utils.today();\n        // task._start = today;\n        // task._end = date_utils.add(today, 2, \"day\");\n      }\n\n      if (!task.start && task.end) {\n        task._start = date_utils.add(task._end, -2, \"day\");\n      }\n\n      if (task.start && !task.end) {\n        task._end = date_utils.add(task._start, 2, \"day\");\n      }\n\n      // if hours is not set, assume the last day is full day\n      // e.g: 2018-09-09 becomes 2018-09-09 23:59:59\n      if (task._end) {\n        const task_end_values = date_utils.get_date_values(task._end);\n        if (task_end_values.slice(3).every((d) => d === 0)) {\n          task._end = date_utils.add(task._end, 24, \"hour\");\n        }\n      }\n\n      // invalid flag\n      if (!task.start || !task.end) {\n        task.invalid = true;\n      }\n\n      // dependencies\n      if (typeof task.dependencies === \"string\" || !task.dependencies) {\n        let deps = [];\n        if (task.dependencies) {\n          deps = task.dependencies\n            .split(\",\")\n            .map((d) => d.trim().replaceAll(' ', '_'))\n            .filter((d) => d);\n        }\n        task.dependencies = deps;\n      }\n\n      // uids\n      if (!task.id) {\n        task.id = generate_id(task);\n      } else if (typeof task.id === 'string') {\n        task.id = task.id.replaceAll(' ', '_')\n      } else {\n        task.id = `${task.id}`\n      }\n\n      return task;\n    });\n\n    this.setup_dependencies();\n  }\n\n  setup_dependencies() {\n    this.dependency_map = {};\n    for (let t of this.tasks) {\n      for (let d of t.dependencies) {\n        this.dependency_map[d] = this.dependency_map[d] || [];\n        this.dependency_map[d].push(t.id);\n      }\n    }\n  }\n\n  refresh(tasks) {\n    this.setup_tasks(tasks);\n    this.change_view_mode();\n  }\n\n  change_view_mode(mode = this.options.view_mode) {\n    this.update_view_scale(mode);\n    this.setup_dates();\n    this.render();\n    // fire viewmode_change event\n    this.trigger_event(\"view_change\", [mode]);\n  }\n\n  update_view_scale(view_mode) {\n    this.options.view_mode = view_mode;\n    if (view_mode === VIEW_MODE.HOUR) {\n      this.options.step = 24 / 24;\n      this.options.column_width = 38;\n    } else if (view_mode === VIEW_MODE.DAY) {\n      this.options.step = 24;\n      this.options.column_width = 38;\n    } else if (view_mode === VIEW_MODE.HALF_DAY) {\n      this.options.step = 24 / 2;\n      this.options.column_width = 38;\n    } else if (view_mode === VIEW_MODE.QUARTER_DAY) {\n      this.options.step = 24 / 4;\n      this.options.column_width = 38;\n    } else if (view_mode === VIEW_MODE.WEEK) {\n      this.options.step = 24 * 7;\n      this.options.column_width = 140;\n    } else if (view_mode === VIEW_MODE.MONTH) {\n      this.options.step = 24 * 30;\n      this.options.column_width = 120;\n    } else if (view_mode === VIEW_MODE.YEAR) {\n      this.options.step = 24 * 365;\n      this.options.column_width = 120;\n    }\n  }\n\n  setup_dates() {\n    this.setup_gantt_dates();\n    this.setup_date_values();\n  }\n\n  setup_gantt_dates() {\n    this.gantt_start = this.gantt_end = null;\n\n    for (let task of this.tasks) {\n      // set global start and end date\n      if (!this.gantt_start || (task._start && task._start < this.gantt_start)) {\n          this.gantt_start = task._start;\n      }\n      if (!this.gantt_end || (task._end && task._end > this.gantt_end)) {\n        this.gantt_end = task._end;\n      }\n    }\n    let gantt_start, gantt_end;\n    if (!this.gantt_start) gantt_start = new Date();\n    else gantt_start = date_utils.start_of(this.gantt_start, \"day\");\n    if (!this.gantt_end) gantt_end = new Date();\n    else gantt_end = date_utils.start_of(this.gantt_end, \"day\");\n\n\n    // ensure today in daterange\n    const today = date_utils.today();\n    if (gantt_start > today) gantt_start = today;\n    if (gantt_end < today) gantt_end = today;\n\n    // add date padding on both sides\n    let viewKey;\n    for (let [key, value] of Object.entries(VIEW_MODE)) {\n      if (value === this.options.view_mode) {\n        viewKey = key;\n      }\n    }\n    const [padding_start, padding_end] = this.options.view_mode_padding[\n      viewKey\n    ].map(date_utils.parse_duration);\n    gantt_start = date_utils.add(\n      gantt_start,\n      -padding_start.duration,\n      padding_start.scale,\n    );\n\n    let format_string;\n    if (this.view_is(VIEW_MODE.YEAR)) {\n      format_string = \"YYYY\"\n    } else if (this.view_is(VIEW_MODE.MONTH)) {\n      format_string = \"YYYY-MM\"\n    } else if (this.view_is(VIEW_MODE.DAY)) {\n      format_string = \"YYYY-MM-DD\"\n    } else {\n      format_string = \"YYYY-MM-DD HH\"\n    }\n    this.gantt_start = date_utils.parse(date_utils.format(gantt_start, format_string));\n    this.gantt_start.setHours(0, 0, 0, 0)\n    this.gantt_end = date_utils.add(\n      gantt_end,\n      padding_end.duration,\n      padding_end.scale,\n    );\n\n    console.log('gantt ==> start_end', this.gantt_start, this.gantt_end);\n  }\n\n  setup_date_values() {\n    this.dates = [];\n    let cur_date = null;\n\n    while (cur_date === null || cur_date < this.gantt_end) {\n      if (!cur_date) {\n        cur_date = date_utils.clone(this.gantt_start);\n      } else {\n        if (this.view_is(VIEW_MODE.YEAR)) {\n          cur_date = date_utils.add(cur_date, 1, \"year\");\n        } else if (this.view_is(VIEW_MODE.MONTH)) {\n          cur_date = date_utils.add(cur_date, 1, \"month\");\n        } else {\n          cur_date = date_utils.add(cur_date, this.options.step, \"hour\");\n        }\n      }\n      this.dates.push(cur_date);\n    }\n  }\n\n  bind_events() {\n    this.bind_grid_scroll();\n\n    if (this.options.readonly) return\n    this.bind_grid_click();\n    this.bind_bar_create();\n    this.bind_bar_events();\n  }\n\n  render() {\n    this.clear();\n    this.setup_layers();\n    this.make_grid();\n    this.make_dates();\n    this.make_bars();\n    this.make_grid_extras();\n    this.make_arrows();\n    this.map_arrows_on_bars();\n    this.set_width();\n    this.set_scroll_position(this.options.scroll_to);\n  }\n\n  setup_layers() {\n    this.layers = {};\n    const layers = [\"grid\", \"arrow\", \"progress\", \"bar\", \"details\"];\n    // make group layers\n    for (let layer of layers) {\n      this.layers[layer] = createSVG(\"g\", {\n        class: layer,\n        append_to: this.$svg,\n      });\n    }\n  }\n\n  make_grid() {\n    this.make_grid_background();\n    this.make_grid_rows();\n    this.make_grid_header();\n    this.make_grid_toolbar();\n  }\n\n  make_grid_extras() {\n    this.make_grid_highlights();\n    this.make_grid_ticks();\n  }\n\n  make_grid_background() {\n    const grid_width = this.dates.length * this.options.column_width;\n    const grid_height = (this.options.bar_height + this.options.padding) * this.tasks.length;\n\n    createSVG(\"rect\", {\n      x: 0,\n      y: 0,\n      width: grid_width,\n      height: grid_height,\n      class: \"grid-background\",\n      append_to: this.$svg,\n    });\n\n    const scroll_height = this.options.height ? this.options.height + 'px' : `calc(100% - ${this.options.header_height + 1}px`;\n    this.$container_main.style.height = scroll_height;\n    this.$container_main.style.width = '100%';\n    this.$container_main.style.overflow = 'auto';\n    this.$container_main.style.position = 'relative';\n    this.$container.style.overflow = 'hidden';\n\n    $.attr(this.$svg, {\n      height: grid_height ,\n      width: \"100%\",\n    });\n  }\n\n  make_grid_rows() {\n    const rows_layer = createSVG(\"g\", { append_to: this.layers.grid });\n\n    const row_width = this.dates.length * this.options.column_width;\n    const row_height = this.options.bar_height + this.options.padding;\n\n    let row_y = 0;\n\n    for (let _ of this.tasks) {\n      createSVG(\"rect\", {\n        x: 0,\n        y: row_y,\n        width: row_width,\n        height: row_height,\n        class: \"grid-row\",\n        append_to: rows_layer,\n      });\n      if (this.options.lines === 'both' || this.options.lines === 'horizontal') {\n\n      }\n\n      row_y += this.options.bar_height + this.options.padding;\n    }\n  }\n\n  make_grid_header() {\n    let $header = document.createElement(\"div\");\n    $header.style.height = this.options.header_height + \"px\";\n    $header.style.width = this.dates.length * this.options.column_width + \"px\";\n    $header.classList.add('grid-header')\n    this.$header = $header\n\n    let $upper_header = document.createElement(\"div\");\n    $upper_header.classList.add('upper-header')\n    this.$upper_header = $upper_header\n    this.$header.appendChild($upper_header)\n\n    let $lower_header = document.createElement(\"div\");\n    $lower_header.classList.add('lower-header')\n    this.$lower_header = $lower_header\n    this.$header.appendChild($lower_header)\n\n    this.$container_header.appendChild(this.$header);\n  }\n\n  make_grid_toolbar() {\n    const $side_header = this.$container_toolbar;\n\n    // Create view mode change select\n    if (this.options.view_mode_select) {\n\n      const $select = document.createElement(\"select\");\n      $select.classList.add('viewmode-select')\n\n      const $el = document.createElement(\"option\");\n      $el.selected = true\n      $el.disabled = true\n      $el.textContent = 'Mode'\n      $select.appendChild($el)\n\n      const modes = this.options.view_modes;\n      for (const key in modes) {\n        const $option = document.createElement(\"option\");\n        $option.value = modes[key];\n        $option.textContent = modes[key];\n        $select.appendChild($option);\n      }\n      // $select.value = this.options.view_mode\n      $select.addEventListener(\"change\", (function () {\n        this.change_view_mode($select.value)\n      }).bind(this));\n      $side_header.appendChild($select)\n    }\n\n    // Create today button\n    if (this.options.today_button) {\n      let $today_button = document.createElement('button')\n      $today_button.classList.add('today-button')\n      $today_button.textContent = 'Today'\n      $today_button.onclick = this.scroll_today.bind(this)\n      $side_header.appendChild($today_button)\n    }\n\n    // position\n    const top = Math.max(0, this.options.header_height - 50 - 5);\n    $side_header.style.top = top + 'px';\n  }\n\n  make_grid_ticks() {\n    if (!['both', 'vertical', 'horizontal'].includes(this.options.lines)) return\n    let tick_x = 0;\n    let tick_y = 0;\n    let tick_height =\n      (this.options.bar_height + this.options.padding) * this.tasks.length;\n\n    let $lines_layer = createSVG(\"g\", { class: 'lines_layer', append_to: this.layers.grid });\n\n    let row_y = 0;\n\n    const row_width = this.dates.length * this.options.column_width;\n    const row_height = this.options.bar_height + this.options.padding;\n    if (this.options.lines !== 'vertical') {\n      for (let _ of this.tasks) {\n        createSVG(\"line\", {\n          x1: 0,\n          y1: row_y + row_height,\n          x2: row_width,\n          y2: row_y + row_height,\n          class: \"row-line\",\n          append_to: $lines_layer,\n        });\n        row_y += row_height;\n      }\n    }\n    if (this.options.lines === 'horizontal') return;\n    for (let date of this.dates) {\n      let tick_class = \"tick\";\n      // thick tick for monday\n      if (this.view_is(VIEW_MODE.DAY) && date.getDate() === 1) {\n        tick_class += \" thick\";\n      }\n      // thick tick for first week\n      if (\n        this.view_is(VIEW_MODE.WEEK) &&\n        date.getDate() >= 1 &&\n        date.getDate() < 8\n      ) {\n        tick_class += \" thick\";\n      }\n      // thick ticks for quarters\n      if (this.view_is(VIEW_MODE.MONTH) && date.getMonth() % 3 === 0) {\n        tick_class += \" thick\";\n      }\n\n      createSVG(\"path\", {\n        d: `M ${tick_x} ${tick_y} v ${tick_height}`,\n        class: tick_class,\n        append_to: this.layers.grid,\n      });\n\n      if (this.view_is(VIEW_MODE.MONTH)) {\n        tick_x +=\n          (date_utils.get_days_in_month(date) * this.options.column_width) / 30;\n      } else {\n        tick_x += this.options.column_width;\n      }\n    }\n  }\n\n  highlightWeekends() {\n    if (!this.view_is('Day') && !this.view_is('Half Day')) return\n    for (let d = new Date(this.gantt_start); d <= this.gantt_end; d.setDate(d.getDate() + 1)) {\n      if (d.getDay() === 0 || d.getDay() === 6) {\n        const x = (date_utils.diff(d, this.gantt_start, 'hour') /\n          this.options.step) *\n          this.options.column_width;\n        const height = (this.options.bar_height + this.options.padding) * this.tasks.length;\n        createSVG('rect', {\n          x,\n          y: 0,\n          width: (this.view_is('Day') ? 1 : 2) * this.options.column_width,\n          height,\n          class: 'holiday-highlight',\n          append_to: this.layers.grid,\n        });\n      }\n    }\n  }\n\n  //compute the horizontal x distance\n  computeGridHighlightDimensions(view_mode) {\n    let x = this.options.column_width / 2;\n\n    if (this.view_is(VIEW_MODE.DAY)) {\n      let today = date_utils.today()\n      return {\n        x: x +\n          (date_utils.diff(today, this.gantt_start, \"hour\") / this.options.step) *\n          this.options.column_width,\n        date: today\n      }\n    }\n\n    for (let date of this.dates) {\n      const todayDate = new Date();\n      const startDate = new Date(date);\n      const endDate = new Date(date);\n      switch (view_mode) {\n        case VIEW_MODE.WEEK:\n          endDate.setDate(date.getDate() + 7);\n          break;\n        case VIEW_MODE.MONTH:\n          endDate.setMonth(date.getMonth() + 1);\n          break;\n        case VIEW_MODE.YEAR:\n          endDate.setFullYear(date.getFullYear() + 1);\n          break;\n      }\n      if (todayDate >= startDate && todayDate <= endDate) {\n        return { x, date: startDate }\n      } else {\n        x += this.options.column_width;\n      }\n    }\n  }\n\n  make_grid_highlights() {\n    if (this.options.highlight_weekend) this.highlightWeekends()\n    // highlight today's | week's | month's | year's\n    if (\n      this.view_is(VIEW_MODE.DAY) ||\n      this.view_is(VIEW_MODE.WEEK) ||\n      this.view_is(VIEW_MODE.MONTH) ||\n      this.view_is(VIEW_MODE.YEAR)\n    ) {\n      // Used as we must find the _end_ of session if view is not Day\n      const grid_width = this.dates.length * this.options.column_width;\n      this.$today_overlay = this.create_el({ width: grid_width, classes: 'gantt-today-overlay', append_to: this.$container_main })\n\n      const { x: left, date } = this.computeGridHighlightDimensions(this.options.view_mode)\n      const top = 0;\n      const height = (this.options.bar_height + this.options.padding) * this.tasks.length;\n      this.create_el({ top, left, height, classes: 'today-highlight', append_to: this.$today_overlay })\n\n      let $today = document.getElementById(date_utils.format(date).replaceAll(' ', '_'))\n      $today.classList.add('today-date-highlight')\n      $today.style.top = +$today.style.top.slice(0, -2) - 4 + 'px'\n      $today.style.left = +$today.style.left.slice(0, -2) - 8 + 'px'\n    }\n  }\n\n  create_el({ left, top, width, height, id, classes, append_to }) {\n    let $el = document.createElement(\"div\");\n    $el.classList.add(classes)\n    $el.style.top = top + 'px'\n    $el.style.left = left + 'px'\n    if (id) $el.id = id\n    if (width) $el.style.width = width + 'px'\n    if (height) $el.style.height = height + 'px'\n    append_to.appendChild($el)\n    return $el\n  }\n\n  make_dates() {\n    this.upper_texts_x = {}\n    this.get_dates_to_draw().forEach((date, i) => {\n      let $lower_text = this.create_el({\n        left: date.lower_x,\n        top: date.lower_y,\n        id: date.formatted_date,\n        classes: 'lower-text',\n        append_to: this.$lower_header\n      })\n      $lower_text.innerText = date.lower_text\n      $lower_text.style.left = +$lower_text.style.left.slice(0, -2) - $lower_text.clientWidth / 2 + 'px'\n\n      if (date.upper_text) {\n        this.upper_texts_x[date.upper_text] = date.upper_x\n        let $upper_text = document.createElement('div');\n        $upper_text.classList.add('upper-text')\n        $upper_text.style.left = date.upper_x + 'px'\n        $upper_text.style.top = date.upper_y + 'px'\n        $upper_text.innerText = date.upper_text\n        this.$upper_header.appendChild($upper_text)\n\n        // remove out-of-bound dates\n        if (date.upper_x > this.layers.grid.getBBox().width) {\n          $upper_text.remove();\n        }\n      }\n    })\n  }\n\n  get_dates_to_draw() {\n    let last_date = null;\n    const dates = this.dates.map((date, i) => {\n      const d = this.get_date_info(date, last_date, i);\n      last_date = d;\n      return d;\n    });\n    return dates;\n  }\n\n  get_date_info(date, last_date_info) {\n    let last_date = last_date_info ? last_date_info.date : date_utils.add(date, 1, \"day\")\n    const date_text = {\n      Hour_lower: date_utils.format(date, \"HH\", this.options.language),\n      \"Quarter Day_lower\": date_utils.format(date, \"HH\", this.options.language),\n      \"Half Day_lower\": date_utils.format(date, \"HH\", this.options.language),\n      Day_lower:\n        date.getDate() !== last_date.getDate()\n          ? date_utils.format(date, \"D\", this.options.language)\n          : \"\",\n      Week_lower:\n        date.getMonth() !== last_date.getMonth()\n          ? date_utils.format(date, \"D MMM\", this.options.language)\n          : date_utils.format(date, \"D\", this.options.language),\n      Month_lower: date_utils.format(date, \"MMMM\", this.options.language),\n      Year_lower: date_utils.format(date, \"YYYY\", this.options.language),\n      Hour_upper:\n        date.getDate() !== last_date.getDate()\n          ? date_utils.format(date, \"D MMMM\", this.options.language)\n          : \"\",\n      \"Quarter Day_upper\":\n        date.getDate() !== last_date.getDate()\n          ? date_utils.format(date, \"D MMM\", this.options.language)\n          : \"\",\n      \"Half Day_upper\":\n        date.getDate() !== last_date.getDate()\n          ? date.getMonth() !== last_date.getMonth()\n            ? date_utils.format(date, \"D MMM\", this.options.language)\n            : date_utils.format(date, \"D\", this.options.language)\n          : \"\",\n      Day_upper:\n        date.getMonth() !== last_date.getMonth() || !last_date_info\n          ? date_utils.format(date, \"MMMM\", this.options.language)\n          : \"\",\n      Week_upper:\n        date.getMonth() !== last_date.getMonth()\n          ? date_utils.format(date, \"MMMM\", this.options.language)\n          : \"\",\n      Month_upper:\n        date.getFullYear() !== last_date.getFullYear()\n          ? date_utils.format(date, \"YYYY\", this.options.language)\n          : \"\",\n      Year_upper:\n        date.getFullYear() !== last_date.getFullYear()\n          ? date_utils.format(date, \"YYYY\", this.options.language)\n          : \"\",\n    };\n    let column_width = this.view_is(VIEW_MODE.MONTH) ? (date_utils.get_days_in_month(date) * this.options.column_width) / 30 : this.options.column_width;\n    const base_pos = {\n      x: last_date_info\n        ? last_date_info.base_pos_x + last_date_info.column_width\n        : 0,\n      lower_y: this.options.header_height - 20,\n      upper_y: this.options.header_height - 50,\n    };\n    const x_pos = {\n      Hour_lower: column_width / 2,\n      Hour_upper: column_width * 12,\n      \"Quarter Day_lower\": column_width / 2,\n      \"Quarter Day_upper\": column_width * 2,\n      \"Half Day_lower\": column_width / 2,\n      \"Half Day_upper\": column_width,\n      Day_lower: column_width / 2,\n      Day_upper: column_width / 2,\n      Week_lower: column_width / 2,\n      Week_upper: (column_width * 4) / 2,\n      Month_lower: column_width / 2,\n      Month_upper: column_width / 2,\n      Year_lower: column_width / 2,\n      Year_upper: (column_width * 30) / 2,\n    };\n    return {\n      date,\n      formatted_date: date_utils.format(date).replaceAll(' ', '_'),\n      column_width,\n      base_pos_x: base_pos.x,\n      upper_text: this.options.lower_text ? this.options.upper_text(date, this.options.view_mode, date_text[`${this.options.view_mode}_upper`]) : date_text[`${this.options.view_mode}_upper`],\n      lower_text: this.options.lower_text ? this.options.lower_text(date, this.options.view_mode, date_text[`${this.options.view_mode}_lower`]) : date_text[`${this.options.view_mode}_lower`],\n      upper_x: base_pos.x + x_pos[`${this.options.view_mode}_upper`],\n      upper_y: base_pos.upper_y,\n      lower_x: base_pos.x + x_pos[`${this.options.view_mode}_lower`],\n      lower_y: base_pos.lower_y,\n    };\n  }\n\n  make_bars() {\n    this.bars = this.tasks.map((task) => {\n      const bar = new Bar(this, task);\n      this.layers.bar.appendChild(bar.group);\n      return bar;\n    });\n  }\n\n  make_arrows() {\n    this.arrows = [];\n    for (let task of this.tasks) {\n      let arrows = [];\n      arrows = task.dependencies\n        .map((task_id) => {\n          const dependency = this.get_task(task_id);\n          if (!dependency) return;\n          const arrow = new Arrow(\n            this,\n            this.bars[dependency._index], // from_task\n            this.bars[task._index], // to_task\n          );\n          this.layers.arrow.appendChild(arrow.element);\n          return arrow;\n        })\n        .filter(Boolean); // filter falsy values\n      this.arrows = this.arrows.concat(arrows);\n    }\n  }\n\n  map_arrows_on_bars() {\n    for (let bar of this.bars) {\n      bar.arrows = this.arrows.filter((arrow) => {\n        return (\n          arrow.from_task.task.id === bar.task.id ||\n          arrow.to_task.task.id === bar.task.id\n        );\n      });\n    }\n  }\n\n  set_width() {\n    const cur_width = this.$svg.getBoundingClientRect().width;\n    const actual_width = this.$svg.querySelector('.grid .grid-row') ? this.$svg\n      .querySelector('.grid .grid-row')\n      .getAttribute('width') : 0;\n    if (cur_width < actual_width) {\n      this.$svg.setAttribute(\"width\", actual_width);\n    }\n  }\n\n  set_scroll_position(date) {\n    if (!date || date === 'start') {\n      date = this.gantt_start\n    } else if (date === 'today') {\n      return this.scroll_today()\n    } else if (typeof date === 'string') {\n      date = date_utils.parse(date)\n    }\n\n    const parent_element = this.$svg.parentElement;\n    if (!parent_element) return;\n\n    const hours_before_first_task = date_utils.diff(\n      date,\n      this.gantt_start,\n      \"hour\",\n    ) + 24;\n\n    const scroll_pos =\n      (hours_before_first_task / this.options.step) *\n      this.options.column_width -\n      this.options.column_width;\n    parent_element.scrollTo({ left: scroll_pos, behavior: 'smooth' })\n  }\n\n  scroll_today() {\n    this.set_scroll_position(new Date())\n  }\n\n  bind_grid_scroll() {\n    const grid_width = this.dates.length * this.options.column_width;\n\n    // onmousewheel\n    $.on(\n      this.$container_header,\n      'wheel',\n      (event) => {\n        if (event.shiftKey || event.deltaX) {\n          const scrollMove = event.deltaX ? event.deltaX : event.deltaY;\n          const scrollX = this.$container_main.scrollLeft || 0;\n          let newScrollX = scrollX + scrollMove;\n          if (newScrollX < 0) {\n            newScrollX = 0;\n          } else if (newScrollX > grid_width) {\n            newScrollX = grid_width;\n          }\n          this.$container_main.scrollLeft = newScrollX;\n          event.preventDefault();\n        }\n      }\n    );\n\n    $.on(this.$container_main,\n      'scroll',\n      $.throttle(20, () => {\n        const scrollLeft = this.$container_main.scrollLeft;\n        this.$container_header.scrollLeft = scrollLeft;\n      }),\n    );\n  }\n\n  bind_grid_click() {\n    $.on(\n      this.$svg,\n      this.options.popup_trigger,\n      \".grid-row, .grid-header\",\n      () => {\n        this.unselect_all();\n        this.hide_popup();\n      },\n    );\n  }\n\n  bind_bar_create() {\n    let x_on_start = 0;\n    let y_on_start = 0;\n    let matched_task = null;\n    let is_creating = null;\n    let holder = null;\n\n    const radius = this.options.bar_corner_radius;\n    const bar_height = this.options.bar_height;\n    const row_height = bar_height + this.options.padding;\n\n    $.on(this.$svg, \"mousedown\", \".grid-row\", (e) => {\n      // location\n      const index = parseInt(e.offsetY / row_height);\n      matched_task = this.tasks[index];\n      // only empty date\n      if (matched_task && matched_task.empty !== true) return;\n      // start record\n      is_creating = true;\n      x_on_start = e.offsetX;\n      [, y_on_start] = this.get_snap_coord(e.offsetX, e.offsetY);\n      // const date = this.get_snap_date(x_on_start);\n    });\n\n    $.on(this.$svg, \"mousemove\", (e) => {\n      if (!is_creating) return;\n      let dx = e.offsetX - x_on_start;\n\n      // limit block\n      // const width = this.get_snap_position(Math.abs(dx));\n      // free distance\n      const width = Math.abs(dx);\n      // create rect\n      if (!holder) {\n        holder = createSVG('rect', {\n          x: x_on_start,\n          y: y_on_start,\n          width: 0,\n          height: bar_height,\n          rx: radius,\n          ry: radius,\n          class: 'bar-progress',\n          'data-id': matched_task.id,\n          append_to: this.layers.progress,\n        });\n      }\n      // move-right\n      let x = x_on_start;\n      if (dx < 0) {\n        // move-left\n        x = x_on_start - width;\n      }\n      holder.setAttribute('x', x);\n      holder.setAttribute('width', width);\n    });\n\n    $.on(this.$svg, \"mouseup\", () => {\n      is_creating = false;\n      if (holder) {\n        const start_x = holder.getX();\n        const end_x = holder.getX() + holder.getBBox().width;\n        const date_start = this.get_snap_date(start_x);\n        const date_end = this.get_snap_date(end_x);\n\n        const update_task = Object.assign(matched_task, { _start: date_start, _end: date_end, empty: false, invalid: false })\n        // Bar\n        const update_bar = new Bar(this, update_task);\n\n        // remove old_bar from bars and bar-layers\n        const old_bar = this.bars[matched_task._index];\n        this.layers.bar.removeChild(old_bar.group);\n        this.bars.splice(matched_task._index, 1, update_bar);\n\n        // insert update_bar and update tasks\n        const target_postion = this.bars[matched_task._index+1];\n        this.layers.bar.insertBefore(update_bar.group, target_postion ? target_postion.group : null);\n        this.tasks.splice(matched_task._index, 1, update_task);\n\n        // Arrow\n        // before empty all childs, after appendto arrow-layers\n        this.layers.arrow.innerHTML = \"\";\n        this.make_arrows();\n        this.map_arrows_on_bars();\n\n        // remove holder dom\n        this.layers.progress.removeChild(holder);\n        // trigger event\n        this.trigger_event('date_change', [matched_task, date_start, date_end]);\n      }\n      holder = null;\n    });\n  }\n\n  bind_bar_events() {\n    let is_dragging = false;\n    let x_on_start = 0;\n    let x_on_scroll_start = 0;\n    let y_on_start = 0;\n    let is_resizing_left = false;\n    let is_resizing_right = false;\n    let parent_bar_id = null;\n    let bars = []; // instanceof Bar\n    this.bar_being_dragged = null;\n\n    function action_in_progress() {\n      return is_dragging || is_resizing_left || is_resizing_right;\n    }\n\n    $.on(this.$svg, \"mousedown\", \".bar-wrapper, .handle\", (e, element) => {\n      const bar_wrapper = $.closest(\".bar-wrapper\", element);\n      bars.forEach((bar) => bar.group.classList.remove(\"active\"));\n\n      if (element.classList.contains(\"left\")) {\n        is_resizing_left = true;\n      } else if (element.classList.contains(\"right\")) {\n        is_resizing_right = true;\n      } else if (element.classList.contains(\"bar-wrapper\")) {\n        is_dragging = true;\n      }\n\n      bar_wrapper.classList.add(\"active\");\n      if (this.popup) {\n        this.popup.parent.classList.add('hidden');\n      }\n\n      x_on_start = e.offsetX;\n      y_on_start = e.offsetY;\n\n      parent_bar_id = bar_wrapper.getAttribute(\"data-id\");\n      const ids = [\n        parent_bar_id\n      ];\n      // drag sync children\n      if (this.options.drag_sync_child) {\n        ids.push(...this.get_all_dependent_tasks(parent_bar_id));\n      }\n      bars = ids.map((id) => this.get_bar(id));\n\n      this.bar_being_dragged = parent_bar_id;\n\n      bars.forEach((bar) => {\n        if (bar.empty) return;\n        const $bar = bar.$bar;\n        $bar.ox = $bar.getX();\n        $bar.oy = $bar.getY();\n        $bar.owidth = $bar.getWidth();\n        $bar.finaldx = 0;\n      });\n    });\n\n    const handle_width = this.options.handle_width;\n    $.on(this.$svg, \"mousemove\", (e) => {\n      if (!action_in_progress()) return;\n      const dx = e.offsetX - x_on_start;\n      const dy = e.offsetY - y_on_start;\n\n      bars.forEach((bar) => {\n        if (bar.empty) return;\n        const $bar = bar.$bar;\n        // limit-block\n        // $bar.finaldx = this.get_snap_position(dx);\n        // free-distance\n        $bar.finaldx = dx;\n        this.hide_popup();\n        if (is_resizing_left) {\n          // 左不能大于右\n          if ($bar.finaldx - $bar.owidth + handle_width >= 0) return;\n          if (parent_bar_id === bar.task.id) {\n            bar.update_bar_position({\n              x: $bar.ox + $bar.finaldx,\n              width: $bar.owidth - $bar.finaldx,\n            });\n          } else {\n            bar.update_bar_position({\n              x: $bar.ox + $bar.finaldx,\n            });\n          }\n        } else if (is_resizing_right) {\n          // 右不能小于左\n          if ($bar.finaldx + $bar.owidth < handle_width) return;\n          if (parent_bar_id === bar.task.id) {\n            bar.update_bar_position({\n              width: $bar.owidth + $bar.finaldx,\n            });\n          }\n        } else if (is_dragging && !this.options.readonly) {\n          bar.update_bar_position({ x: $bar.ox + $bar.finaldx });\n        }\n      });\n    });\n\n    $.on(this.$svg, \"mouseup\", () => {\n      this.bar_being_dragged = null;\n      bars.forEach((bar) => {\n        if (bar.empty) return;\n        const $bar = bar.$bar;\n        if (!$bar.finaldx) return;\n        bar.date_changed();\n        bar.set_action_completed();\n      });\n    });\n\n    document.addEventListener(\"mouseup\", () => {\n      is_dragging = false;\n      is_resizing_left = false;\n      is_resizing_right = false;\n    });\n\n    $.on(this.$container_main, 'scroll', e => {\n      let elements = document.querySelectorAll('.bar-wrapper');\n      let localBars = [];\n      const ids = [];\n      let dx;\n      if (x_on_scroll_start) {\n        dx = e.currentTarget.scrollLeft - x_on_scroll_start;\n      }\n\n      const daysSinceStart = e.currentTarget.scrollLeft / this.options.column_width * this.options.step / 24;\n      let format_str = \"D MMM\"\n      if ([\"Year\", \"Month\"].includes(this.options.view_mode)) format_str = 'YYYY'\n      else if ([\"Day\", \"Week\"].includes(this.options.view_mode)) format_str = 'MMMM'\n      else if (this.view_is('Half Day')) format_str = 'D'\n      else if (this.view_is('Hour')) format_str = \"D MMMM\"\n\n\n      let currentUpper = date_utils.format(\n        date_utils.add(this.gantt_start, daysSinceStart, 'day'),\n        format_str\n      );\n      const upperTexts = Array.from(document.querySelectorAll('.upper-text'));\n      const $el = upperTexts.find(el => el.textContent === currentUpper)\n      if ($el && !$el.classList.contains('current-upper')) {\n        const $current = document.querySelector('.current-upper')\n        if ($current) {\n          $current.classList.remove('current-upper')\n          $current.style.left = this.upper_texts_x[$current.textContent] + 'px';\n          $current.style.top = this.options.header_height - 50 + 'px';\n        }\n\n        $el.classList.add('current-upper')\n        let dimensions = this.$svg.getBoundingClientRect()\n        // 19 first-point\n        $el.style.left = dimensions.x + this.$container_main.scrollLeft + 19 + 'px';\n        // 1 border-bottom\n        $el.style.top = dimensions.y + this.$container_main.scrollTop - 50 - 1 + 'px';\n      }\n\n      Array.prototype.forEach.call(elements, function (el, i) {\n        ids.push(el.getAttribute('data-id'));\n      });\n\n      if (dx) {\n        localBars = ids.map(id => this.get_bar(id));\n        if (this.options.auto_move_label) {\n          localBars.forEach(bar => {\n            bar.update_label_position_on_horizontal_scroll({ x: dx, sx: e.currentTarget.scrollLeft });\n          });\n        }\n      }\n\n      x_on_scroll_start = e.currentTarget.scrollLeft;\n\n      this.trigger_event('scroll', [e]);\n    });\n\n    this.bind_bar_progress();\n  }\n\n  bind_bar_progress() {\n    let x_on_start = 0;\n    let y_on_start = 0;\n    let is_resizing = null;\n    let bar = null;\n    let $bar_progress = null;\n    let $bar = null;\n\n    $.on(this.$svg, \"mousedown\", \".handle.progress\", (e, handle) => {\n      is_resizing = true;\n      x_on_start = e.offsetX;\n      y_on_start = e.offsetY;\n\n      const $bar_wrapper = $.closest(\".bar-wrapper\", handle);\n      const id = $bar_wrapper.getAttribute(\"data-id\");\n      bar = this.get_bar(id);\n\n      $bar_progress = bar.$bar_progress;\n      $bar = bar.$bar;\n\n      $bar_progress.finaldx = 0;\n      $bar_progress.owidth = $bar_progress.getWidth();\n      $bar_progress.min_dx = -$bar_progress.getWidth();\n      $bar_progress.max_dx = $bar.getWidth() - $bar_progress.getWidth();\n    });\n\n    $.on(this.$svg, \"mousemove\", (e) => {\n      if (!is_resizing) return;\n      let dx = e.offsetX - x_on_start;\n      let dy = e.offsetY - y_on_start;\n\n      if (dx > $bar_progress.max_dx) {\n        dx = $bar_progress.max_dx;\n      }\n      if (dx < $bar_progress.min_dx) {\n        dx = $bar_progress.min_dx;\n      }\n\n      const $handle = bar.$handle_progress;\n      $.attr($bar_progress, \"width\", $bar_progress.owidth + dx);\n      $.attr($handle, \"points\", bar.get_progress_polygon_points());\n      $bar_progress.finaldx = dx;\n    });\n\n    $.on(this.$svg, \"mouseup\", () => {\n      is_resizing = false;\n      if (!($bar_progress && $bar_progress.finaldx)) return;\n\n      $bar_progress.finaldx = 0;\n      bar.progress_changed();\n      bar.set_action_completed();\n      bar = null;\n      $bar_progress = null;\n      $bar = null;\n    });\n  }\n\n  get_all_dependent_tasks(task_id) {\n    let out = [];\n    let to_process = [task_id];\n    while (to_process.length) {\n      const deps = to_process.reduce((acc, curr) => {\n        acc = acc.concat(this.dependency_map[curr]);\n        return acc;\n      }, []);\n\n      out = out.concat(deps);\n      to_process = deps.filter((d) => !to_process.includes(d));\n    }\n\n    return out.filter(Boolean);\n  }\n\n  get_snap_position(dx) {\n    let odx = dx,\n      rem,\n      position;\n\n    if (this.view_is(VIEW_MODE.WEEK)) {\n      rem = dx % (this.options.column_width / 7);\n      position =\n        odx -\n        rem +\n        (rem < this.options.column_width / 14\n          ? 0\n          : this.options.column_width / 7);\n    } else if (this.view_is(VIEW_MODE.MONTH)) {\n      rem = dx % (this.options.column_width / 30);\n      position =\n        odx -\n        rem +\n        (rem < this.options.column_width / 60\n          ? 0\n          : this.options.column_width / 30);\n    } else if (this.view_is(VIEW_MODE.YEAR)) {\n      rem = dx % (this.options.column_width / 365);\n      position =\n        odx -\n        rem +\n        (rem < this.options.column_width / 120\n          ? 0\n          : this.options.column_width / 365);\n    } else {\n      rem = dx % this.options.column_width;\n      position =\n        odx -\n        rem +\n        (rem < this.options.column_width / 2 ? 0 : this.options.column_width);\n    }\n    return position;\n  }\n\n  get_snap_coord(ox, oy) {\n    let start_x = ox;\n    // 网格区\n    if (\n      this.view_is(VIEW_MODE.HOUR) ||\n      this.view_is(VIEW_MODE.HALF_DAY) ||\n      this.view_is(VIEW_MODE.QUARTER_DAY) ||\n      this.view_is(VIEW_MODE.DAY)\n    ) {\n      start_x = parseInt(ox / this.options.column_width) * this.options.column_width;\n    }\n\n    const padding = this.options.padding / 2;\n    const header_height = 0;\n    const row_height = this.options.bar_height + this.options.padding;\n\n    const mod = parseInt((oy - header_height) / row_height);\n    const start_y = header_height + mod * row_height + padding;\n\n    return [start_x, start_y];\n  }\n\n  get_snap_date(x) {\n    const x_in_units = x / this.options.column_width;\n    return date_utils.add(\n      this.gantt_start,\n      x_in_units * this.options.step,\n      \"hour\",\n    );\n  }\n\n  unselect_all() {\n    [...this.$svg.querySelectorAll(\".bar-wrapper\")].forEach((el) => {\n      el.classList.remove(\"active\");\n    });\n    if (this.popup) {\n      this.popup.parent.classList.remove('hidden');\n    }\n  }\n\n  view_is(modes) {\n    if (typeof modes === \"string\") {\n      return this.options.view_mode === modes;\n    }\n\n    if (Array.isArray(modes)) {\n      return modes.some((mode) => this.options.view_mode === mode);\n    }\n\n    return false;\n  }\n\n  get_task(id) {\n    return this.tasks.find((task) => {\n      return task.id === id;\n    });\n  }\n\n  get_bar(id) {\n    return this.bars.find((bar) => {\n      return bar.task.id === id;\n    });\n  }\n\n  show_popup(options) {\n    if (this.options.popup === false) return\n    if (!this.popup) {\n      this.popup = new Popup(\n        this.$popup_wrapper,\n        this.options.popup,\n      );\n    }\n    this.popup.show(options);\n  }\n\n  hide_popup() {\n    this.popup && this.popup.hide();\n  }\n\n  trigger_event(event, args) {\n    if (this.options[\"on_\" + event]) {\n      this.options[\"on_\" + event].apply(null, args);\n    }\n  }\n\n  /**\n   * Gets the oldest starting date from the list of tasks\n   *\n   * @returns Date\n   * @memberof Gantt\n   */\n  get_oldest_starting_date() {\n    if (!this.tasks.length) return new Date()\n    return this.tasks\n      .map((task) => task._start)\n      .reduce((prev_date, cur_date) =>\n        (cur_date && cur_date <= prev_date) ? cur_date : prev_date,\n      );\n  }\n\n  /**\n   * Clear all elements from the parent svg element\n   *\n   * @memberof Gantt\n   */\n  clear() {\n    this.$svg.innerHTML = \"\";\n    this.$container_toolbar.innerHTML = \"\";\n    this.$header?.remove?.()\n    this.$today_overlay?.remove?.();\n    this.popup?.hide?.()\n  }\n}\n\nGantt.VIEW_MODE = VIEW_MODE;\n\nfunction generate_id(task) {\n  return task.name + \"_\" + Math.random().toString(36).slice(2, 12);\n}\n"],"names":["YEAR","MONTH","DAY","HOUR","MINUTE","SECOND","MILLISECOND","SHORTENED","January","February","March","April","May","June","July","August","September","October","November","December","date_utils","parse_duration","duration","matches","exec","parseInt","scale","parse","date","date_separator","time_separator","Date","date_parts","time_parts","parts","split","map","val","vals","length","parseFloat","concat","to_string","with_time","TypeError","this","get_date_values","i","padStart","date_string","time_string","format","format_string","lang","month_name","Intl","DateTimeFormat","month","month_name_capitalized","charAt","toUpperCase","slice","values","d","format_map","YYYY","MM","DD","HH","mm","ss","SSS","D","MMMM","MMM","str","formatted_values","Object","keys","sort","a","b","forEach","key","includes","replaceAll","push","value","diff","date_a","date_b","milliseconds","seconds","hours","minutes","days","months","years","endsWith","Math","floor","today","now","add","qty","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","getMilliseconds","start_of","scores","should_reset","_scale","clone","get_days_in_month","no_of_days","year","targetLength","padString","String","repeat","$","expr","con","document","querySelector","createSVG","tag","attrs","elem","createElementNS","attr","append_to","appendChild","innerHTML","setAttribute","animateSVG","svgElement","from","to","animatedSvgElement","dur","begin","animEl","attributeName","animateElement","calcMode","keyTimes","keySplines","cubic_bezier","getAnimationElement","event","createEvent","initEvent","eventName","dispatchEvent","name","ease","linear","on","element","selector","callback","delegate","bind","off","handler","removeEventListener","addEventListener","e","delegatedTarget","target","closest","call","parentNode","getAttribute","throttle","delay","noTrailing","debounceMode","timeoutID","lastExec","undefined","self","elapsed","Number","args","arguments","apply","clear","clearTimeout","setTimeout","Bar","constructor","gantt","task","set_defaults","prepare","draw","action_completed","prepare_values","prepare_helpers","empty","invalid","height","options","bar_height","image_size","compute_x","compute_y","compute_duration","corner_radius","bar_corner_radius","width","column_width","progress_width","progress","group","class","custom_class","important","id","bar_group","handle_group","SVGElement","prototype","getX","getY","getWidth","getHeight","getEndX","prepare_expected_progress_values","compute_expected_progress","expected_progress_width","expected_progress","draw_bar","draw_progress_bar","show_expected_progress","draw_expected_progress_bar","draw_label","draw_resize_handles","thumbnail","draw_thumbnail","$bar","x","y","rx","ry","classList","$expected_bar_progress","$bar_progress","_start","gantt_start","step","$date_highlight","createElement","style","top","header_height","left","$lower_header","prepend","x_coord","requestAnimationFrame","update_label_position","defs","clipPath","href","readonly","bar","handle_width","gw","$handle_progress","points","get_progress_polygon_points","join","bar_progress","icon_width","icon_height","setup_click_event","timeout","task_id","trigger_event","screenX","screenY","show_popup","offsetX","display","popup","hide","popup_trigger","bar_being_dragged","subtitle","language","_end","target_element","title","update_bar_position","drag_limit_child","dependencies","dep","get_bar","reduce","_","curr","update_attr","update_handle_position","date_changed","update_expected_progressbar_position","update_progressbar_position","update_arrow_position","update_label_position_on_horizontal_scroll","sx","container","label","img","img_mask","barWidthLimit","newLabelX","newImgX","imgWidth","getBBox","labelEndX","viewportCentral","clientWidth","contains","changed","new_start_date","new_end_date","compute_start_end_date","progress_changed","new_progress","compute_progress","set_action_completed","x_in_units","width_in_units","task_start","view_is","padding","_index","get_snap_position","dx","rem","position","odx","isNaN","x_offset_label_img","labelWidth","barWidth","remove","handle","arrows","arrow","update","Arrow","from_task","to_task","calculate_path","drawInner","rowHeight","taskHeight","arrowCurve","arrow_curve","arrowIndent","taskFrom","taskTo","taskFromX2","taskFromY1","taskToX1","taskToEndPosition","taskFromEndPosition","path","trianglePoints","svgPath","fill","svgPolygon","Popup","parent","custom_html","make","pointer","show","Error","html","position_meta","HTMLElement","getBoundingClientRect","opacity","VIEW_MODE","QUARTER_DAY","HALF_DAY","WEEK","VIEW_MODE_PADDING","DEFAULT_OPTIONS","view_modes","view_mode","date_format","drag_sync_child","highlight_weekend","scroll_to","lines","auto_move_label","today_button","view_mode_select","count","Gantt","wrapper","tasks","setup_wrapper","setup_options","setup_tasks","change_view_mode","bind_events","svg_element","wrapper_element","init","$svg","$container","$container_header","$container_main","parentElement","$container_toolbar","$popup_wrapper","view_mode_padding","entries","start","end","tmpDuration","every","deps","trim","filter","random","toString","generate_id","setup_dependencies","dependency_map","t","refresh","mode","update_view_scale","setup_dates","render","setup_gantt_dates","setup_date_values","gantt_end","viewKey","padding_start","padding_end","setHours","console","log","dates","cur_date","bind_grid_scroll","bind_grid_click","bind_bar_create","bind_bar_events","setup_layers","make_grid","make_dates","make_bars","make_grid_extras","make_arrows","map_arrows_on_bars","set_width","set_scroll_position","layers","layer","make_grid_background","make_grid_rows","make_grid_header","make_grid_toolbar","make_grid_highlights","make_grid_ticks","grid_width","grid_height","scroll_height","overflow","rows_layer","grid","row_width","row_height","row_y","$header","$upper_header","$side_header","$select","$el","selected","disabled","textContent","modes","$option","$today_button","onclick","scroll_today","max","tick_x","tick_height","$lines_layer","x1","y1","x2","y2","tick_class","highlightWeekends","setDate","getDay","computeGridHighlightDimensions","todayDate","startDate","endDate","setMonth","setFullYear","$today_overlay","create_el","classes","$today","getElementById","upper_texts_x","get_dates_to_draw","$lower_text","lower_x","lower_y","formatted_date","innerText","lower_text","upper_text","upper_x","$upper_text","upper_y","last_date","get_date_info","last_date_info","date_text","Hour_lower","Day_lower","Week_lower","Month_lower","Year_lower","Hour_upper","Day_upper","Week_upper","Month_upper","Year_upper","base_pos","base_pos_x","x_pos","bars","dependency","get_task","Boolean","cur_width","actual_width","parent_element","scroll_pos","scrollTo","behavior","shiftKey","deltaX","scrollMove","deltaY","newScrollX","scrollLeft","preventDefault","unselect_all","hide_popup","x_on_start","y_on_start","matched_task","is_creating","holder","radius","index","offsetY","get_snap_coord","abs","start_x","end_x","date_start","get_snap_date","date_end","update_task","assign","update_bar","old_bar","removeChild","splice","target_postion","insertBefore","is_dragging","x_on_scroll_start","is_resizing_left","is_resizing_right","parent_bar_id","bar_wrapper","ids","get_all_dependent_tasks","ox","oy","owidth","finaldx","elements","querySelectorAll","localBars","currentTarget","daysSinceStart","format_str","currentUpper","Array","find","el","$current","dimensions","scrollTop","bind_bar_progress","is_resizing","min_dx","max_dx","$handle","out","to_process","acc","isArray","some","get_oldest_starting_date","prev_date"],"mappings":"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"}