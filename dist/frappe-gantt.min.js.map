{"version":3,"file":"frappe-gantt.min.js","sources":["../src/date_utils.js","../src/svg_utils.js","../src/lang_utils.js","../src/bar.js","../src/arrow.js","../src/popup.js","../src/backdrop.js","../src/index.js"],"sourcesContent":["const YEAR = \"year\";\nconst MONTH = \"month\";\nconst DAY = \"day\";\nconst HOUR = \"hour\";\nconst MINUTE = \"minute\";\nconst SECOND = \"second\";\nconst MILLISECOND = \"millisecond\";\n\nconst SHORTENED = {\n  January: \"Jan\",\n  February: \"Feb\",\n  March: \"Mar\",\n  April: \"Apr\",\n  May: \"May\",\n  June: \"Jun\",\n  July: \"Jul\",\n  August: \"Aug\",\n  September: \"Sep\",\n  October: \"Oct\",\n  November: \"Nov\",\n  December: \"Dec\"\n};\n\nexport default {\n  parse_duration(duration) {\n    const regex = /([0-9]{1,})+(y|m|d|h|min|s|ms)/gm;\n    const matches = regex.exec(duration);\n\n    if (matches !== null) {\n      if (matches[2] === \"y\") {\n        return { duration: parseInt(matches[1]), scale: `year` };\n      } else if (matches[2] === \"m\") {\n        return { duration: parseInt(matches[1]), scale: `month` };\n      } else if (matches[2] === \"d\") {\n        return { duration: parseInt(matches[1]), scale: `day` };\n      } else if (matches[2] === \"h\") {\n        return { duration: parseInt(matches[1]), scale: `hour` };\n      } else if (matches[2] === \"min\") {\n        return { duration: parseInt(matches[1]), scale: `minute` };\n      } else if (matches[2] === \"s\") {\n        return { duration: parseInt(matches[1]), scale: `second` };\n      } else if (matches[2] === \"ms\") {\n        return { duration: parseInt(matches[1]), scale: `millisecond` };\n      }\n    }\n  },\n  parse(date, date_separator = \"-\", time_separator = /[.:]/) {\n    if (date instanceof Date) {\n      return date;\n    }\n    if (typeof date === \"string\") {\n      let date_parts, time_parts;\n      const parts = date.split(\" \");\n      date_parts = parts[0]\n        .split(date_separator)\n        .map((val) => parseInt(val, 10));\n      time_parts = parts[1] && parts[1].split(time_separator);\n\n      // month is 0 indexed\n      date_parts[1] = date_parts[1] ? date_parts[1] - 1 : 0;\n\n      let vals = date_parts;\n\n      if (time_parts && time_parts.length) {\n        if (time_parts.length === 4) {\n          time_parts[3] = \"0.\" + time_parts[3];\n          time_parts[3] = parseFloat(time_parts[3]) * 1000;\n        }\n        vals = vals.concat(time_parts);\n      }\n      return new Date(...vals);\n    }\n  },\n\n  to_string(date, with_time = false) {\n    if (!(date instanceof Date)) {\n      throw new TypeError(\"Invalid argument type\");\n    }\n    const vals = this.get_date_values(date).map((val, i) => {\n      if (i === 1) {\n        // add 1 for month\n        val = val + 1;\n      }\n\n      if (i === 6) {\n        return padStart(val + \"\", 3, \"0\");\n      }\n\n      return padStart(val + \"\", 2, \"0\");\n    });\n    const date_string = `${vals[0]}-${vals[1]}-${vals[2]}`;\n    const time_string = `${vals[3]}:${vals[4]}:${vals[5]}.${vals[6]}`;\n\n    return date_string + (with_time ? \" \" + time_string : \"\");\n  },\n\n  format(date, format_string = \"YYYY-MM-DD HH:mm:ss.SSS\", lang = \"en\") {\n    const dateTimeFormat = new Intl.DateTimeFormat(lang, {\n      month: \"long\",\n    });\n    const month_name = dateTimeFormat.format(date);\n    const month_name_capitalized =\n      month_name.charAt(0).toUpperCase() + month_name.slice(1);\n\n    const values = this.get_date_values(date);\n    const format_map = {\n      YYYY: values[0],\n      MM: padStart(values[1] + 1, 2, 0),\n      DD: padStart(values[2], 2, 0),\n      HH: padStart(values[3], 2, 0),\n      mm: padStart(values[4], 2, 0),\n      ss: padStart(values[5], 2, 0),\n      M: values[1] + 1,\n      D: values[2],\n      h: values[3],\n      m: values[4],\n      s: values[5],\n      SSS: values[6],\n      Q: parseInt((values[1] + 1) / 3) + 1,\n      MMMM: month_name_capitalized,\n      MMM: SHORTENED[month_name_capitalized] || month_name_capitalized,\n    };\n\n    let str = format_string;\n    const formatted_values = [];\n\n    Object.keys(format_map)\n      .sort((a, b) => b.length - a.length) // big string first\n      .forEach((key) => {\n        if (str.includes(key)) {\n          str = str.replaceAll(key, `$${formatted_values.length}`);\n          formatted_values.push(format_map[key]);\n        }\n      });\n\n    formatted_values.forEach((value, i) => {\n      str = str.replaceAll(`$${i}`, value);\n    });\n\n    return str;\n  },\n\n  diff(date_a, date_b, scale = DAY) {\n    let milliseconds, seconds, hours, minutes, days, months, years;\n\n    milliseconds = date_a - date_b;\n    seconds = milliseconds / 1000;\n    minutes = seconds / 60;\n    hours = minutes / 60;\n    days = hours / 24;\n    months = days / 30;\n    years = months / 12;\n\n    if (!scale.endsWith(\"s\")) {\n      scale += \"s\";\n    }\n\n    return Math.floor(\n      {\n        milliseconds,\n        seconds,\n        minutes,\n        hours,\n        days,\n        months,\n        years,\n      }[scale],\n    );\n  },\n\n  today() {\n    const vals = this.get_date_values(new Date()).slice(0, 3);\n    return new Date(...vals);\n  },\n\n  now() {\n    return new Date();\n  },\n\n  add(date, qty, scale) {\n    qty = parseInt(qty, 10);\n    const vals = [\n      date.getFullYear() + (scale === YEAR ? qty : 0),\n      date.getMonth() + (scale === MONTH ? qty : 0),\n      date.getDate() + (scale === DAY ? qty : 0),\n      date.getHours() + (scale === HOUR ? qty : 0),\n      date.getMinutes() + (scale === MINUTE ? qty : 0),\n      date.getSeconds() + (scale === SECOND ? qty : 0),\n      date.getMilliseconds() + (scale === MILLISECOND ? qty : 0),\n    ];\n    return new Date(...vals);\n  },\n\n  start_of(date, scale) {\n    const scores = {\n      [YEAR]: 6,\n      [MONTH]: 5,\n      [DAY]: 4,\n      [HOUR]: 3,\n      [MINUTE]: 2,\n      [SECOND]: 1,\n      [MILLISECOND]: 0,\n    };\n\n    function should_reset(_scale) {\n      const max_score = scores[scale];\n      return scores[_scale] <= max_score;\n    }\n\n    const vals = [\n      date.getFullYear(),\n      should_reset(YEAR) ? 0 : date.getMonth(),\n      should_reset(MONTH) ? 1 : date.getDate(),\n      should_reset(DAY) ? 0 : date.getHours(),\n      should_reset(HOUR) ? 0 : date.getMinutes(),\n      should_reset(MINUTE) ? 0 : date.getSeconds(),\n      should_reset(SECOND) ? 0 : date.getMilliseconds(),\n    ];\n\n    return new Date(...vals);\n  },\n\n  clone(date) {\n    return new Date(...this.get_date_values(date));\n  },\n\n  get_date_values(date) {\n    return [\n      date.getFullYear(),\n      date.getMonth(),\n      date.getDate(),\n      date.getHours(),\n      date.getMinutes(),\n      date.getSeconds(),\n      date.getMilliseconds(),\n    ];\n  },\n\n  get_days_in_month(date) {\n    const no_of_days = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n\n    const month = date.getMonth();\n\n    if (month !== 1) {\n      return no_of_days[month];\n    }\n\n    // Feb\n    const year = date.getFullYear();\n    if ((year % 4 === 0 && year % 100 != 0) || year % 400 === 0) {\n      return 29;\n    }\n    return 28;\n  },\n};\n\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/padStart\nfunction padStart(str, targetLength, padString) {\n  str = str + \"\";\n  targetLength = targetLength >> 0;\n  padString = String(typeof padString !== \"undefined\" ? padString : \" \");\n  if (str.length > targetLength) {\n    return String(str);\n  } else {\n    targetLength = targetLength - str.length;\n    if (targetLength > padString.length) {\n      padString += padString.repeat(targetLength / padString.length);\n    }\n    return padString.slice(0, targetLength) + String(str);\n  }\n}\n","export function $(expr, con) {\n  return typeof expr === \"string\"\n    ? (con || document).querySelector(expr)\n    : expr || null;\n}\n\nexport function createSVG(tag, attrs) {\n  const elem = document.createElementNS(\"http://www.w3.org/2000/svg\", tag);\n  for (let attr in attrs) {\n    if (attr === \"append_to\") {\n      const parent = attrs.append_to;\n      parent.appendChild(elem);\n    } else if (attr === \"innerHTML\") {\n      elem.innerHTML = attrs.innerHTML;\n    } else if (attr === 'clipPath') {\n      elem.setAttribute('clip-path', 'url(#' + attrs[attr] + ')');\n    } else {\n      elem.setAttribute(attr, attrs[attr]);\n    }\n  }\n  return elem;\n}\n\nexport function animateSVG(svgElement, attr, from, to) {\n  const animatedSvgElement = getAnimationElement(svgElement, attr, from, to);\n\n  if (animatedSvgElement === svgElement) {\n    // triggered 2nd time programmatically\n    // trigger artificial click event\n    const event = document.createEvent(\"HTMLEvents\");\n    event.initEvent(\"click\", true, true);\n    event.eventName = \"click\";\n    animatedSvgElement.dispatchEvent(event);\n  }\n}\n\nfunction getAnimationElement(\n  svgElement,\n  attr,\n  from,\n  to,\n  dur = \"0.4s\",\n  begin = \"0.1s\",\n) {\n  const animEl = svgElement.querySelector(\"animate\");\n  if (animEl) {\n    $.attr(animEl, {\n      attributeName: attr,\n      from,\n      to,\n      dur,\n      begin: \"click + \" + begin, // artificial click\n    });\n    return svgElement;\n  }\n\n  const animateElement = createSVG(\"animate\", {\n    attributeName: attr,\n    from,\n    to,\n    dur,\n    begin,\n    calcMode: \"spline\",\n    values: from + \";\" + to,\n    keyTimes: \"0; 1\",\n    keySplines: cubic_bezier(\"ease-out\"),\n  });\n  svgElement.appendChild(animateElement);\n\n  return svgElement;\n}\n\nfunction cubic_bezier(name) {\n  return {\n    ease: \".25 .1 .25 1\",\n    linear: \"0 0 1 1\",\n    \"ease-in\": \".42 0 1 1\",\n    \"ease-out\": \"0 0 .58 1\",\n    \"ease-in-out\": \".42 0 .58 1\",\n  }[name];\n}\n\n$.on = (element, event, selector, callback) => {\n  if (!callback) {\n    callback = selector;\n    $.bind(element, event, callback);\n  } else {\n    $.delegate(element, event, selector, callback);\n  }\n};\n\n$.off = (element, event, handler) => {\n  element.removeEventListener(event, handler);\n};\n\n$.bind = (element, event, callback) => {\n  event.split(/\\s+/).forEach(function (event) {\n    element.addEventListener(event, callback);\n  });\n};\n\n$.delegate = (element, event, selector, callback) => {\n  element.addEventListener(event, function (e) {\n    const delegatedTarget = e.target.closest(selector);\n    if (delegatedTarget) {\n      e.delegatedTarget = delegatedTarget;\n      callback.call(this, e, delegatedTarget);\n    }\n  });\n};\n\n$.closest = (selector, element) => {\n  if (!element) return null;\n\n  if (element.matches(selector)) {\n    return element;\n  }\n\n  return $.closest(selector, element.parentNode);\n};\n\n$.attr = (element, attr, value) => {\n  if (!value && typeof attr === \"string\") {\n    return element.getAttribute(attr);\n  }\n\n  if (typeof attr === \"object\") {\n    for (let key in attr) {\n      $.attr(element, key, attr[key]);\n    }\n    return;\n  }\n\n  element.setAttribute(attr, value);\n};\n\n$.throttle = function (delay, noTrailing, callback, debounceMode) {\n    // After wrapper has stopped being called, this timeout ensures that\n    // `callback` is executed at the proper times in `throttle` and `end`\n    // debounce modes.\n    var timeoutID;\n\n    // Keep track of the last time `callback` was executed.\n    var lastExec = 0;\n\n    // `noTrailing` defaults to falsy.\n    if (typeof noTrailing !== 'boolean') {\n        debounceMode = callback;\n        callback = noTrailing;\n        noTrailing = undefined;\n    }\n\n    // The `wrapper` function encapsulates all of the throttling / debouncing\n    // functionality and when executed will limit the rate at which `callback`\n    // is executed.\n    function wrapper() {\n        var self = this;\n        var elapsed = Number(new Date()) - lastExec;\n        var args = arguments;\n\n        // Execute `callback` and update the `lastExec` timestamp.\n        function exec() {\n            lastExec = Number(new Date());\n            callback.apply(self, args);\n        }\n\n        // If `debounceMode` is true (at begin) this is used to clear the flag\n        // to allow future `callback` executions.\n        function clear() {\n            timeoutID = undefined;\n        }\n\n        if (debounceMode && !timeoutID) {\n            // Since `wrapper` is being called for the first time and\n            // `debounceMode` is true (at begin), execute `callback`.\n            exec();\n        }\n\n        // Clear any existing timeout.\n        if (timeoutID) {\n            clearTimeout(timeoutID);\n        }\n\n        if (debounceMode === undefined && elapsed > delay) {\n            // In throttle mode, if `delay` time has been exceeded, execute\n            // `callback`.\n            exec();\n        } else if (noTrailing !== true) {\n            // In trailing throttle mode, since `delay` time has not been\n            // exceeded, schedule `callback` to execute `delay` ms after most\n            // recent execution.\n            //\n            // If `debounceMode` is true (at begin), schedule `clear` to execute\n            // after `delay` ms.\n            //\n            // If `debounceMode` is false (at end), schedule `callback` to\n            // execute after `delay` ms.\n            timeoutID = setTimeout(\n                debounceMode ? clear : exec,\n                debounceMode === undefined ? delay - elapsed : delay,\n            );\n        }\n    }\n\n    // Return the wrapper function.\n    return wrapper;\n};\n","export const getLang = function(lan) {\n  if (lan === 'zh') {\n    return LAN_ZH;\n  } else {\n    return LAN_EN;\n  }\n}\n\nexport const LAN_ZH = {\n  HOUR: \"时\",\n  QUARTER_DAY: \"季时\",\n  HALF_DAY: \"半天\",\n  DAY: \"日\",\n  WEEK: \"周\",\n  MONTH: \"月\",\n  QUARTER_YEAR: \"季\",\n  YEAR: \"年\",\n  TODAY: \"今天\"\n};\n\nexport const LAN_EN = {\n  HOUR: 'Hour',\n  QUARTER_DAY: 'Quarter Day',\n  HALF_DAY: 'Half Day',\n  DAY: 'Day',\n  WEEK: 'Week',\n  MONTH: 'Month',\n  QUARTER_YEAR: 'Quarter Year',\n  YEAR: 'Year',\n  TODAY: \"Today\"\n};","import date_utils from \"./date_utils\";\nimport { $, createSVG, animateSVG } from \"./svg_utils\";\n\nexport default class Bar {\n  constructor(gantt, task) {\n    this.set_defaults(gantt, task);\n    this.prepare();\n    this.draw();\n    this.bind();\n  }\n\n  set_defaults(gantt, task) {\n    this.action_completed = false;\n    this.gantt = gantt;\n    this.task = task;\n  }\n\n  prepare() {\n    this.prepare_doms();\n    this.prepare_values();\n    this.prepare_helpers();\n  }\n\n  prepare_doms() {\n    this.group = createSVG(\"g\", {\n      class: \"bar-wrapper\" + (this.task.custom_class ? \" \" + this.task.custom_class : \"\") + (this.task.important ? ' important' : ''),\n      \"data-id\": this.task.id,\n    });\n    this.bar_group = createSVG(\"g\", {\n      class: \"bar-group\",\n      append_to: this.group,\n    });\n    this.handle_group = createSVG(\"g\", {\n      class: \"handle-group\",\n      append_to: this.group,\n    });\n  }\n\n  prepare_values() {\n    this.empty = this.task.empty;\n    this.invalid = this.task.invalid;\n    this.height = this.gantt.options.bar_height;\n    this.image_size = this.height - 5;\n    this.compute_x();\n    this.compute_y();\n    this.compute_duration();\n    this.corner_radius = this.gantt.options.bar_corner_radius;\n    this.width = this.gantt.options.column_width * this.duration;\n    this.progress_width =\n      this.gantt.options.column_width *\n      this.duration *\n      (this.task.progress / 100) || 0;\n  }\n\n  prepare_helpers() {\n    SVGElement.prototype.getX = function () {\n      return +this.getAttribute(\"x\");\n    };\n    SVGElement.prototype.getY = function () {\n      return +this.getAttribute(\"y\");\n    };\n    SVGElement.prototype.getWidth = function () {\n      return +this.getAttribute(\"width\");\n    };\n    SVGElement.prototype.getHeight = function () {\n      return +this.getAttribute(\"height\");\n    };\n    SVGElement.prototype.getEndX = function () {\n      return this.getX() + this.getWidth();\n    };\n  }\n\n  prepare_expected_progress_values() {\n    this.compute_expected_progress();\n    this.expected_progress_width =\n      this.gantt.options.column_width *\n      this.duration *\n      (this.expected_progress / 100) || 0;\n  }\n\n  update_bar_vertical({ offset }) {\n    // recalculate\n    this.compute_y();\n\n    if (this.empty) return;\n    // update-bar_group\n    Array.prototype.forEach.call(this.bar_group.children, function (el, i) {\n      const y = $.attr(el, 'y') * 1;\n      el.setAttribute('y', y + offset);\n    });\n    // update-thumbnail\n    if (this.task.thumbnail) {\n      const $thumbnail = this.bar_group.querySelector('#rect_' + this.task.id);\n      const y = $.attr($thumbnail, 'y') * 1;\n      $thumbnail.setAttribute('y', y + offset);\n    }\n    // update-handle_group\n    Array.prototype.forEach.call(this.handle_group.children, function (el, i, arr) {\n      // if (i === arr.length-1) return;\n      const y = $.attr(el, 'y') * 1;\n      el.setAttribute('y', y + offset);\n    });\n    // update-polygon\n    const $handle = this.$handle_progress;\n    if ($handle) {\n      $handle.setAttribute('points', this.get_progress_polygon_points());\n    }\n  }\n\n  draw() {\n    if (this.empty) return;\n    this.draw_bar();\n    this.draw_progress_bar();\n    if (this.gantt.options.show_expected_progress) {\n      this.prepare_expected_progress_values();\n      this.draw_expected_progress_bar();\n    }\n    this.draw_label();\n    this.draw_resize_handles();\n\n    if (this.task.thumbnail) {\n      this.draw_thumbnail();\n    }\n  }\n\n  draw_bar() {\n    this.$bar = createSVG(\"rect\", {\n      x: this.x,\n      y: this.y,\n      width: this.width,\n      height: this.height,\n      rx: this.corner_radius,\n      ry: this.corner_radius,\n      class: \"bar-inner\",\n      append_to: this.bar_group,\n    });\n\n    animateSVG(this.$bar, \"width\", 0, this.width);\n\n    if (this.invalid) {\n      this.$bar.classList.add(\"bar-invalid\");\n    }\n  }\n\n  draw_expected_progress_bar() {\n    if (this.invalid) return;\n    this.$expected_bar_progress = createSVG(\"rect\", {\n      x: this.x,\n      y: this.y,\n      width: this.expected_progress_width,\n      height: this.height,\n      rx: this.corner_radius,\n      ry: this.corner_radius,\n      class: \"bar-expected-progress\",\n      append_to: this.bar_group,\n    });\n\n    animateSVG(\n      this.$expected_bar_progress,\n      \"width\",\n      0,\n      this.expected_progress_width,\n    );\n  }\n\n  draw_progress_bar() {\n    if (this.invalid) return;\n    this.$bar_progress = createSVG(\"rect\", {\n      x: this.x,\n      y: this.y,\n      width: this.progress_width,\n      height: this.height,\n      rx: this.corner_radius,\n      ry: this.corner_radius,\n      class: \"bar-progress\",\n      append_to: this.bar_group,\n    });\n    animateSVG(this.$bar_progress, \"width\", 0, this.progress_width);\n  }\n\n  draw_label() {\n    let x_coord = this.x + this.$bar.getWidth() / 2;\n\n    if (this.task.thumbnail) {\n      x_coord = this.x + 10 + this.image_size + 5;\n    }\n\n    createSVG(\"text\", {\n      x: x_coord,\n      y: this.y + this.height / 2,\n      innerHTML: this.task.name,\n      class: \"bar-label\",\n      append_to: this.bar_group,\n    });\n    // labels get BBox in the next tick\n    requestAnimationFrame(() => this.update_label_position());\n  }\n\n  draw_thumbnail() {\n    let x_offset = 10, y_offset = 2;\n    let defs, clipPath;\n\n    defs = createSVG('defs', {\n      append_to: this.bar_group\n    });\n\n    createSVG('rect', {\n      id: 'rect_' + this.task.id,\n      x: this.x + x_offset,\n      y: this.y + y_offset,\n      width: this.image_size,\n      height: this.image_size,\n      rx: '15',\n      class: 'img_mask',\n      append_to: defs\n    });\n\n    clipPath = createSVG('clipPath', {\n      id: 'clip_' + this.task.id,\n      append_to: defs\n    });\n\n    createSVG('use', {\n      href: '#rect_' + this.task.id,\n      append_to: clipPath\n    });\n\n    createSVG('image', {\n      x: this.x + x_offset,\n      y: this.y + y_offset,\n      width: this.image_size,\n      height: this.image_size,\n      class: 'bar-img',\n      href: this.task.thumbnail,\n      clipPath: 'clip_' + this.task.id,\n      append_to: this.bar_group\n    });\n  }\n\n  draw_resize_handles() {\n    if (this.gantt.options.readonly) return;\n\n    const bar = this.$bar;\n    const handle_width = this.gantt.options.handle_width;\n\n    const gw = bar.getWidth();\n\n    createSVG(\"rect\", {\n      x: bar.getX() + (gw > handle_width ? (gw - handle_width - 1) : (gw + handle_width)),\n      y: bar.getY() + 1,\n      width: handle_width,\n      height: this.height - 2,\n      rx: this.corner_radius,\n      ry: this.corner_radius,\n      class: \"handle right\",\n      append_to: this.handle_group,\n    });\n\n    createSVG(\"rect\", {\n      x: bar.getX() + 1,\n      y: bar.getY() + 1,\n      width: handle_width,\n      height: this.height - 2,\n      rx: this.corner_radius,\n      ry: this.corner_radius,\n      class: \"handle left\",\n      append_to: this.handle_group,\n    });\n\n    if (this.gantt.options.drag_bar_progress) {\n      this.$handle_progress = createSVG('polygon', {\n        points: this.get_progress_polygon_points().join(','),\n        class: 'handle progress',\n        append_to: this.handle_group,\n      });\n    }\n  }\n\n  get_progress_polygon_points() {\n    const bar_progress = this.$bar_progress;\n    if (!bar_progress) return [];\n    let icon_width = 10;\n    let icon_height = 15;\n\n    return [\n      bar_progress.getEndX() - icon_width / 2,\n      bar_progress.getY() + bar_progress.getHeight() / 2,\n\n      bar_progress.getEndX(),\n      bar_progress.getY() + bar_progress.getHeight() / 2 - icon_height / 2,\n\n      bar_progress.getEndX() + icon_width / 2,\n      bar_progress.getY() + bar_progress.getHeight() / 2,\n\n      bar_progress.getEndX(),\n      bar_progress.getY() + bar_progress.getHeight() / 2 + icon_height / 2,\n\n      bar_progress.getEndX() - icon_width / 2,\n      bar_progress.getY() + bar_progress.getHeight() / 2,\n    ];\n  }\n\n  bind() {\n    this.setup_click_event();\n  }\n\n  setup_click_event() {\n    $.on(this.group, \"mouseover\", (e) => {\n      this.gantt.trigger_event(\"hover\", [this.task, e.screenX, e.screenY, e])\n    })\n\n    let timeout;\n    $.on(this.group, \"mouseenter\", (e) => timeout = setTimeout(() => {\n      const scrollLeft = this.gantt.$container_main.scrollLeft;\n      this.show_popup(e.offsetX - scrollLeft);\n    }, 600))\n\n    $.on(this.group, \"mouseleave\", () => {\n      clearTimeout(timeout)\n      this.gantt.hide_popup();\n    })\n\n    let clickTimeout;\n    let clickCount = 0;\n    $.on(this.group, 'click', () => {\n      if (this.action_completed) {\n        // just finished a move action, wait for a few seconds\n        return;\n      }\n\n      clickCount += 1;\n      if (clickCount === 1) {\n        clickTimeout = setTimeout(() => {\n            this.gantt.trigger_event('click', [this.task]);\n            clickCount = 0;\n        }, 250);\n      } else {\n        clearTimeout(clickTimeout);\n        clickCount = 0;\n      }\n    });\n\n    $.on(this.group, \"dblclick\", () => {\n      clearTimeout(clickTimeout);\n      clickCount = 0;\n      this.gantt.trigger_event(\"double_click\", [this.task]);\n    });\n  }\n\n  show_popup(x) {\n    if (this.gantt.bar_being_dragged) return;\n\n    const start_date = date_utils.format(\n      this.task._start,\n      \"MM月DD日\",\n      this.gantt.options.language,\n    );\n    const end_date = date_utils.format(\n      date_utils.add(this.task._end, -1, \"second\"),\n      \"MM月DD日\",\n      this.gantt.options.language,\n    );\n    const subtitle = `${start_date} -  ${end_date}<br/>Progress: ${this.task.progress}`;\n\n    this.gantt.show_popup({\n      x,\n      target_element: this.$bar,\n      title: this.task.name,\n      subtitle: subtitle,\n      task: this.task,\n    });\n  }\n\n  update_bar_task(task) {\n    this.action_completed = false;\n    this.task = task;\n    this.prepare_values();\n\n    const label = this.bar_group.querySelector('.bar-label')\n    if(label) label.innerHTML = task.name;\n  }\n\n  update_bar_position({ x = null, width = null }) {\n    const bar = this.$bar;\n    if (x) {\n      if (this.gantt.options.drag_limit_child) {\n        // get all x values of parent task\n        const xs = this.task.dependencies.map((dep) => {\n          return this.gantt.get_bar(dep).$bar.getX();\n        });\n        // child task must not go before parent\n        const valid_x = xs.reduce((_, curr) => {\n          return x >= curr;\n        }, x);\n\n        if (!valid_x) {\n          width = null;\n          return;\n        }\n      }\n\n      console.log('ddd ==> x', this);\n      this.update_attr(bar, \"x\", x);\n      if (this.$date_highlight) this.$date_highlight.style.left = x + 'px';\n    }\n    if (width) {\n      this.update_attr(bar, \"width\", width);\n      if (this.$date_highlight) this.$date_highlight.style.width = width + 'px';\n    }\n    this.update_label_position();\n    this.update_handle_position();\n    if (this.gantt.options.show_expected_progress) {\n      this.date_changed();\n      this.compute_duration();\n      this.update_expected_progressbar_position();\n    }\n    this.update_progressbar_position();\n    this.update_arrow_position();\n  }\n\n  update_label_position_on_horizontal_scroll({ x, sx }) {\n    const container = document.querySelector('.gantt-container');\n    const label = this.group.querySelector('.bar-label');\n    const img = this.group.querySelector('.bar-img') || '';\n    const img_mask = this.bar_group.querySelector('.img_mask') || '';\n\n    let barWidthLimit = this.$bar.getX() + this.$bar.getWidth();\n    let newLabelX = label.getX() + x;\n    let newImgX = img && img.getX() + x || 0;\n    let imgWidth = img && img.getBBox().width + 7 || 7;\n    let labelEndX = newLabelX + label.getBBox().width + 7;\n    let viewportCentral = sx + container.clientWidth / 2;\n\n    if (label.classList.contains('big')) return;\n\n    if (labelEndX < barWidthLimit && x > 0 && labelEndX < viewportCentral) {\n      label.setAttribute('x', newLabelX);\n      if (img) {\n        img.setAttribute('x', newImgX);\n        img_mask.setAttribute('x', newImgX);\n      }\n    } else if ((newLabelX - imgWidth) > this.$bar.getX() && x < 0 && labelEndX > viewportCentral) {\n      label.setAttribute('x', newLabelX);\n      if (img) {\n        img.setAttribute('x', newImgX);\n        img_mask.setAttribute('x', newImgX);\n      }\n    }\n  }\n\n  date_changed() {\n    let changed = false;\n    const { new_start_date, new_end_date } = this.compute_start_end_date();\n    console.log('ddd ==> changed', this.task);\n    console.log('ddd ==> compute_start_end_date', new_start_date, new_end_date);\n\n    if (Number(this.task._start) !== Number(new_start_date)) {\n      changed = true;\n      this.task._start = new_start_date;\n    }\n\n    if (Number(this.task._end) !== Number(new_end_date)) {\n      changed = true;\n      this.task._end = new_end_date;\n    }\n\n    if (!changed) return;\n\n    if (this.invalid) {\n      this.invalid = false;\n      this.task.invalid = false;\n      this.$bar.classList.remove('bar-invalid');\n    }\n\n    // TODO out of limit date\n    if (\n        new_start_date < this.gantt.gantt_start ||\n        new_end_date > this.gantt.gantt_end\n    ) {\n      // this.gantt.redraw({\n      //   start: new_start_date,\n      //   end: new_end_date,\n      // });\n    }\n\n    this.gantt.trigger_event(\"date_change\", [\n      this.task,\n      new_start_date,\n      date_utils.add(new_end_date, -1, \"second\"),\n    ]);\n  }\n\n  progress_changed() {\n    const new_progress = this.compute_progress();\n    this.task.progress = new_progress;\n    this.gantt.trigger_event(\"progress_change\", [this.task, new_progress]);\n  }\n\n  set_action_completed() {\n    this.action_completed = true;\n    setTimeout(() => (this.action_completed = false), 800);\n  }\n\n  compute_start_end_date() {\n    const bar = this.$bar;\n    const x_in_units = bar.getX() / this.gantt.options.column_width;\n    const new_start_date = date_utils.add(\n      this.gantt.gantt_start,\n      x_in_units * this.gantt.options.step,\n      \"hour\",\n    );\n    const width_in_units = bar.getWidth() / this.gantt.options.column_width;\n    const new_end_date = date_utils.add(\n      new_start_date,\n      width_in_units * this.gantt.options.step,\n      \"hour\",\n    );\n\n    return { new_start_date, new_end_date };\n  }\n\n  compute_progress() {\n    const progress =\n      (this.$bar_progress.getWidth() / this.$bar.getWidth()) * 100;\n    return parseInt(progress, 10);\n  }\n\n  compute_expected_progress() {\n    this.expected_progress =\n      date_utils.diff(date_utils.today(), this.task._start, \"hour\") /\n      this.gantt.options.step;\n    // 未到当前日期\n    if (this.expected_progress < 0) {\n      this.expected_progress = 0;\n    }\n    this.expected_progress =\n      ((this.expected_progress < this.duration\n        ? this.expected_progress\n        : this.duration) *\n        100) /\n      this.duration;\n  }\n\n  compute_x() {\n    const { step, column_width } = this.gantt.options;\n    const task_start = this.task._start;\n    const gantt_start = this.gantt.gantt_start;\n\n    const diff = date_utils.diff(task_start, gantt_start, \"hour\");\n    let x = (diff / step) * column_width;\n\n    if (this.gantt.view_is(\"Month\")) {\n      const diff = date_utils.diff(task_start, gantt_start, \"day\");\n      x = (diff * column_width) / 30;\n    }\n    this.x = x;\n  }\n\n  compute_y() {\n    // this.y =\n    //   this.gantt.options.header_height +\n    //   this.gantt.options.padding / 2 +\n    //   this.task._index * (this.height + this.gantt.options.padding);\n    this.y = this.gantt.options.padding / 2 +\n      this.task._index * (this.height + this.gantt.options.padding);\n  }\n\n  compute_duration() {\n    this.duration =\n      date_utils.diff(this.task._end, this.task._start, \"hour\") /\n      this.gantt.options.step;\n  }\n\n  get_snap_position(dx) {\n    let odx = dx,\n      rem,\n      position;\n\n    if (this.gantt.view_is(\"Week\")) {\n      rem = dx % (this.gantt.options.column_width / 7);\n      position =\n        odx -\n        rem +\n        (rem < this.gantt.options.column_width / 14\n          ? 0\n          : this.gantt.options.column_width / 7);\n    } else if (this.gantt.view_is(\"Month\")) {\n      rem = dx % (this.gantt.options.column_width / 30);\n      position =\n        odx -\n        rem +\n        (rem < this.gantt.options.column_width / 60\n          ? 0\n          : this.gantt.options.column_width / 30);\n    } else {\n      rem = dx % this.gantt.options.column_width;\n      position =\n        odx -\n        rem +\n        (rem < this.gantt.options.column_width / 2\n          ? 0\n          : this.gantt.options.column_width);\n    }\n    return position;\n  }\n\n  update_attr(element, attr, value) {\n    value = +value;\n    if (!isNaN(value)) {\n      element.setAttribute(attr, value);\n    }\n    return element;\n  }\n\n  update_expected_progressbar_position() {\n    if (!this.$expected_bar_progress) return;\n\n    this.$expected_bar_progress.setAttribute(\"x\", this.$bar.getX());\n    this.compute_expected_progress();\n    this.$expected_bar_progress.setAttribute(\n      \"width\",\n      this.gantt.options.column_width *\n      this.duration *\n      (this.expected_progress / 100) || 0,\n    );\n  }\n\n  update_progressbar_position() {\n    if (this.gantt.options.readonly) return;\n    if (!this.$bar_progress) return;\n\n    this.$bar_progress.setAttribute(\"x\", this.$bar.getX());\n    this.$bar_progress.setAttribute(\n      \"width\",\n      this.$bar.getWidth() * (this.task.progress / 100),\n    );\n  }\n\n  update_label_position() {\n    const img_mask = this.bar_group.querySelector('.img_mask') || '';\n    const bar = this.$bar,\n      label = this.group.querySelector(\".bar-label\"),\n      img = this.group.querySelector('.bar-img');\n\n\n    let padding = 10;\n    let x_offset_label_img = this.image_size + 5;\n    const labelWidth = label.getBBox().width\n    const barWidth = bar.getWidth()\n    if (labelWidth > barWidth) {\n      label.classList.add(\"big\");\n      if (img) {\n        img.setAttribute('x', bar.getX() + barWidth + padding);\n        img_mask.setAttribute('x', bar.getX() + barWidth + padding);\n        label.setAttribute('x', bar.getX() + barWidth + x_offset_label_img);\n      } else {\n        label.setAttribute('x', bar.getX() + barWidth + padding);\n      }\n    } else {\n      label.classList.remove(\"big\");\n      if (img) {\n        img.setAttribute('x', bar.getX() + padding);\n        img_mask.setAttribute('x', bar.getX() + padding);\n        label.setAttribute('x', bar.getX() + padding + x_offset_label_img);\n      } else {\n        label.setAttribute('x', bar.getX() + barWidth / 2 - labelWidth / 2);\n      }\n    }\n  }\n\n  update_handle_position() {\n    if (this.gantt.options.readonly) return;\n    const bar = this.$bar;\n    const handle_width = this.gantt.options.handle_width;\n\n    this.handle_group\n      .querySelector(\".handle.left\")\n      .setAttribute(\"x\", bar.getX() + 1);\n    this.handle_group\n      .querySelector(\".handle.right\")\n      .setAttribute(\"x\", bar.getEndX() - handle_width - 1);\n    const handle = this.handle_group.querySelector('.handle.progress');\n    handle && handle.setAttribute(\"points\", this.get_progress_polygon_points());\n  }\n\n  update_arrow_position() {\n    this.arrows = this.arrows || [];\n    for (let arrow of this.arrows) {\n      arrow.update();\n    }\n  }\n}\n\nfunction isFunction(functionToCheck) {\n  let getType = {};\n  return (\n    functionToCheck &&\n    getType.toString.call(functionToCheck) === \"[object Function]\"\n  );\n}\n","import { createSVG } from \"./svg_utils\";\n\nexport default class Arrow {\n  constructor(gantt, from_task, to_task) {\n    this.gantt = gantt;\n    this.from_task = from_task;\n    this.to_task = to_task;\n\n    this.calculate_path();\n    this.draw();\n    this.drawInner();\n  }\n\n  calculate_path() {\n    if (this.from_task.empty || this.to_task.empty) return;\n\n    const rowHeight = this.gantt.options.bar_height + this.gantt.options.padding;\n    const taskHeight = this.gantt.options.bar_height;\n    const arrowCurve = this.gantt.options.arrow_curve;\n    // const arrowIndent = this.gantt.options.column_width / 2;\n    const arrowIndent = 19; // fixed indent\n    const taskFrom = this.from_task;\n    const taskTo = this.to_task;\n\n    const taskFromX2 = taskFrom.$bar.getEndX();\n    const taskFromY1 = taskFrom.$bar.getY();\n    const taskToX1 = taskTo.$bar.getX();\n    const taskToY1 = taskTo.$bar.getY();\n\n    const indexCompare = taskFrom.task._index > taskTo.task._index ? -1 : 1;\n    const taskToEndPosition = taskToY1 + taskHeight / 2;\n    const taskFromEndPosition = taskFromX2 + arrowIndent * 2;\n\n    const taskFromHorizontalOffsetValue =\n        taskFromEndPosition < taskToX1 ? '' : `H ${taskToX1 - arrowIndent}`;\n    const taskToHorizontalOffsetValue =\n        taskFromEndPosition > taskToX1\n            ? arrowIndent\n            : taskToX1 - taskFromX2 - arrowIndent;\n\n    const path = `M ${taskFromX2} ${taskFromY1 + taskHeight / 2}\n    h ${arrowIndent}\n    v ${(indexCompare * rowHeight) / 2}\n    ${taskFromHorizontalOffsetValue}\n    V ${taskToEndPosition}\n    h ${taskToHorizontalOffsetValue}`;\n\n    const trianglePoints = `${taskToX1},${taskToEndPosition}\n    ${taskToX1 - arrowCurve},${taskToEndPosition - arrowCurve}\n    ${taskToX1 - arrowCurve},${taskToEndPosition + arrowCurve}`;\n\n    this.path = path;\n\n    this.points = trianglePoints;\n  }\n\n  draw() {\n    this.element = createSVG(\"g\", {\n      \"data-from\": this.from_task.task.id,\n      \"data-to\": this.to_task.task.id,\n    });\n  }\n\n  drawInner() {\n    if (this.from_task.empty || this.to_task.empty) return;\n\n    this.svgPath = createSVG(\"path\", {\n      d: this.path,\n      fill: \"none\",\n      append_to: this.element\n    });\n    this.svgPolygon = createSVG(\"polygon\", {\n      points: this.points,\n      append_to: this.element,\n    });\n  }\n\n  update() {\n    if (this.from_task.empty || this.to_task.empty) return;\n\n    this.calculate_path();\n    this.svgPath.setAttribute(\"d\", this.path);\n    this.svgPolygon.setAttribute(\"points\", this.points);\n  }\n}\n","export default class Popup {\n  constructor(gantt, parent) {\n    this.gantt = gantt;\n    this.parent = parent;\n    this.custom_html = gantt.options.popup;\n    this.make();\n  }\n\n  make() {\n    this.parent.innerHTML = `\n        <div class=\"title\"></div>\n        <div class=\"subtitle\"></div>\n        <div class=\"pointer\"></div>\n    `;\n\n    this.hide();\n\n    this.title = this.parent.querySelector(\".title\");\n    this.subtitle = this.parent.querySelector(\".subtitle\");\n    this.pointer = this.parent.querySelector(\".pointer\");\n  }\n\n  show(options) {\n    if (!options.target_element) {\n      throw new Error(\"target_element is required to show popup\");\n    }\n    const target_element = options.target_element;\n\n    if (typeof this.custom_html === 'function') {\n      let html = this.custom_html(options.task);\n      html += '<div class=\"pointer\"></div>';\n      this.parent.innerHTML = html;\n      this.pointer = this.parent.querySelector(\".pointer\");\n    } else {\n      // set data\n      this.title.innerHTML = options.title;\n      this.subtitle.innerHTML = options.subtitle;\n    }\n\n    // set position\n    let position_meta;\n    if (target_element instanceof HTMLElement) {\n      position_meta = target_element.getBoundingClientRect();\n    } else if (target_element instanceof SVGElement) {\n      position_meta = target_element.getBBox();\n    }\n    const parentWidth = this.parent.clientWidth;\n    const parentHeight = this.parent.clientHeight;\n    const ganttOptions = this.gantt.options;\n    const ganttWidth = this.gantt.$container.clientWidth;\n    const ganttHeight = this.gantt.$container.clientHeight;\n\n    const dy = this.gantt.$container_main.scrollTop;\n\n    // get position\n    let pos_x = options.x - parentWidth / 2;\n    let pos_y =\n        position_meta.y +\n        position_meta.height +\n        ganttOptions.header_height -\n        dy +\n        10;\n\n    if (pos_y > ganttHeight - parentHeight) {\n      pos_y = position_meta.y - parentHeight - 10 - dy + ganttOptions.header_height;\n    }\n\n    if (pos_x > ganttWidth - parentWidth) {\n      const diff = pos_x - (ganttWidth - parentWidth - 5);\n      pos_x -= diff;\n    }\n\n    if (pos_x < 0) {\n      pos_x = 2\n    }\n\n    this.parent.style.left = pos_x + \"px\";\n    this.parent.style.top = pos_y + \"px\";\n\n    this.pointer.style.left = parentWidth / 2 + 'px';\n    this.pointer.style.top = \"-15px\";\n\n    // show\n    this.parent.style.display = \"block\";\n  }\n\n  hide() {\n    this.parent.style.display = \"none\";\n    this.parent.style.left = 0;\n  }\n}\n","export default class Backdrop {\n  constructor(parent) {\n    this.parent = parent;\n    this.make();\n  }\n\n  make() {\n    this.parent.innerHTML = `\n      <div class=\"gantt-drag-mask\">\n        <div class=\"date-range\"></div>\n      </div>\n    `;\n\n    // this.hide();\n\n    this.drag_mask = this.parent.querySelector('.gantt-drag-mask');\n    this.date_range = this.parent.querySelector('.date-range');\n  }\n\n  showAt({ x, width, range }) {\n    if (range && range.length) {\n      const htmlHold = `<span>${range[0]}</span><span>${range[1]}</span>`;\n      this.date_range.innerHTML = htmlHold;\n    }\n\n    this.drag_mask.style.left = x + 'px';\n    this.drag_mask.style.width = width + 'px';\n\n    this.show();\n  }\n\n  show() {\n    this.parent.style.display = 'block';\n    this.drag_mask.style.display = 'block';\n  }\n\n  hide() {\n    this.parent.style.display = \"none\";\n    this.drag_mask.style.display = \"none\";\n  }\n}","import date_utils from \"./date_utils\";\nimport { $, createSVG } from \"./svg_utils\";\nimport { getLang } from \"./lang_utils\";\nimport Bar from \"./bar\";\nimport Arrow from \"./arrow\";\nimport Popup from \"./popup\";\nimport Backdrop from './backdrop';\n\nimport \"./gantt.scss\";\n\nconst VIEW_MODE = {\n  HOUR: \"Hour\",\n  QUARTER_DAY: \"Quarter Day\",\n  HALF_DAY: \"Half Day\",\n  DAY: \"Day\",\n  WEEK: \"Week\",\n  MONTH: \"Month\",\n  QUARTER_YEAR: \"Quarter Year\",\n  YEAR: \"Year\",\n};\n\nconst VIEW_MODE_PADDING = {\n  HOUR: [\"7d\", \"7d\"],\n  QUARTER_DAY: [\"7d\", \"7d\"],\n  HALF_DAY: [\"7d\", \"7d\"],\n  DAY: [\"1m\", \"1m\"],\n  WEEK: [\"1m\", \"1m\"],\n  MONTH: [\"1y\", \"1y\"],\n  QUARTER_YEAR: [\"1y\", \"1y\"],\n  YEAR: [\"2y\", \"2y\"],\n};\n\nconst TICK_LINE = {\n  BOTH: \"both\",\n  HORIZONTAL: \"horizontal\",\n  VERTICAL: \"vertical\",\n}\n\nconst DEFAULT_OPTIONS = {\n  header_height: 65,\n  // column_width: 30,\n  // step: 24,\n  bar_height: 30,\n  bar_corner_radius: 3,\n  arrow_curve: 5,\n  handle_width: 8,\n  padding: 18,\n  view_modes: [...Object.values(VIEW_MODE)],\n  view_mode: VIEW_MODE.DAY,\n  date_format: \"YYYY-MM-DD\",\n  popup_trigger: \"click\",\n  show_expected_progress: false,\n  dependencies: \"arrow\",\n  drag_bar_progress: true,\n  drag_sync_child: false,\n  drag_limit_child: false,\n  popup: null,\n  language: \"en\",\n  readonly: false,\n  highlight_weekend: true,\n  scroll_to: 'start',\n  lines: TICK_LINE.BOTH,\n  auto_move_label: true,\n  today_button: true,\n  view_mode_select: false,\n};\n\nexport default class Gantt {\n  constructor(wrapper, tasks, options) {\n    this.setup_wrapper(wrapper);\n    this.setup_options(options);\n    this.setup_tasks(tasks);\n    // initialize with default view mode\n    this.change_view_mode();\n    this.bind_events();\n  }\n\n  setup_wrapper(element) {\n      let svg_element, wrapper_element;\n\n      // CSS Selector is passed\n      if (typeof element === 'string') {\n          element = document.querySelector(element);\n      }\n\n      // get the SVGElement\n      if (element instanceof HTMLElement) {\n          wrapper_element = element;\n          svg_element = element.querySelector('svg');\n      } else if (element instanceof SVGElement) {\n          svg_element = element;\n      } else {\n          throw new TypeError(\n              'Frappé Gantt only supports usage of a string CSS selector,' +\n                  \" HTML DOM element or SVG DOM element for the 'element' parameter\",\n          );\n      }\n\n      // svg element\n      if (!svg_element) {\n          // create it\n          this.$svg = createSVG('svg', {\n              append_to: wrapper_element,\n              class: 'gantt',\n          });\n      } else {\n          this.$svg = svg_element;\n          this.$svg.classList.add('gantt');\n      }\n\n      // container element\n      this.$container = document.createElement('div');\n      this.$container.classList.add('gantt-container');\n\n      // 1.header horizontal-scroll\n      this.$container_header = document.createElement('div');\n      this.$container_header.classList.add('gantt-container_header');\n      this.$container.appendChild(this.$container_header);\n\n      // 2.main vertical-scroll\n      this.$container_main = document.createElement('div');\n      this.$container_main.classList.add('gantt-container_main');\n      this.$container.appendChild(this.$container_main);\n\n      // 3. svg appendTo wrapper\n      const parent_element = this.$svg.parentElement;\n      parent_element.appendChild(this.$container);\n      this.$container_main.appendChild(this.$svg);\n\n      // 4. toobar wrapper\n      this.$container_toolbar = document.createElement('div');\n      this.$container_toolbar.classList.add('gantt-container_toolbar');\n      this.$container.appendChild(this.$container_toolbar);\n\n      // 5.popup wrapper\n      this.$popup_wrapper = document.createElement('div');\n      this.$popup_wrapper.classList.add('gantt-popup-wrapper');\n      this.$container.appendChild(this.$popup_wrapper);\n\n      // 6.backdrop wrapper\n      this.$drag_backdrop = document.createElement('div');\n      this.$drag_backdrop.classList.add('gantt-drag-backdrop');\n      this.$container.appendChild(this.$drag_backdrop);\n  }\n\n  setup_options(options) {\n    this.options = { ...DEFAULT_OPTIONS, ...options }\n    if (!options.view_mode_padding) options.view_mode_padding = {}\n    for (let [key, value] of Object.entries(options.view_mode_padding)) {\n      if (typeof value === \"string\") {\n        // Configure for single value given\n        options.view_mode_padding[key] = [value, value];\n      }\n    }\n\n    this.options.view_mode_padding = {\n      ...VIEW_MODE_PADDING,\n      ...options.view_mode_padding,\n    };\n  }\n\n  setup_tasks(tasks) {\n    // prepare tasks\n    this.tasks = tasks.map((task, i) => {\n      return this.format_task(task, i);\n    });\n\n    this.setup_dependencies();\n  }\n\n  setup_dependencies() {\n    this.dependency_map = {};\n    for (let t of this.tasks) {\n      this.format_dependency(t);\n    }\n  }\n\n  format_task(task, i) {\n    // reset symbol\n    task.empty = false;\n    task.invalid = false;\n    task.progress = task.progress || 0;\n\n    // convert to Date objects\n    task._start = date_utils.parse(task.start);\n    if (task.end === undefined && task.duration !== undefined) {\n      task.end = task._start;\n      let durations = task.duration.split(\" \");\n\n      durations.forEach((tmpDuration) => {\n        let { duration, scale } = date_utils.parse_duration(tmpDuration);\n        task.end = date_utils.add(task.end, duration, scale);\n      });\n    }\n    task._end = date_utils.parse(task.end);\n    let diff = date_utils.diff(task._end, task._start, \"year\");\n    if (diff < 0) {\n      throw Error(\"start of task can't be after end of task: in task #, \" + (i + 1))\n    }\n    // make task invalid if duration too large\n    if (date_utils.diff(task._end, task._start, \"year\") > 10) {\n      task.end = null;\n    }\n\n    // cache index\n    task._index = i;\n\n    // invalid flag\n    if (!task.start) {\n      task.invalid = 'start';\n    }\n    if (!task.end) {\n      task.invalid = 'end';\n    }\n    if (!task.start && !task.end) {\n      task._start = null;\n      task._end = null;\n      task.empty = true;\n      task.invalid = true;\n\n      // const today = date_utils.today();\n      // task._start = today;\n      // task._end = date_utils.add(today, 2, \"day\");\n    }\n\n    // mock daterange\n    if (task.start && !task.end) {\n      task._end = date_utils.add(task._start, 2, \"day\");\n    }\n    if (!task.start && task.end) {\n      task._start = date_utils.add(task._end, -2, \"day\");\n    }\n\n    // if hours is not set, assume the last day is full day\n    // e.g: 2018-09-09 becomes 2018-09-09 23:59:59\n    if (task._end) {\n      const task_end_values = date_utils.get_date_values(task._end);\n      if (task_end_values.slice(3).every((d) => d === 0)) {\n        task._end = date_utils.add(task._end, 24, \"hour\");\n      }\n    }\n\n    // dependencies\n    if (typeof task.dependencies === \"string\" || !task.dependencies) {\n      let deps = [];\n      if (task.dependencies) {\n        deps = task.dependencies\n          .split(\",\")\n          .map((d) => d.trim().replaceAll(' ', '_'))\n          .filter((d) => d);\n      }\n      task.dependencies = deps;\n    }\n\n    // uids\n    if (!task.id) {\n      task.id = generate_id(task);\n    } else if (typeof task.id === 'string') {\n      task.id = task.id.replaceAll(' ', '_')\n    } else {\n      task.id = `${task.id}`\n    }\n    return task;\n  }\n\n  format_dependency(task) {\n    for (let d of task.dependencies) {\n      this.dependency_map[d] = this.dependency_map[d] || [];\n      this.dependency_map[d].push(task.id);\n    }\n  }\n\n  refresh(tasks) {\n    this.setup_tasks(tasks);\n    this.change_view_mode();\n  }\n\n  update(task) {\n    const original = this.get_task(task.id);\n    // new object\n    const current = Object.keys(original).reduce((result, key) => {\n      const val = task[key];\n      result[key] = val === undefined ? original[key] : val;\n      return result;\n    }, {});\n\n    const update_task = this.format_task(current, original._index);\n\n    // empty daterange\n    if (original.empty || update_task.empty) {\n      this.replace(update_task, original);\n      return\n    }\n\n    // invalid daterange\n    if (original.invalid !== update_task.invalid) {\n      this.replace(update_task, original);\n      return\n    }\n\n    // update task\n    const bar = this.get_bar(update_task.id);\n    bar.update_bar_task(update_task);\n    this.tasks.splice(original._index, 1, update_task);\n\n    if (Number(original._start) !== Number(update_task._start)) {\n      // move-left\n      const start_date = date_utils.parse(update_task._start);\n      const dx =\n          (date_utils.diff(original._start, start_date, 'hour') /\n              this.options.step) *\n          this.options.column_width;\n\n      bar.update_bar_position({\n          x: bar.$bar.getX() - dx,\n          width: bar.$bar.getWidth() + dx,\n      });\n    }\n\n    if (Number(original._end) !== Number(update_task._end)) {\n      // move-right\n      const end_date = date_utils.parse(update_task._end);\n      const dx =\n          (date_utils.diff(original._end, end_date, 'hour') /\n              this.options.step) *\n          this.options.column_width;\n\n      bar.update_bar_position({\n        width: bar.$bar.getWidth() - dx,\n      });\n    }\n  }\n\n  // TODO 支持多条\n  remove(task) {\n    let index = null;\n    if (typeof task === 'object') {\n      const tid = `${task.id}`.replaceAll(' ', '_');\n      index = this.tasks.findIndex((item) => item.id === tid);\n    } else {\n      index = task;\n    }\n    if (index === -1 || index >= this.tasks.length) return;\n    const row_height = this.options.bar_height + this.options.padding;\n\n    // remove tasks bars\n    const remove_bar = this.bars[index];\n    this.layers.bar.removeChild(remove_bar.group);\n    this.tasks.splice(index, 1);\n    this.bars.splice(index, 1);\n\n    // resort task._index\n    let i = index;\n    while (i < this.tasks.length) {\n      this.tasks[i]._index = i;\n      this.bars[i].update_bar_vertical({ offset: -row_height });\n      i+=1;\n    }\n\n    // remove grid-row row-line\n    const rows = this.layers.grid.querySelector('.rows_layer');\n    rows.lastChild && rows.removeChild(rows.lastChild);\n    const lines = this.layers.grid.querySelector('.lines_layer');\n    lines.lastChild && lines.removeChild(lines.lastChild);\n\n    // Empty Arrow\n    this.layers.arrow.innerHTML = \"\";\n    this.make_arrows();\n    this.map_arrows_on_bars();\n\n    // update grid_height\n    const grid_height = this.tasks.length * row_height;\n    this.$svg.setAttribute(\"height\", grid_height);\n    this.$svg.querySelector(\".grid-background\").setAttribute(\"height\", grid_height);\n  }\n\n  // TODO 支持多条\n  insert(task, index) {\n    let target;\n    if (index === undefined) {\n      target = this.tasks.length; // 默认队尾\n    } else if (typeof index === 'object') {\n      target = this.tasks.findIndex(task => task.id === index.id); // 指定元素\n      target += 1; // 其后\n    } else {\n      target = index; // 指定位置\n    }\n    const insert_task = this.format_task(task, target)\n    // resort task._index\n    let i = target;\n    while (i < this.tasks.length) {\n        this.tasks[i]._index = i + 1;\n        i += 1;\n    }\n    // insert task target\n    this.tasks.splice(target, 0, insert_task);\n    this.setup_dependencies();\n\n    // calculate date_start date_end\n    let limit_start = null, limit_end = null;\n    if (insert_task._start && insert_task._start < this.gantt_start) {\n      limit_start = insert_task._start;\n    }\n    if (insert_task._end && insert_task._end > this.gantt_end) {\n      limit_end = insert_task._end;\n    }\n    // TODO out of limit date\n    if (limit_start || limit_end) {\n      // this.redraw({ start: limit_start, end: limit_end });\n    }\n\n    // update bars y\n    const row_height = this.options.bar_height + this.options.padding;\n    i = target;\n    while (i < this.bars.length) {\n      this.bars[i].update_bar_vertical({ offset: row_height });\n      i+=1;\n    }\n\n    // insert bar\n    const insert_bar = new Bar(this, insert_task);\n    const target_bar = this.bars[target + 1];\n    this.layers.bar.insertBefore(insert_bar.group, target_bar ? target_bar.group : null);\n    this.bars.splice(target, 0, insert_bar);\n\n    // append grid-row\n    const row_width = this.dates.length * this.options.column_width;\n    const insert_y = (this.tasks.length - 1) * row_height;\n    const $grid_el = this.layers.grid;\n    createSVG('rect', {\n      x: 0,\n      y: insert_y,\n      width: row_width,\n      height: row_height,\n      class: 'grid-row',\n      append_to: $grid_el.querySelector('.rows_layer'),\n    });\n    // append row-line\n    if ($grid_el.querySelector('.lines_layer')) {\n      if (this.options.lines !== TICK_LINE.VERTICAL) {\n        createSVG(\"line\", {\n          x1: 0,\n          y1: insert_y,\n          x2: row_width,\n          y2: insert_y,\n          class: \"row-line\",\n          append_to: $grid_el.querySelector('.lines_layer'),\n        });\n      }\n    }\n\n    // Empty Arrow\n    this.layers.arrow.innerHTML = \"\";\n    this.make_arrows();\n    this.map_arrows_on_bars();\n\n    // update grid_height\n    const grid_height = this.tasks.length * row_height;\n    this.$svg.setAttribute(\"height\", grid_height);\n    this.$svg.querySelector(\".grid-background\").setAttribute(\"height\", grid_height);\n  }\n\n  replace(update_task, prev_task) {\n    // Bar\n    const update_bar = new Bar(this, update_task);\n\n    // remove old_bar from bars and bar-layers\n    const old_bar = this.bars[prev_task._index];\n    this.layers.bar.removeChild(old_bar.group);\n    this.bars.splice(prev_task._index, 1, update_bar);\n\n    // replace update_bar and update tasks\n    const target_postion = this.bars[prev_task._index + 1];\n    this.layers.bar.insertBefore(update_bar.group, target_postion ? target_postion.group : null);\n    this.tasks.splice(prev_task._index, 1, update_task);\n\n    // Arrow\n    // before remove all childs, after draws arrow-layers\n    this.layers.arrow.innerHTML = \"\";\n    this.make_arrows();\n    this.map_arrows_on_bars();\n  }\n\n  change_view_mode(mode = this.options.view_mode) {\n    this.update_view_scale(mode);\n    this.setup_dates();\n    this.render();\n    // fire viewmode_change event\n    this.trigger_event(\"view_change\", [mode]);\n  }\n\n  update_view_scale(view_mode) {\n    this.options.view_mode = view_mode;\n    if (view_mode === VIEW_MODE.HOUR) {\n      this.options.step = 24 / 24;\n      this.options.column_width = 38;\n    } else if (view_mode === VIEW_MODE.QUARTER_DAY) {\n      this.options.step = 24 / 4;\n      this.options.column_width = 38;\n    } else if (view_mode === VIEW_MODE.HALF_DAY) {\n      this.options.step = 24 / 2;\n      this.options.column_width = 38;\n    } else if (view_mode === VIEW_MODE.DAY) {\n      this.options.step = 24;\n      this.options.column_width = 38;\n    } else if (view_mode === VIEW_MODE.WEEK) {\n      this.options.step = 24 * 7;\n      this.options.column_width = 140;\n    } else if (view_mode === VIEW_MODE.MONTH) {\n      this.options.step = 24 * 30;\n      this.options.column_width = 280;\n    } else if (view_mode === VIEW_MODE.QUARTER_YEAR) {\n      this.options.step = 24 * 365 / 4;\n      this.options.column_width = 400;\n    } else if (view_mode === VIEW_MODE.YEAR) {\n      this.options.step = 24 * 365;\n      this.options.column_width = 480;\n    }\n  }\n\n  setup_dates() {\n    this.setup_gantt_dates();\n    this.setup_date_values();\n  }\n\n  setup_gantt_dates() {\n    this.gantt_start = this.gantt_end = null;\n\n    for (let task of this.tasks) {\n      // set global start and end date\n      if (!this.gantt_start || (task._start && task._start < this.gantt_start)) {\n          this.gantt_start = task._start;\n      }\n      if (!this.gantt_end || (task._end && task._end > this.gantt_end)) {\n        this.gantt_end = task._end;\n      }\n    }\n    let gantt_start, gantt_end;\n    if (!this.gantt_start) gantt_start = new Date();\n    else gantt_start = date_utils.start_of(this.gantt_start, \"day\");\n    if (!this.gantt_end) gantt_end = new Date();\n    else gantt_end = date_utils.start_of(this.gantt_end, \"day\");\n\n    // ensure today in daterange\n    const today = date_utils.today();\n    if (gantt_start > today) gantt_start = today;\n    if (gantt_end < today) gantt_end = today;\n\n    // get date start and end\n    this.get_gantt_dates(gantt_start, gantt_end);\n  }\n\n  get_gantt_dates(start, end) {\n    // add date padding on both sides\n    let viewKey;\n    for (let [key, value] of Object.entries(VIEW_MODE)) {\n      if (value === this.options.view_mode) {\n        viewKey = key;\n      }\n    }\n    const [padding_start, padding_end] = this.options.view_mode_padding[\n      viewKey\n    ].map(date_utils.parse_duration);\n\n    const gantt_start = date_utils.add(\n      start,\n      -padding_start.duration,\n      padding_start.scale,\n    );\n\n    let format_string;\n    if (this.view_is(VIEW_MODE.YEAR)) {\n        format_string = 'YYYY';\n    } else if (this.view_is(VIEW_MODE.MONTH) || this.view_is(VIEW_MODE.QUARTER_YEAR)) {\n        format_string = 'YYYY-MM';\n    } else if (this.view_is(VIEW_MODE.DAY)) {\n        format_string = 'YYYY-MM-DD';\n    } else {\n        format_string = 'YYYY-MM-DD HH';\n    }\n    this.gantt_start = date_utils.parse(\n        date_utils.format(gantt_start, format_string),\n    );\n    this.gantt_start.setHours(0, 0, 0, 0);\n    this.gantt_end = date_utils.add(\n        end,\n        padding_end.duration,\n        padding_end.scale,\n    );\n    this.gantt_end.setHours(0, 0, 0, 0);\n\n    // quarter_year start January end December\n    if (this.view_is(VIEW_MODE.QUARTER_YEAR)) {\n      this.gantt_start = new Date(this.gantt_start.setMonth(0, 1));\n      this.gantt_end = new Date(this.gantt_end.setMonth(9, 1));\n    }\n  }\n\n  setup_date_values() {\n    this.dates = [];\n    let cur_date = null;\n\n    while (cur_date === null || cur_date < this.gantt_end) {\n      if (!cur_date) {\n        cur_date = date_utils.clone(this.gantt_start);\n      } else {\n        if (this.view_is(VIEW_MODE.YEAR)) {\n          cur_date = date_utils.add(cur_date, 1, \"year\");\n        } else if (this.view_is(VIEW_MODE.MONTH)) {\n          cur_date = date_utils.add(cur_date, 1, \"month\");\n        } else if (this.view_is(VIEW_MODE.QUARTER_YEAR)) {\n          cur_date = date_utils.add(cur_date, 3, \"month\");\n        } else {\n          cur_date = date_utils.add(cur_date, this.options.step, \"hour\");\n        }\n      }\n      this.dates.push(cur_date);\n    }\n  }\n\n  // TODO\n  redraw({ start, end }) {\n    console.log('ddd ==> redraw', start, end);\n    if (start) {\n      this.redraw_left(start);\n    }\n\n    this.redraw_layout();\n  }\n\n  redraw_left(start) {\n    // 获取左侧日期\n    const start_date = new Date(start.setHours(0, 0, 0, 0));\n    const dates = this.get_redraw_dates(start_date);\n    // 插入左侧日期\n    this.get_dates_to_draw(dates, null).forEach((date, i) => {\n      this.draw_date(date, i);\n    });\n    // 重赋值\n    this.dates = dates.concat(this.dates);\n    this.gantt_prev_start = this.gantt_start;\n    this.gantt_start = start_date;\n    // 插入周末\n    if (!this.options.highlight_weekend) return;\n    if (!this.view_is('Day') && !this.view_is('Half Day')) return;\n    const weekends_fragment = this.getHighlightWeekends_fragment(\n        start_date,\n        this.gantt_prev_start,\n    );\n    this.layers.grid.appendChild(weekends_fragment);\n    // 插入线条\n    this.redraw_col_tick(dates);\n  }\n\n  get_redraw_dates(start_date) {\n    const start_arrs = [];\n\n    let start_temp = start_date;\n    while (start_temp < this.gantt_start) {\n      start_arrs.push(start_temp);\n      if (this.view_is(VIEW_MODE.YEAR)) {\n        start_temp = date_utils.add(start_temp, 1, 'year');\n      } else if (this.view_is(VIEW_MODE.MONTH)) {\n        start_temp = date_utils.add(start_temp, 1, 'month');\n      } else if (this.view_is(VIEW_MODE.QUARTER_YEAR)) {\n        start_temp = date_utils.add(start_temp, 3, 'month');\n      } else {\n        start_temp = date_utils.add(start_temp, this.options.step, 'hour');\n      }\n    }\n\n    return start_arrs;\n  }\n\n  redraw_right(end) {\n    const end_date = new Date(date_utils.add(end, 1, 'day').setHours(0, 0, 0, 0));\n    const end_arrs = [];\n\n    let end_temp = end_date;\n    while (this.gantt_end < end_temp) {\n      end_arrs.unshift(end_temp);\n\n      if (this.view_is(VIEW_MODE.YEAR)) {\n        end_temp = date_utils.add(end_temp, -1, 'year');\n      } else if (this.view_is(VIEW_MODE.MONTH)) {\n        end_temp = date_utils.add(end_temp, -1, 'month');\n      } else if (this.view_is(VIEW_MODE.QUARTER_YEAR)) {\n        end_temp = date_utils.add(end_temp, -3, 'month');\n      } else {\n        end_temp = date_utils.add(end_temp, -this.options.step, 'hour');\n      }\n    }\n    this.new_limit_end = end_arrs;\n    if (end_arrs.length > 0) {\n      this.get_dates_to_draw(end_arrs, this.dates[this.dates.length - 1]).forEach((date, i) => {\n        this.draw_date(date, i);\n      });\n      this.dates = this.dates.concat(end_arrs);\n      this.gantt_end = end_date;\n    }\n  }\n\n  redraw_layout() {\n    const grid_width = this.dates.length * this.options.column_width;\n    // background\n    $.attr(this.$svg, { width: grid_width });\n    $.attr(this.$svg.querySelector(\".grid-background\"), { width: grid_width });\n    // rows\n    const rows = this.layers.grid.querySelectorAll('.grid-row');\n    rows.forEach(row => $.attr(row, { width: grid_width }));\n    // header\n    this.$header.style.width = grid_width + \"px\";\n  }\n\n  bind_events() {\n    this.bind_grid_scroll();\n\n    if (this.options.readonly) return\n    this.bind_grid_click();\n    this.bind_bar_create();\n    this.bind_bar_events();\n  }\n\n  render() {\n    this.clear();\n    this.setup_layers();\n    this.make_grid();\n    this.make_dates();\n    this.make_bars();\n    this.make_grid_extras();\n    this.make_arrows();\n    this.map_arrows_on_bars();\n    this.set_scroll_position(this.options.scroll_to);\n  }\n\n  setup_layers() {\n    this.layers = {};\n    const layers = [\"grid\", \"today\", \"arrow\", \"progress\", \"bar\"];\n    // make group layers\n    for (let layer of layers) {\n      this.layers[layer] = createSVG(\"g\", {\n        class: layer,\n        append_to: this.$svg,\n      });\n    }\n  }\n\n  make_grid() {\n    this.make_grid_background();\n    this.make_grid_rows();\n    this.make_grid_header();\n    this.make_grid_toolbar();\n  }\n\n  make_grid_extras() {\n    this.make_grid_highlights();\n    this.make_grid_ticks();\n  }\n\n  make_grid_background() {\n    const grid_width = this.dates.length * this.options.column_width;\n    const grid_height = (this.options.bar_height + this.options.padding) * this.tasks.length;\n\n    createSVG(\"rect\", {\n      x: 0,\n      y: 0,\n      width: grid_width,\n      height: grid_height,\n      class: \"grid-background\",\n      append_to: this.$svg,\n    });\n\n    const scroll_height = this.options.height ? this.options.height + 'px' : `calc(100% - ${this.options.header_height + 1}px`;\n    this.$container_main.style.height = scroll_height;\n    this.$container_main.style.width = '100%';\n    this.$container_main.style.overflow = 'auto';\n    this.$container_main.style.position = 'relative';\n    this.$container.style.overflow = 'hidden';\n\n    $.attr(this.$svg, {\n      height: grid_height,\n      width: grid_width,\n    });\n  }\n\n  make_grid_rows() {\n    const row_width = this.dates.length * this.options.column_width;\n    const row_height = this.options.bar_height + this.options.padding;\n\n    let row_y = 0;\n    const fragment = document.createDocumentFragment();\n    for (let _ of this.tasks) {\n      createSVG(\"rect\", {\n        x: 0,\n        y: row_y,\n        width: row_width,\n        height: row_height,\n        class: \"grid-row\",\n        append_to: fragment,\n      });\n      if (\n          this.options.lines === TICK_LINE.BOTH ||\n          this.options.lines === TICK_LINE.HORIZONTAL\n      ) {\n      }\n\n      row_y += this.options.bar_height + this.options.padding;\n    }\n\n    const $rows_layer = createSVG(\"g\", { class: \"rows_layer\",append_to: this.layers.grid });\n    $rows_layer.appendChild(fragment);\n  }\n\n  make_grid_header() {\n    let $header = document.createElement(\"div\");\n    $header.style.height = this.options.header_height + \"px\";\n    $header.style.width = this.dates.length * this.options.column_width + \"px\";\n    $header.classList.add('grid-header')\n    this.$header = $header\n\n    let $upper_header = document.createElement(\"div\");\n    $upper_header.classList.add('upper-header')\n    this.$upper_header = $upper_header\n    this.$header.appendChild($upper_header)\n\n    let $lower_header = document.createElement(\"div\");\n    $lower_header.classList.add('lower-header')\n    this.$lower_header = $lower_header\n    this.$header.appendChild($lower_header)\n\n    let $line_header = document.createElement('div');\n    $line_header.classList.add('line-header');\n    this.$line_header = $line_header;\n    this.$header.appendChild($line_header);\n\n    this.$container_header.appendChild(this.$header);\n  }\n\n  make_grid_toolbar() {\n    if (!this.options.view_mode_select && !this.options.today_button) return;\n\n    const $side_header = this.$container_toolbar;\n    const lang = getLang(this.options.language);\n\n    // Create view mode change select\n    if (this.options.view_mode_select) {\n\n      const $select = document.createElement(\"select\");\n      $select.classList.add('viewmode-select')\n\n      const modes = this.options.view_modes;\n      const modes_values = Object.values(VIEW_MODE);\n      const modes_keys = Object.keys(VIEW_MODE);\n      for (const key in modes) {\n        const $option = document.createElement(\"option\");\n        const val = modes[key];\n        const index = modes_values.findIndex(vm => vm === val);\n        const label = modes_keys[index];\n        $option.value = val;\n        $option.textContent = lang[label] || val;\n        $select.appendChild($option);\n      }\n      $select.value = this.options.view_mode\n      $select.addEventListener(\"change\", (function () {\n        this.change_view_mode($select.value)\n      }).bind(this));\n      $side_header.appendChild($select)\n    }\n\n    // Create today button\n    if (this.options.today_button) {\n      let $today_button = document.createElement('button')\n      $today_button.classList.add('today-button')\n      $today_button.textContent = lang.TODAY\n      $today_button.onclick = this.scroll_today.bind(this)\n      $side_header.appendChild($today_button)\n    }\n\n    // position\n    const top = Math.max(0, this.options.header_height - 50 - 5);\n    $side_header.style.top = top + 'px';\n  }\n\n  make_grid_ticks() {\n    if (!Object.values(TICK_LINE).includes(this.options.lines)) return;\n    this.redraw_row_line();\n\n    this.redraw_col_tick(this.dates);\n  }\n\n  redraw_row_line() {\n    let row_y = 0;\n    const row_width = this.dates.length * this.options.column_width;\n    const row_height = this.options.bar_height + this.options.padding;\n    const row_fragment = document.createDocumentFragment();\n    if (this.options.lines !== TICK_LINE.VERTICAL) {\n        for (let _ of this.tasks) {\n            createSVG('line', {\n                x1: 0,\n                y1: row_y + row_height,\n                x2: row_width,\n                y2: row_y + row_height,\n                class: 'row-line',\n                append_to: row_fragment,\n            });\n            row_y += row_height;\n        }\n    }\n    const $lines_layer = createSVG('g', {\n        class: 'lines_layer',\n        append_to: this.layers.grid,\n    });\n    $lines_layer.appendChild(row_fragment);\n  }\n\n  redraw_col_tick(dates) {\n    if (this.options.lines === TICK_LINE.HORIZONTAL) return;\n\n    let tick_x = 0;\n    let tick_y = 0;\n    const data_height =\n        (this.options.bar_height + this.options.padding) * this.tasks.length;\n    const tick_height = Math.max(5000, data_height);\n\n    const tick_fragment = document.createDocumentFragment();\n    for (let date of dates) {\n      let tick_class = \"tick\";\n      if (this.get_thick_mode(date)) {\n        tick_class += ' thick';\n      }\n\n      createSVG(\"path\", {\n        d: `M ${tick_x} ${tick_y} v ${tick_height}`,\n        class: tick_class,\n        append_to: tick_fragment,\n      });\n\n      if (this.view_is(VIEW_MODE.MONTH)) {\n        tick_x +=\n          (date_utils.get_days_in_month(date) * this.options.column_width) / 30;\n      } else {\n        tick_x += this.options.column_width;\n      }\n    }\n    this.layers.grid.appendChild(tick_fragment);\n  }\n\n  get_thick_mode(date) {\n    let thick = false;\n    // thick tick for monday\n    if (this.view_is(VIEW_MODE.DAY) && date.getDate() === 1) {\n      thick = true;\n    }\n    // thick tick for first week\n    if (\n      this.view_is(VIEW_MODE.WEEK) &&\n      date.getDate() >= 1 &&\n      date.getDate() < 8\n    ) {\n      thick = true;\n    }\n    // thick ticks for quarters\n    if (this.view_is(VIEW_MODE.MONTH) && date.getMonth() % 3 === 0) {\n      thick = true;\n    }\n    // thick ticks for quarter_year\n    if (this.view_is(VIEW_MODE.QUARTER_YEAR) && date.getMonth() === 0) {\n      thick = true;\n    }\n    // thick ticks for year\n    if (this.view_is(VIEW_MODE.YEAR)) {\n      thick = true;\n    }\n    return thick;\n  }\n\n  highlightWeekends() {\n    if (!this.options.highlight_weekend) return;\n    if (!this.view_is('Day') && !this.view_is('Half Day')) return;\n    const weekends_fragment = this.getHighlightWeekends_fragment(this.gantt_start, this.gantt_end);\n    this.layers.grid.appendChild(weekends_fragment);\n  }\n\n  getHighlightWeekends_fragment(start, end) {\n    const weekends_fragment = document.createDocumentFragment();\n    for (let d = new Date(start); d <= end; d.setDate(d.getDate() + 1)) {\n      if (d.getDay() === 0 || d.getDay() === 6) {\n        const x = (date_utils.diff(d, this.gantt_start, 'hour') /\n          this.options.step) *\n          this.options.column_width;\n        createSVG('rect', {\n          x,\n          y: 0,\n          width: (this.view_is('Day') ? 1 : 2) * this.options.column_width,\n          height: '100%',\n          class: 'holiday-highlight',\n          append_to: weekends_fragment,\n        });\n      }\n    }\n    return weekends_fragment;\n  }\n\n  //compute the horizontal x distance\n  computeGridHighlightDimensions(view_mode) {\n    const today = date_utils.today();\n    let x = view_mode === VIEW_MODE.DAY ? this.options.column_width / 2 : 0;\n\n    return {\n      x: x +\n        (date_utils.diff(today, this.gantt_start, \"hour\") / this.options.step) *\n        this.options.column_width,\n      date: today\n    }\n  }\n\n  make_grid_highlights() {\n    this.highlightWeekends()\n    this.highlightToday();\n  }\n\n  highlightToday() {\n    // highlight today's | week's | month's | quarter_year's | year's\n    if (\n      this.view_is(VIEW_MODE.DAY) ||\n      this.view_is(VIEW_MODE.WEEK) ||\n      this.view_is(VIEW_MODE.MONTH) ||\n      this.view_is(VIEW_MODE.QUARTER_YEAR) ||\n      this.view_is(VIEW_MODE.YEAR)\n    ) {\n      // Used as we must find the _end_ of session if view is not Day\n\n      const { x: left, date } = this.computeGridHighlightDimensions(this.options.view_mode);\n\n      const el = this.layers.today.querySelector(\".today-date-line\");\n\n    const data_height =\n        (this.options.bar_height + this.options.padding) * this.tasks.length;\n    const path_height = Math.max(5000, data_height);\n      if (el) {\n        $.attr(el, { d: `M ${left} 0 v ${path_height}` });\n      } else {\n        createSVG('path', {\n          d: `M ${left} 0 v ${path_height}`,\n          class: 'today-date-line',\n          append_to: this.layers.today,\n        });\n      }\n\n      const $today = document.getElementById(date_utils.format(date).replaceAll(' ', '_'))\n      if ($today) {\n        $today.classList.add('today-date-highlight')\n        $today.style.top = +$today.style.top.slice(0, -2) - 4 + 'px'\n        $today.style.left = +$today.style.left.slice(0, -2) - 8 + 'px'\n      }\n    }\n  }\n\n  create_el({ left, top, width, height, id, classes, append_to }) {\n    let $el = document.createElement(\"div\");\n    $el.classList.add(classes)\n    $el.style.top = top + 'px'\n    $el.style.left = left + 'px'\n    if (id) $el.id = id\n    if (width) $el.style.width = width + 'px'\n    if (height) $el.style.height = height + 'px'\n    append_to.appendChild($el)\n    return $el\n  }\n\n  make_dates() {\n    this.upper_texts_x = {}\n    this.get_dates_to_draw(this.dates, null).forEach((date, i) => {\n      this.draw_date(date, i);\n    })\n  }\n\n  get_dates_to_draw(dates, last) {\n    let last_date = last;\n    return dates.map((date, i) => {\n      const d = this.get_date_info(date, last_date, i);\n      last_date = d;\n      return d;\n    });\n  }\n\n  get_date_info(date, last_date_info) {\n    let last_date = last_date_info ? last_date_info.date : date_utils.add(date, 1, \"day\")\n    const date_text = {\n      Hour_lower: date_utils.format(date, \"HH\", this.options.language),\n      \"Quarter Day_lower\": date_utils.format(date, \"HH\", this.options.language),\n      \"Half Day_lower\": date_utils.format(date, \"HH\", this.options.language),\n      Day_lower:\n        date.getDate() !== last_date.getDate()\n          ? date_utils.format(date, \"D\", this.options.language)\n          : \"\",\n      Week_lower:\n        date.getMonth() !== last_date.getMonth()\n          ? date_utils.format(date, \"D MMM\", this.options.language)\n          : date_utils.format(date, \"D\", this.options.language),\n      Month_lower: date_utils.format(date, \"M月\", this.options.language),\n      \"Quarter Year_lower\":\n        !last_date_info || date.getMonth() !== last_date.getMonth()\n          ? \"Q\" + date_utils.format(date, \"Q\", this.options.language)\n          : \"\",\n      Year_lower: date_utils.format(date, \"YYYY年\", this.options.language),\n      Hour_upper:\n        date.getDate() !== last_date.getDate()\n          ? date_utils.format(date, \"D MMMM\", this.options.language)\n          : \"\",\n      \"Quarter Day_upper\":\n        date.getDate() !== last_date.getDate()\n          ? date_utils.format(date, \"D MMM\", this.options.language)\n          : \"\",\n      \"Half Day_upper\":\n        date.getDate() !== last_date.getDate()\n          ? date_utils.format(date, \"D MMM\", this.options.language)\n          : \"\",\n      Day_upper:\n        !last_date_info || date.getMonth() !== last_date.getMonth()\n          ? date_utils.format(date, \"YYYY年MM月\", this.options.language)\n          : \"\",\n      Week_upper:\n        !last_date_info || date.getMonth() !== last_date.getMonth()\n          ? date_utils.format(date, \"YYYY年MM月\", this.options.language)\n          : \"\",\n      Month_upper:\n        !last_date_info || date.getFullYear() !== last_date.getFullYear()\n          ? date_utils.format(date, \"YYYY年\", this.options.language)\n          : \"\",\n      \"Quarter Year_upper\":\n        !last_date_info || date.getFullYear() !== last_date.getFullYear()\n          ? date_utils.format(date, \"YYYY年\", this.options.language)\n          : \"\",\n      Year_upper: \"\"\n        // !last_date_info || date.getFullYear() !== last_date.getFullYear()\n        //   ? date_utils.format(date, \"YYYY年\", this.options.language)\n        //   : \"\",\n    };\n\n    // special Month scale\n    let column_width = this.view_is(VIEW_MODE.MONTH) ? (date_utils.get_days_in_month(date) * this.options.column_width) / 30 : this.options.column_width;\n\n    const base_pos = {\n      x: last_date_info\n        ? last_date_info.base_pos_x + last_date_info.column_width\n        : 0,\n      lower_y: this.options.header_height - 20,\n      upper_y: Math.max(6, this.options.header_height - 50),\n    };\n\n    const base_tick = {\n      line: this.get_thick_mode(date),\n    };\n\n    // starting_point upper:center-or-start lower:center\n    const x_pos = {\n      Hour_lower: column_width / 2,\n      Hour_upper: column_width * 24 / 2,\n      \"Quarter Day_lower\": column_width / 2,\n      \"Quarter Day_upper\": column_width * 4 / 2,\n      \"Half Day_lower\": column_width / 2,\n      \"Half Day_upper\": column_width * 2 / 2,\n      Day_lower: column_width / 2,\n      Day_upper: column_width / 2,\n      Week_lower: column_width / 2,\n      // Week_upper: (column_width * 4) / 2,\n      Week_upper: 19,\n      Month_lower: column_width / 2,\n      // Month_upper: column_width / 2,\n      Month_upper: 19,\n      \"Quarter Year_lower\": column_width / 2,\n      \"Quarter Year_upper\": (column_width * 4) / 2,\n      Year_lower: column_width / 2,\n      Year_upper: 19,\n    };\n    return {\n      date,\n      formatted_date: date_utils.format(date).replaceAll(' ', '_'),\n      column_width,\n      base_pos_x: base_pos.x,\n      upper_text: this.options.upper_text ? this.options.upper_text(date, this.options.view_mode, date_text[`${this.options.view_mode}_upper`]) : date_text[`${this.options.view_mode}_upper`],\n      lower_text: this.options.lower_text ? this.options.lower_text(date, this.options.view_mode, date_text[`${this.options.view_mode}_lower`]) : date_text[`${this.options.view_mode}_lower`],\n      upper_x: base_pos.x + x_pos[`${this.options.view_mode}_upper`],\n      upper_y: base_pos.upper_y,\n      lower_x: base_pos.x + x_pos[`${this.options.view_mode}_lower`],\n      lower_y: base_pos.lower_y,\n      tick_line: base_tick.line,\n    };\n  }\n\n  draw_date(date, i) {\n    let $lower_text = this.create_el({\n      left: date.lower_x,\n      top: date.lower_y,\n      id: date.formatted_date,\n      classes: 'lower-text',\n      append_to: this.$lower_header\n    })\n    $lower_text.innerText = date.lower_text;\n    $lower_text.style.left = +$lower_text.style.left.slice(0, -2) - $lower_text.clientWidth / 2 + 'px';\n\n    if (date.upper_text) {\n      this.upper_texts_x[date.upper_text] = date.upper_x;\n      let $upper_text = this.create_el({\n          left: date.upper_x,\n          top: date.upper_y,\n          classes: 'upper-text',\n          append_to: this.$upper_header,\n      });\n      $upper_text.innerText = date.upper_text;\n    }\n\n    if (date.tick_line) {\n      this.create_el({\n          left: date.base_pos_x - 1,\n          top: date.lower_y,\n          width: 2,\n          height: this.options.header_height - 20,\n          classes: 'tick-line',\n          append_to: this.$line_header,\n      });\n    }\n  }\n\n  make_bars() {\n    const bar_fragment = document.createDocumentFragment();\n    this.bars = this.tasks.map((task) => {\n      const bar = new Bar(this, task);\n      bar_fragment.appendChild(bar.group);\n      return bar;\n    });\n    this.layers.bar.appendChild(bar_fragment);\n  }\n\n  make_arrows() {\n    this.arrows = [];\n    if (!this.options.dependencies) return;\n    const arrow_fragment = document.createDocumentFragment();\n    for (let task of this.tasks) {\n      let arrows = [];\n      arrows = task.dependencies\n        .map((task_id) => {\n          const dependency = this.get_task(task_id);\n          if (!dependency) return;\n          const arrow = new Arrow(\n            this,\n            this.bars[dependency._index], // from_task\n            this.bars[task._index], // to_task\n          );\n          arrow_fragment.appendChild(arrow.element);\n          return arrow;\n        })\n        .filter(Boolean); // filter falsy values\n      this.arrows = this.arrows.concat(arrows);\n    }\n    this.layers.arrow.appendChild(arrow_fragment);\n  }\n\n  map_arrows_on_bars() {\n    for (let bar of this.bars) {\n      bar.arrows = this.arrows.filter((arrow) => {\n        return (\n          arrow.from_task.task.id === bar.task.id ||\n          arrow.to_task.task.id === bar.task.id\n        );\n      });\n    }\n  }\n\n  set_scroll_position(date) {\n    if (!date || date === 'start') {\n      date = this.gantt_start\n    } else if (date === 'today') {\n      return this.scroll_today()\n    } else if (typeof date === 'string') {\n      date = date_utils.parse(date)\n    }\n\n    const parent_element = this.$svg.parentElement;\n    if (!parent_element) return;\n\n    const hours_before_first_task = date_utils.diff(\n      date,\n      this.gantt_start,\n      \"hour\",\n    );\n    // 1/3 padding\n    const sharing = parent_element.clientWidth / 3;\n    const space = sharing / this.options.column_width * this.options.step;\n    const distance = hours_before_first_task - space;\n\n    // position\n    const scroll_pos = (distance / this.options.step) * this.options.column_width;\n    // smooth、auto\n    parent_element.scrollTo({ left: scroll_pos, behavior: 'auto' })\n  }\n\n  scroll_today() {\n    this.set_scroll_position(new Date().setHours(0, 0, 0, 0))\n  }\n\n  bind_grid_scroll() {\n    const grid_width = this.dates.length * this.options.column_width;\n\n    // onmousewheel\n    $.on(\n      this.$container_header,\n      'wheel',\n      (event) => {\n        if (event.shiftKey || event.deltaX) {\n          const scrollMove = event.deltaX ? event.deltaX : event.deltaY;\n          const scrollX = this.$container_main.scrollLeft || 0;\n          let newScrollX = scrollX + scrollMove;\n          if (newScrollX < 0) {\n            newScrollX = 0;\n          } else if (newScrollX > grid_width) {\n            newScrollX = grid_width;\n          }\n          this.$container_main.scrollLeft = newScrollX;\n          event.preventDefault();\n        }\n      }\n    );\n\n    $.on(this.$container_main,\n      'scroll',\n      $.throttle(20, () => {\n        const scrollLeft = this.$container_main.scrollLeft;\n        this.$container_header.scrollLeft = scrollLeft;\n      }),\n    );\n  }\n\n  bind_grid_click() {\n    $.on(\n      this.$container,\n      this.options.popup_trigger,\n      () => {\n        this.unselect_all();\n        this.hide_popup();\n      },\n    );\n  }\n\n  bind_bar_create() {\n    let x_on_start = 0;\n    let y_on_start = 0;\n    let matched_task = null;\n    let is_creating = null;\n    let holder = null;\n    this.bar_being_created = null;\n\n    const radius = this.options.bar_corner_radius;\n    const bar_height = this.options.bar_height;\n    const row_height = bar_height + this.options.padding;\n\n    $.on(this.$svg, \"mousedown\", (e) => {\n      // location\n      const index = parseInt(e.offsetY / row_height);\n      matched_task = this.tasks[index];\n      // only empty date\n      if (!matched_task || (matched_task && matched_task.empty !== true)) return;\n      this.bar_being_created = matched_task.id;\n      // start record\n      is_creating = true;\n      x_on_start = e.offsetX;\n      [, y_on_start] = this.get_snap_coord(e.offsetX, e.offsetY);\n      // const date = this.get_snap_date(x_on_start);\n    });\n\n    $.on(this.$svg, \"mousemove\", (e) => {\n      if (!is_creating) return;\n      let dx = e.offsetX - x_on_start;\n\n      // limit block\n      // const width = this.get_snap_position(Math.abs(dx));\n      // free distance\n      const width = Math.abs(dx);\n      // create rect\n      if (!holder) {\n        holder = createSVG('rect', {\n          x: x_on_start,\n          y: y_on_start,\n          width: 0,\n          height: bar_height,\n          rx: radius,\n          ry: radius,\n          class: 'bar-inner',\n          'data-id': matched_task.id,\n          append_to: this.layers.progress,\n        });\n      }\n      // move-right\n      let x = x_on_start;\n      if (dx < 0) {\n        // move-left\n        x = x_on_start - width;\n      }\n      holder.setAttribute('x', x);\n      holder.setAttribute('width', width);\n    });\n\n    $.on(this.$svg, \"mouseup\", () => {\n      this.bar_being_created = null;\n      if (holder) {\n        const start_x = holder.getX();\n        const end_x = holder.getX() + holder.getBBox().width;\n        const date_start = this.get_snap_date(start_x);\n        const date_end = this.get_snap_date(end_x);\n\n        const update_task = Object.assign(matched_task, {\n            start: date_start,\n            _start: date_start,\n            end: date_end,\n            _end: date_end,\n            empty: false,\n            invalid: false,\n        });\n        this.replace(update_task, matched_task);\n\n        // remove holder dom\n        this.layers.progress.removeChild(holder);\n        // trigger event\n        this.trigger_event('date_change', [matched_task, date_start, date_end]);\n      }\n      holder = null;\n    });\n\n    document.addEventListener(\"mouseup\", () => {\n      is_creating = false;\n    });\n  }\n\n  bind_bar_events() {\n    let is_dragging = false;\n    let x_on_start = 0;\n    let x_on_scroll_start = 0;\n    let y_on_start = 0;\n    let is_resizing_left = false;\n    let is_resizing_right = false;\n    let parent_bar_id = null;\n    let bars = []; // instanceof Bar\n    this.bar_being_dragged = null;\n\n    function action_in_progress() {\n      return is_dragging || is_resizing_left || is_resizing_right;\n    }\n\n    $.on(this.$svg, \"mousedown\", \".bar-wrapper, .handle\", (e, element) => {\n      const bar_wrapper = $.closest(\".bar-wrapper\", element);\n      bars.forEach((bar) => bar.group.classList.remove(\"active\"));\n\n      if (element.classList.contains(\"left\")) {\n        is_resizing_left = true;\n      } else if (element.classList.contains(\"right\")) {\n        is_resizing_right = true;\n      } else if (element.classList.contains(\"bar-wrapper\")) {\n        is_dragging = true;\n      }\n\n      bar_wrapper.classList.add(\"active\");\n      this.hide_popup();\n\n      x_on_start = e.offsetX;\n      y_on_start = e.offsetY;\n\n      parent_bar_id = bar_wrapper.getAttribute(\"data-id\");\n      const ids = [\n        parent_bar_id\n      ];\n      // drag sync children\n      if (this.options.drag_sync_child) {\n        ids.push(...this.get_all_dependent_tasks(parent_bar_id));\n      }\n      bars = ids.map((id) => this.get_bar(id));\n\n      this.bar_being_dragged = parent_bar_id;\n\n      bars.forEach((bar) => {\n        if (bar.empty) return;\n        const $bar = bar.$bar;\n        $bar.ox = $bar.getX();\n        $bar.oy = $bar.getY();\n        $bar.owidth = $bar.getWidth();\n        $bar.finaldx = 0;\n      });\n    });\n\n    const handle_width = this.options.handle_width;\n    $.on(this.$svg, \"mousemove\", (e) => {\n      if (!action_in_progress()) return;\n      const dx = e.offsetX - x_on_start;\n      const dy = e.offsetY - y_on_start;\n\n      bars.forEach((bar) => {\n        if (bar.empty) return;\n        const $bar = bar.$bar;\n        // limit-block\n        // $bar.finaldx = this.get_snap_position(dx);\n        // free-distance\n        $bar.finaldx = dx;\n        this.hide_popup();\n        if (is_resizing_left) {\n          // 左不能大于右\n          if ($bar.finaldx - $bar.owidth + handle_width >= 0) return;\n          if (parent_bar_id === bar.task.id) {\n            bar.update_bar_position({\n              x: $bar.ox + $bar.finaldx,\n              width: $bar.owidth - $bar.finaldx,\n            });\n          } else {\n            bar.update_bar_position({\n              x: $bar.ox + $bar.finaldx,\n            });\n          }\n        } else if (is_resizing_right) {\n          // 右不能小于左\n          if ($bar.finaldx + $bar.owidth < handle_width) return;\n          if (parent_bar_id === bar.task.id) {\n            bar.update_bar_position({\n              width: $bar.owidth + $bar.finaldx,\n            });\n          }\n        } else if (is_dragging && !this.options.readonly) {\n          bar.update_bar_position({ x: $bar.ox + $bar.finaldx });\n        }\n\n        // show drag_backdrop\n        if (parent_bar_id === bar.task.id) {\n          let x = 0;\n          const scrollLeft = this.$container_main.scrollLeft;\n          if (is_resizing_right) {\n            x = $bar.ox - scrollLeft;\n          } else {\n            x = $bar.ox + $bar.finaldx - scrollLeft;\n          }\n          this.show_backdrop({\n              x: x,\n              width: $bar.getWidth(),\n              bar,\n          });\n        }\n      });\n    });\n\n    $.on(this.$svg, \"mouseup\", () => {\n      this.bar_being_dragged = null;\n      this.hide_backdrop();\n      bars.forEach((bar) => {\n        if (bar.empty) return;\n        const $bar = bar.$bar;\n        if (!$bar.finaldx) return;\n        $bar.finaldx = 0;\n        bar.date_changed();\n        bar.set_action_completed();\n      });\n    });\n\n    document.addEventListener(\"mouseup\", () => {\n      is_dragging = false;\n      is_resizing_left = false;\n      is_resizing_right = false;\n    });\n\n    $.on(this.$container_main, 'scroll', e => {\n      let elements = document.querySelectorAll('.bar-wrapper');\n      let localBars = [];\n      const ids = [];\n      let dx;\n      if (x_on_scroll_start) {\n        dx = e.currentTarget.scrollLeft - x_on_scroll_start;\n      }\n\n      const daysSinceStart = e.currentTarget.scrollLeft / this.options.column_width * this.options.step / 24;\n      let format_str = \"D MMM\"\n      if ([VIEW_MODE.YEAR, VIEW_MODE.QUARTER_YEAR, VIEW_MODE.MONTH].includes(this.options.view_mode)) format_str = 'YYYY年'\n      else if ([VIEW_MODE.DAY, VIEW_MODE.WEEK].includes(this.options.view_mode)) format_str = 'YYYY年MM月'\n      else if (this.view_is(VIEW_MODE.HALF_DAY)) format_str = 'D MMM';\n      else if (this.view_is(VIEW_MODE.HOUR)) format_str = 'D MMMM';\n\n      // language\n      const currentUpper = date_utils.format(\n        date_utils.add(this.gantt_start, daysSinceStart, 'day'),\n        format_str,\n        this.options.language\n      );\n      const upperTexts = Array.from(document.querySelectorAll('.upper-text'));\n      const $el = upperTexts.find(el => el.textContent === currentUpper)\n      if ($el && !$el.classList.contains('current-upper')) {\n        const $current = document.querySelector('.current-upper')\n        if ($current) {\n          $current.classList.remove('current-upper')\n          $current.style.left = this.upper_texts_x[$current.textContent] + 'px';\n        }\n\n        $el.classList.add('current-upper')\n        // 38/2 - 8 first-point\n        $el.style.left = '11px';\n      }\n\n      Array.prototype.forEach.call(elements, function (el, i) {\n        ids.push(el.getAttribute('data-id'));\n      });\n\n      if (dx) {\n        localBars = ids.map(id => this.get_bar(id));\n        if (this.options.auto_move_label) {\n          localBars.forEach(bar => {\n            bar.update_label_position_on_horizontal_scroll({ x: dx, sx: e.currentTarget.scrollLeft });\n          });\n        }\n      }\n\n      x_on_scroll_start = e.currentTarget.scrollLeft;\n\n      this.trigger_event('scroll', [e]);\n    });\n\n    if (this.options.drag_bar_progress) {\n      this.bind_bar_progress();\n    }\n  }\n\n  bind_bar_progress() {\n    let x_on_start = 0;\n    let y_on_start = 0;\n    let is_resizing = null;\n    let bar = null;\n    let $bar_progress = null;\n    let $bar = null;\n\n    $.on(this.$svg, \"mousedown\", \".handle.progress\", (e, handle) => {\n      is_resizing = true;\n      x_on_start = e.offsetX;\n      y_on_start = e.offsetY;\n\n      const $bar_wrapper = $.closest(\".bar-wrapper\", handle);\n      const id = $bar_wrapper.getAttribute(\"data-id\");\n      bar = this.get_bar(id);\n\n      $bar_progress = bar.$bar_progress;\n      $bar = bar.$bar;\n\n      $bar_progress.finaldx = 0;\n      $bar_progress.owidth = $bar_progress.getWidth();\n      $bar_progress.min_dx = -$bar_progress.getWidth();\n      $bar_progress.max_dx = $bar.getWidth() - $bar_progress.getWidth();\n    });\n\n    $.on(this.$svg, \"mousemove\", (e) => {\n      if (!is_resizing) return;\n      let dx = e.offsetX - x_on_start;\n      let dy = e.offsetY - y_on_start;\n\n      if (dx > $bar_progress.max_dx) {\n        dx = $bar_progress.max_dx;\n      }\n      if (dx < $bar_progress.min_dx) {\n        dx = $bar_progress.min_dx;\n      }\n\n      const $handle = bar.$handle_progress;\n      $.attr($bar_progress, \"width\", $bar_progress.owidth + dx);\n      $.attr($handle, \"points\", bar.get_progress_polygon_points());\n      $bar_progress.finaldx = dx;\n    });\n\n    $.on(this.$svg, \"mouseup\", () => {\n      is_resizing = false;\n      if (!($bar_progress && $bar_progress.finaldx)) return;\n\n      $bar_progress.finaldx = 0;\n      bar.progress_changed();\n      bar.set_action_completed();\n      bar = null;\n      $bar_progress = null;\n      $bar = null;\n    });\n  }\n\n  get_all_dependent_tasks(task_id) {\n    let out = [];\n    let to_process = [task_id];\n    while (to_process.length) {\n      const deps = to_process.reduce((acc, curr) => {\n        acc = acc.concat(this.dependency_map[curr]);\n        return acc;\n      }, []);\n\n      out = out.concat(deps);\n      to_process = deps.filter((d) => !to_process.includes(d));\n    }\n\n    return out.filter(Boolean);\n  }\n\n  get_snap_position(dx) {\n    let odx = dx,\n      rem,\n      position;\n\n    if (this.view_is(VIEW_MODE.WEEK)) {\n      rem = dx % (this.options.column_width / 7);\n      position =\n        odx -\n        rem +\n        (rem < this.options.column_width / 14\n          ? 0\n          : this.options.column_width / 7);\n    } else if (this.view_is(VIEW_MODE.MONTH)) {\n      rem = dx % (this.options.column_width / 30);\n      position =\n        odx -\n        rem +\n        (rem < this.options.column_width / 60\n          ? 0\n          : this.options.column_width / 30);\n    } else if (this.view_is(VIEW_MODE.YEAR)) {\n      rem = dx % (this.options.column_width / 365);\n      position =\n        odx -\n        rem +\n        (rem < this.options.column_width / 120\n          ? 0\n          : this.options.column_width / 365);\n    } else {\n      rem = dx % this.options.column_width;\n      position =\n        odx -\n        rem +\n        (rem < this.options.column_width / 2 ? 0 : this.options.column_width);\n    }\n    return position;\n  }\n\n  get_snap_coord(ox, oy) {\n    let start_x = ox;\n    // 网格区\n    if (\n      this.view_is(VIEW_MODE.HOUR) ||\n      this.view_is(VIEW_MODE.HALF_DAY) ||\n      this.view_is(VIEW_MODE.QUARTER_DAY) ||\n      this.view_is(VIEW_MODE.DAY)\n    ) {\n      start_x = parseInt(ox / this.options.column_width) * this.options.column_width;\n    }\n\n    const padding = this.options.padding / 2;\n    const header_height = 0;\n    const row_height = this.options.bar_height + this.options.padding;\n\n    const mod = parseInt((oy - header_height) / row_height);\n    const start_y = header_height + mod * row_height + padding;\n\n    return [start_x, start_y];\n  }\n\n  get_snap_date(x) {\n    const x_in_units = x / this.options.column_width;\n    return date_utils.add(\n      this.gantt_start,\n      x_in_units * this.options.step,\n      \"hour\",\n    );\n  }\n\n  unselect_all() {\n    [...this.$svg.querySelectorAll(\".bar-wrapper\")].forEach((el) => {\n      el.classList.remove(\"active\");\n    });\n  }\n\n  view_is(modes) {\n    if (typeof modes === \"string\") {\n      return this.options.view_mode === modes;\n    }\n\n    if (Array.isArray(modes)) {\n      return modes.some((mode) => this.options.view_mode === mode);\n    }\n\n    return false;\n  }\n\n  get_task(id) {\n    return this.tasks.find((task) => {\n      return task.id === id;\n    });\n  }\n\n  get_bar(id) {\n    return this.bars.find((bar) => {\n      return bar.task.id === id;\n    });\n  }\n\n  show_backdrop({ x, width, bar }) {\n    if (!this.backdrop) {\n      this.backdrop = new Backdrop(this.$drag_backdrop);\n    }\n\n    const { new_start_date, new_end_date } = bar.compute_start_end_date();\n\n    let symbol = 'MM-DD';\n    // different years\n    if (date_utils.format(new_start_date, 'YYYY') !== date_utils.format(new_end_date, 'YYYY')) {\n      symbol = 'YYYY-MM-DD';\n    }\n\n    const date_start = date_utils.format(new_start_date, symbol);\n    const date_end = date_utils.format(new_end_date, symbol);\n    this.backdrop.showAt({ x, width, range: [date_start, date_end] });\n  }\n\n  hide_backdrop() {\n    this.backdrop && this.backdrop.hide();\n  };\n\n  show_popup(options) {\n    if (this.options.popup === false) return\n    if (!this.popup) {\n      this.popup = new Popup(\n        this,\n        this.$popup_wrapper,\n      );\n    }\n    this.popup.show(options);\n  }\n\n  hide_popup() {\n    this.popup && this.popup.hide();\n  }\n\n  trigger_event(event, args) {\n    if (this.options[\"on_\" + event]) {\n      this.options[\"on_\" + event].apply(null, args);\n    }\n  }\n\n  clear() {\n    this.$svg.innerHTML = \"\";\n    this.$container_toolbar.innerHTML = \"\";\n    this.$header?.remove?.()\n    this.hide_popup();\n  }\n}\n\nGantt.VIEW_MODE = VIEW_MODE;\n\nfunction generate_id(task) {\n  return task.name + \"_\" + Math.random().toString(36).slice(2, 12);\n}\n"],"names":["YEAR","MONTH","DAY","HOUR","MINUTE","SECOND","MILLISECOND","SHORTENED","January","February","March","April","May","June","July","August","September","October","November","December","date_utils","parse_duration","duration","matches","exec","parseInt","scale","parse","date","date_separator","time_separator","Date","date_parts","time_parts","parts","split","map","val","vals","length","parseFloat","concat","to_string","with_time","TypeError","this","get_date_values","i","padStart","date_string","time_string","format","format_string","lang","month_name","Intl","DateTimeFormat","month","month_name_capitalized","charAt","toUpperCase","slice","values","format_map","YYYY","MM","DD","HH","mm","ss","M","D","h","m","s","SSS","Q","MMMM","MMM","str","formatted_values","Object","keys","sort","a","b","forEach","key","includes","replaceAll","push","value","diff","date_a","date_b","milliseconds","seconds","hours","minutes","days","months","years","endsWith","Math","floor","today","now","add","qty","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","getMilliseconds","start_of","scores","should_reset","_scale","clone","get_days_in_month","no_of_days","year","targetLength","padString","String","repeat","$","expr","con","document","querySelector","createSVG","tag","attrs","elem","createElementNS","attr","append_to","appendChild","innerHTML","setAttribute","animateSVG","svgElement","from","to","animatedSvgElement","dur","begin","animEl","attributeName","animateElement","calcMode","keyTimes","keySplines","cubic_bezier","getAnimationElement","event","createEvent","initEvent","eventName","dispatchEvent","name","ease","linear","on","element","selector","callback","delegate","bind","off","handler","removeEventListener","addEventListener","e","delegatedTarget","target","closest","call","parentNode","getAttribute","throttle","delay","noTrailing","debounceMode","timeoutID","lastExec","undefined","self","elapsed","Number","args","arguments","apply","clear","clearTimeout","setTimeout","LAN_ZH","QUARTER_DAY","HALF_DAY","WEEK","QUARTER_YEAR","TODAY","LAN_EN","Bar","constructor","gantt","task","set_defaults","prepare","draw","action_completed","prepare_doms","prepare_values","prepare_helpers","group","class","custom_class","important","id","bar_group","handle_group","empty","invalid","height","options","bar_height","image_size","compute_x","compute_y","compute_duration","corner_radius","bar_corner_radius","width","column_width","progress_width","progress","SVGElement","prototype","getX","getY","getWidth","getHeight","getEndX","prepare_expected_progress_values","compute_expected_progress","expected_progress_width","expected_progress","update_bar_vertical","offset","Array","children","el","y","thumbnail","$thumbnail","arr","$handle","$handle_progress","get_progress_polygon_points","draw_bar","draw_progress_bar","show_expected_progress","draw_expected_progress_bar","draw_label","draw_resize_handles","draw_thumbnail","$bar","x","rx","ry","classList","$expected_bar_progress","$bar_progress","x_coord","requestAnimationFrame","update_label_position","defs","clipPath","href","readonly","bar","handle_width","gw","drag_bar_progress","points","join","bar_progress","icon_width","icon_height","setup_click_event","timeout","clickTimeout","trigger_event","screenX","screenY","scrollLeft","$container_main","show_popup","offsetX","hide_popup","clickCount","bar_being_dragged","subtitle","_start","language","_end","target_element","title","update_bar_task","label","update_bar_position","drag_limit_child","dependencies","dep","get_bar","reduce","_","curr","console","log","update_attr","$date_highlight","style","left","update_handle_position","date_changed","update_expected_progressbar_position","update_progressbar_position","update_arrow_position","update_label_position_on_horizontal_scroll","sx","container","img","img_mask","barWidthLimit","newLabelX","newImgX","imgWidth","getBBox","labelEndX","viewportCentral","clientWidth","contains","changed","new_start_date","new_end_date","compute_start_end_date","remove","gantt_start","gantt_end","progress_changed","new_progress","compute_progress","set_action_completed","x_in_units","step","width_in_units","task_start","view_is","padding","_index","get_snap_position","dx","rem","position","odx","isNaN","x_offset_label_img","labelWidth","barWidth","handle","arrows","arrow","update","Arrow","from_task","to_task","calculate_path","drawInner","rowHeight","taskHeight","arrowCurve","arrow_curve","taskFrom","taskTo","taskFromX2","taskFromY1","taskToX1","taskToEndPosition","taskFromEndPosition","arrowIndent","path","trianglePoints","svgPath","d","fill","svgPolygon","Popup","parent","custom_html","popup","make","hide","pointer","show","Error","html","position_meta","HTMLElement","getBoundingClientRect","parentWidth","parentHeight","clientHeight","ganttOptions","ganttWidth","$container","ganttHeight","dy","scrollTop","pos_x","pos_y","header_height","top","display","Backdrop","drag_mask","date_range","showAt","range","htmlHold","VIEW_MODE","VIEW_MODE_PADDING","TICK_LINE","BOTH","HORIZONTAL","VERTICAL","DEFAULT_OPTIONS","view_modes","view_mode","date_format","popup_trigger","drag_sync_child","highlight_weekend","scroll_to","lines","auto_move_label","today_button","view_mode_select","Gantt","wrapper","tasks","setup_wrapper","setup_options","setup_tasks","change_view_mode","bind_events","svg_element","wrapper_element","$svg","createElement","$container_header","parentElement","$container_toolbar","$popup_wrapper","$drag_backdrop","view_mode_padding","entries","format_task","setup_dependencies","dependency_map","t","format_dependency","start","end","tmpDuration","every","deps","trim","filter","random","toString","generate_id","refresh","original","get_task","current","result","update_task","replace","splice","start_date","end_date","index","tid","findIndex","item","row_height","remove_bar","bars","layers","removeChild","rows","grid","lastChild","make_arrows","map_arrows_on_bars","grid_height","insert","insert_task","insert_bar","target_bar","insertBefore","row_width","dates","insert_y","$grid_el","x1","y1","x2","y2","prev_task","update_bar","old_bar","target_postion","mode","update_view_scale","setup_dates","render","setup_gantt_dates","setup_date_values","get_gantt_dates","viewKey","padding_start","padding_end","setHours","setMonth","cur_date","redraw","redraw_left","redraw_layout","get_redraw_dates","get_dates_to_draw","draw_date","gantt_prev_start","weekends_fragment","getHighlightWeekends_fragment","redraw_col_tick","start_arrs","start_temp","redraw_right","end_arrs","end_temp","unshift","new_limit_end","grid_width","querySelectorAll","row","$header","bind_grid_scroll","bind_grid_click","bind_bar_create","bind_bar_events","setup_layers","make_grid","make_dates","make_bars","make_grid_extras","set_scroll_position","layer","make_grid_background","make_grid_rows","make_grid_header","make_grid_toolbar","make_grid_highlights","make_grid_ticks","scroll_height","overflow","row_y","fragment","createDocumentFragment","$upper_header","$lower_header","$line_header","$side_header","$select","modes","modes_values","modes_keys","$option","vm","textContent","$today_button","onclick","scroll_today","max","redraw_row_line","row_fragment","tick_x","data_height","tick_height","tick_fragment","tick_class","get_thick_mode","thick","highlightWeekends","setDate","getDay","computeGridHighlightDimensions","highlightToday","path_height","$today","getElementById","create_el","classes","$el","upper_texts_x","last","last_date","get_date_info","last_date_info","date_text","Hour_lower","Day_lower","Week_lower","Month_lower","Year_lower","Hour_upper","Day_upper","Week_upper","Month_upper","Year_upper","base_pos","base_pos_x","lower_y","upper_y","base_tick","line","x_pos","formatted_date","upper_text","lower_text","upper_x","lower_x","tick_line","$lower_text","innerText","bar_fragment","arrow_fragment","task_id","dependency","Boolean","parent_element","scroll_pos","scrollTo","behavior","shiftKey","deltaX","scrollMove","deltaY","newScrollX","preventDefault","unselect_all","x_on_start","y_on_start","matched_task","is_creating","holder","bar_being_created","radius","offsetY","get_snap_coord","abs","start_x","end_x","date_start","get_snap_date","date_end","assign","is_dragging","x_on_scroll_start","is_resizing_left","is_resizing_right","parent_bar_id","bar_wrapper","ids","get_all_dependent_tasks","ox","oy","owidth","finaldx","show_backdrop","hide_backdrop","elements","localBars","currentTarget","daysSinceStart","format_str","currentUpper","find","$current","bind_bar_progress","is_resizing","min_dx","max_dx","out","to_process","acc","isArray","some","backdrop","symbol"],"mappings":"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"}