{"version":3,"file":"frappe-gantt.min.js","sources":["../src/date_utils.js","../src/svg_utils.js","../src/bar.js","../src/arrow.js","../src/popup.js","../src/index.js"],"sourcesContent":["const YEAR = \"year\";\nconst MONTH = \"month\";\nconst DAY = \"day\";\nconst HOUR = \"hour\";\nconst MINUTE = \"minute\";\nconst SECOND = \"second\";\nconst MILLISECOND = \"millisecond\";\n\nconst SHORTENED = {\n  January: \"Jan\",\n  February: \"Feb\",\n  March: \"Mar\",\n  April: \"Apr\",\n  May: \"May\",\n  June: \"Jun\",\n  July: \"Jul\",\n  August: \"Aug\",\n  September: \"Sep\",\n  October: \"Oct\",\n  November: \"Nov\",\n  December: \"Dec\"\n};\n\nexport default {\n  parse_duration(duration) {\n    const regex = /([0-9])+(y|m|d|h|min|s|ms)/gm;\n    const matches = regex.exec(duration);\n\n    if (matches !== null) {\n      if (matches[2] === \"y\") {\n        return { duration: parseInt(matches[1]), scale: `year` };\n      } else if (matches[2] === \"m\") {\n        return { duration: parseInt(matches[1]), scale: `month` };\n      } else if (matches[2] === \"d\") {\n        return { duration: parseInt(matches[1]), scale: `day` };\n      } else if (matches[2] === \"h\") {\n        return { duration: parseInt(matches[1]), scale: `hour` };\n      } else if (matches[2] === \"min\") {\n        return { duration: parseInt(matches[1]), scale: `minute` };\n      } else if (matches[2] === \"s\") {\n        return { duration: parseInt(matches[1]), scale: `second` };\n      } else if (matches[2] === \"ms\") {\n        return { duration: parseInt(matches[1]), scale: `millisecond` };\n      }\n    }\n  },\n  parse(date, date_separator = \"-\", time_separator = /[.:]/) {\n    if (date instanceof Date) {\n      return date;\n    }\n    if (typeof date === \"string\") {\n      let date_parts, time_parts;\n      const parts = date.split(\" \");\n      date_parts = parts[0]\n        .split(date_separator)\n        .map((val) => parseInt(val, 10));\n      time_parts = parts[1] && parts[1].split(time_separator);\n\n      // month is 0 indexed\n      date_parts[1] = date_parts[1] ? date_parts[1] - 1 : 0;\n\n      let vals = date_parts;\n\n      if (time_parts && time_parts.length) {\n        if (time_parts.length === 4) {\n          time_parts[3] = \"0.\" + time_parts[3];\n          time_parts[3] = parseFloat(time_parts[3]) * 1000;\n        }\n        vals = vals.concat(time_parts);\n      }\n      return new Date(...vals);\n    }\n  },\n\n  to_string(date, with_time = false) {\n    if (!(date instanceof Date)) {\n      throw new TypeError(\"Invalid argument type\");\n    }\n    const vals = this.get_date_values(date).map((val, i) => {\n      if (i === 1) {\n        // add 1 for month\n        val = val + 1;\n      }\n\n      if (i === 6) {\n        return padStart(val + \"\", 3, \"0\");\n      }\n\n      return padStart(val + \"\", 2, \"0\");\n    });\n    const date_string = `${vals[0]}-${vals[1]}-${vals[2]}`;\n    const time_string = `${vals[3]}:${vals[4]}:${vals[5]}.${vals[6]}`;\n\n    return date_string + (with_time ? \" \" + time_string : \"\");\n  },\n\n  format(date, format_string = \"YYYY-MM-DD HH:mm:ss.SSS\", lang = \"en\") {\n    const dateTimeFormat = new Intl.DateTimeFormat(lang, {\n      month: \"long\",\n    });\n    const month_name = dateTimeFormat.format(date);\n    const month_name_capitalized =\n      month_name.charAt(0).toUpperCase() + month_name.slice(1);\n\n    const values = this.get_date_values(date).map((d) => padStart(d, 2, 0));\n    const format_map = {\n      YYYY: values[0],\n      MM: padStart(+values[1] + 1, 2, 0),\n      DD: values[2],\n      HH: values[3],\n      mm: values[4],\n      ss: values[5],\n      SSS: values[6],\n      D: values[2],\n      MMMM: month_name_capitalized,\n      MMM: SHORTENED[month_name_capitalized],\n    };\n\n    let str = format_string;\n    const formatted_values = [];\n\n    Object.keys(format_map)\n      .sort((a, b) => b.length - a.length) // big string first\n      .forEach((key) => {\n        if (str.includes(key)) {\n          str = str.replaceAll(key, `$${formatted_values.length}`);\n          formatted_values.push(format_map[key]);\n        }\n      });\n\n    formatted_values.forEach((value, i) => {\n      str = str.replaceAll(`$${i}`, value);\n    });\n\n    return str;\n  },\n\n  diff(date_a, date_b, scale = DAY) {\n    let milliseconds, seconds, hours, minutes, days, months, years;\n\n    milliseconds = date_a - date_b;\n    seconds = milliseconds / 1000;\n    minutes = seconds / 60;\n    hours = minutes / 60;\n    days = hours / 24;\n    months = days / 30;\n    years = months / 12;\n\n    if (!scale.endsWith(\"s\")) {\n      scale += \"s\";\n    }\n\n    return Math.floor(\n      {\n        milliseconds,\n        seconds,\n        minutes,\n        hours,\n        days,\n        months,\n        years,\n      }[scale],\n    );\n  },\n\n  today() {\n    const vals = this.get_date_values(new Date()).slice(0, 3);\n    return new Date(...vals);\n  },\n\n  now() {\n    return new Date();\n  },\n\n  add(date, qty, scale) {\n    qty = parseInt(qty, 10);\n    const vals = [\n      date.getFullYear() + (scale === YEAR ? qty : 0),\n      date.getMonth() + (scale === MONTH ? qty : 0),\n      date.getDate() + (scale === DAY ? qty : 0),\n      date.getHours() + (scale === HOUR ? qty : 0),\n      date.getMinutes() + (scale === MINUTE ? qty : 0),\n      date.getSeconds() + (scale === SECOND ? qty : 0),\n      date.getMilliseconds() + (scale === MILLISECOND ? qty : 0),\n    ];\n    return new Date(...vals);\n  },\n\n  start_of(date, scale) {\n    const scores = {\n      [YEAR]: 6,\n      [MONTH]: 5,\n      [DAY]: 4,\n      [HOUR]: 3,\n      [MINUTE]: 2,\n      [SECOND]: 1,\n      [MILLISECOND]: 0,\n    };\n\n    function should_reset(_scale) {\n      const max_score = scores[scale];\n      return scores[_scale] <= max_score;\n    }\n\n    const vals = [\n      date.getFullYear(),\n      should_reset(YEAR) ? 0 : date.getMonth(),\n      should_reset(MONTH) ? 1 : date.getDate(),\n      should_reset(DAY) ? 0 : date.getHours(),\n      should_reset(HOUR) ? 0 : date.getMinutes(),\n      should_reset(MINUTE) ? 0 : date.getSeconds(),\n      should_reset(SECOND) ? 0 : date.getMilliseconds(),\n    ];\n\n    return new Date(...vals);\n  },\n\n  clone(date) {\n    return new Date(...this.get_date_values(date));\n  },\n\n  get_date_values(date) {\n    return [\n      date.getFullYear(),\n      date.getMonth(),\n      date.getDate(),\n      date.getHours(),\n      date.getMinutes(),\n      date.getSeconds(),\n      date.getMilliseconds(),\n    ];\n  },\n\n  get_days_in_month(date) {\n    const no_of_days = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n\n    const month = date.getMonth();\n\n    if (month !== 1) {\n      return no_of_days[month];\n    }\n\n    // Feb\n    const year = date.getFullYear();\n    if ((year % 4 === 0 && year % 100 != 0) || year % 400 === 0) {\n      return 29;\n    }\n    return 28;\n  },\n};\n\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/padStart\nfunction padStart(str, targetLength, padString) {\n  str = str + \"\";\n  targetLength = targetLength >> 0;\n  padString = String(typeof padString !== \"undefined\" ? padString : \" \");\n  if (str.length > targetLength) {\n    return String(str);\n  } else {\n    targetLength = targetLength - str.length;\n    if (targetLength > padString.length) {\n      padString += padString.repeat(targetLength / padString.length);\n    }\n    return padString.slice(0, targetLength) + String(str);\n  }\n}\n","export function $(expr, con) {\n  return typeof expr === \"string\"\n    ? (con || document).querySelector(expr)\n    : expr || null;\n}\n\nexport function createSVG(tag, attrs) {\n  const elem = document.createElementNS(\"http://www.w3.org/2000/svg\", tag);\n  for (let attr in attrs) {\n    if (attr === \"append_to\") {\n      const parent = attrs.append_to;\n      parent.appendChild(elem);\n    } else if (attr === \"innerHTML\") {\n      elem.innerHTML = attrs.innerHTML;\n    } else if (attr === 'clipPath') {\n      elem.setAttribute('clip-path', 'url(#' + attrs[attr] + ')');\n    } else {\n      elem.setAttribute(attr, attrs[attr]);\n    }\n  }\n  return elem;\n}\n\nexport function animateSVG(svgElement, attr, from, to) {\n  const animatedSvgElement = getAnimationElement(svgElement, attr, from, to);\n\n  if (animatedSvgElement === svgElement) {\n    // triggered 2nd time programmatically\n    // trigger artificial click event\n    const event = document.createEvent(\"HTMLEvents\");\n    event.initEvent(\"click\", true, true);\n    event.eventName = \"click\";\n    animatedSvgElement.dispatchEvent(event);\n  }\n}\n\nfunction getAnimationElement(\n  svgElement,\n  attr,\n  from,\n  to,\n  dur = \"0.4s\",\n  begin = \"0.1s\",\n) {\n  const animEl = svgElement.querySelector(\"animate\");\n  if (animEl) {\n    $.attr(animEl, {\n      attributeName: attr,\n      from,\n      to,\n      dur,\n      begin: \"click + \" + begin, // artificial click\n    });\n    return svgElement;\n  }\n\n  const animateElement = createSVG(\"animate\", {\n    attributeName: attr,\n    from,\n    to,\n    dur,\n    begin,\n    calcMode: \"spline\",\n    values: from + \";\" + to,\n    keyTimes: \"0; 1\",\n    keySplines: cubic_bezier(\"ease-out\"),\n  });\n  svgElement.appendChild(animateElement);\n\n  return svgElement;\n}\n\nfunction cubic_bezier(name) {\n  return {\n    ease: \".25 .1 .25 1\",\n    linear: \"0 0 1 1\",\n    \"ease-in\": \".42 0 1 1\",\n    \"ease-out\": \"0 0 .58 1\",\n    \"ease-in-out\": \".42 0 .58 1\",\n  }[name];\n}\n\n$.on = (element, event, selector, callback) => {\n  if (!callback) {\n    callback = selector;\n    $.bind(element, event, callback);\n  } else {\n    $.delegate(element, event, selector, callback);\n  }\n};\n\n$.off = (element, event, handler) => {\n  element.removeEventListener(event, handler);\n};\n\n$.bind = (element, event, callback) => {\n  event.split(/\\s+/).forEach(function (event) {\n    element.addEventListener(event, callback);\n  });\n};\n\n$.delegate = (element, event, selector, callback) => {\n  element.addEventListener(event, function (e) {\n    const delegatedTarget = e.target.closest(selector);\n    if (delegatedTarget) {\n      e.delegatedTarget = delegatedTarget;\n      callback.call(this, e, delegatedTarget);\n    }\n  });\n};\n\n$.closest = (selector, element) => {\n  if (!element) return null;\n\n  if (element.matches(selector)) {\n    return element;\n  }\n\n  return $.closest(selector, element.parentNode);\n};\n\n$.attr = (element, attr, value) => {\n  if (!value && typeof attr === \"string\") {\n    return element.getAttribute(attr);\n  }\n\n  if (typeof attr === \"object\") {\n    for (let key in attr) {\n      $.attr(element, key, attr[key]);\n    }\n    return;\n  }\n\n  element.setAttribute(attr, value);\n};\n\n$.throttle = function (delay, noTrailing, callback, debounceMode) {\n    // After wrapper has stopped being called, this timeout ensures that\n    // `callback` is executed at the proper times in `throttle` and `end`\n    // debounce modes.\n    var timeoutID;\n\n    // Keep track of the last time `callback` was executed.\n    var lastExec = 0;\n\n    // `noTrailing` defaults to falsy.\n    if (typeof noTrailing !== 'boolean') {\n        debounceMode = callback;\n        callback = noTrailing;\n        noTrailing = undefined;\n    }\n\n    // The `wrapper` function encapsulates all of the throttling / debouncing\n    // functionality and when executed will limit the rate at which `callback`\n    // is executed.\n    function wrapper() {\n        var self = this;\n        var elapsed = Number(new Date()) - lastExec;\n        var args = arguments;\n\n        // Execute `callback` and update the `lastExec` timestamp.\n        function exec() {\n            lastExec = Number(new Date());\n            callback.apply(self, args);\n        }\n\n        // If `debounceMode` is true (at begin) this is used to clear the flag\n        // to allow future `callback` executions.\n        function clear() {\n            timeoutID = undefined;\n        }\n\n        if (debounceMode && !timeoutID) {\n            // Since `wrapper` is being called for the first time and\n            // `debounceMode` is true (at begin), execute `callback`.\n            exec();\n        }\n\n        // Clear any existing timeout.\n        if (timeoutID) {\n            clearTimeout(timeoutID);\n        }\n\n        if (debounceMode === undefined && elapsed > delay) {\n            // In throttle mode, if `delay` time has been exceeded, execute\n            // `callback`.\n            exec();\n        } else if (noTrailing !== true) {\n            // In trailing throttle mode, since `delay` time has not been\n            // exceeded, schedule `callback` to execute `delay` ms after most\n            // recent execution.\n            //\n            // If `debounceMode` is true (at begin), schedule `clear` to execute\n            // after `delay` ms.\n            //\n            // If `debounceMode` is false (at end), schedule `callback` to\n            // execute after `delay` ms.\n            timeoutID = setTimeout(\n                debounceMode ? clear : exec,\n                debounceMode === undefined ? delay - elapsed : delay,\n            );\n        }\n    }\n\n    // Return the wrapper function.\n    return wrapper;\n};\n","import date_utils from \"./date_utils\";\nimport { $, createSVG, animateSVG } from \"./svg_utils\";\n\nexport default class Bar {\n  constructor(gantt, task) {\n    this.set_defaults(gantt, task);\n    this.prepare();\n    this.draw();\n    this.bind();\n  }\n\n  set_defaults(gantt, task) {\n    this.action_completed = false;\n    this.gantt = gantt;\n    this.task = task;\n  }\n\n  prepare() {\n    this.prepare_values();\n    this.prepare_helpers();\n  }\n\n  prepare_values() {\n    this.empty = this.task.empty;\n    this.invalid = this.task.invalid;\n    this.height = this.gantt.options.bar_height;\n    this.image_size = this.height - 5;\n    this.compute_x();\n    this.compute_y();\n    this.compute_duration();\n    this.corner_radius = this.gantt.options.bar_corner_radius;\n    this.width = this.gantt.options.column_width * this.duration;\n    this.progress_width =\n      this.gantt.options.column_width *\n      this.duration *\n      (this.task.progress / 100) || 0;\n    this.group = createSVG(\"g\", {\n      class: \"bar-wrapper\" + (this.task.custom_class ? \" \" + this.task.custom_class : \"\") + (this.task.important ? ' important' : ''),\n      \"data-id\": this.task.id,\n    });\n    this.bar_group = createSVG(\"g\", {\n      class: \"bar-group\",\n      append_to: this.group,\n    });\n    this.handle_group = createSVG(\"g\", {\n      class: \"handle-group\",\n      append_to: this.group,\n    });\n  }\n\n  prepare_helpers() {\n    SVGElement.prototype.getX = function () {\n      return +this.getAttribute(\"x\");\n    };\n    SVGElement.prototype.getY = function () {\n      return +this.getAttribute(\"y\");\n    };\n    SVGElement.prototype.getWidth = function () {\n      return +this.getAttribute(\"width\");\n    };\n    SVGElement.prototype.getHeight = function () {\n      return +this.getAttribute(\"height\");\n    };\n    SVGElement.prototype.getEndX = function () {\n      return this.getX() + this.getWidth();\n    };\n  }\n\n  prepare_expected_progress_values() {\n    this.compute_expected_progress();\n    this.expected_progress_width =\n      this.gantt.options.column_width *\n      this.duration *\n      (this.expected_progress / 100) || 0;\n  }\n\n  draw() {\n    if (this.empty) return;\n    this.draw_bar();\n    this.draw_progress_bar();\n    if (this.gantt.options.show_expected_progress) {\n      this.prepare_expected_progress_values();\n      this.draw_expected_progress_bar();\n    }\n    this.draw_label();\n    this.draw_resize_handles();\n\n    if (this.task.thumbnail) {\n      this.draw_thumbnail();\n    }\n  }\n\n  draw_bar() {\n    this.$bar = createSVG(\"rect\", {\n      x: this.x,\n      y: this.y,\n      width: this.width,\n      height: this.height,\n      rx: this.corner_radius,\n      ry: this.corner_radius,\n      class: \"bar\",\n      append_to: this.bar_group,\n    });\n\n    animateSVG(this.$bar, \"width\", 0, this.width);\n\n    if (this.invalid) {\n      this.$bar.classList.add(\"bar-invalid\");\n    }\n  }\n\n  draw_expected_progress_bar() {\n    if (this.invalid) return;\n    this.$expected_bar_progress = createSVG(\"rect\", {\n      x: this.x,\n      y: this.y,\n      width: this.expected_progress_width,\n      height: this.height,\n      rx: this.corner_radius,\n      ry: this.corner_radius,\n      class: \"bar-expected-progress\",\n      append_to: this.bar_group,\n    });\n\n    animateSVG(\n      this.$expected_bar_progress,\n      \"width\",\n      0,\n      this.expected_progress_width,\n    );\n  }\n\n  draw_progress_bar() {\n    if (this.invalid) return;\n    this.$bar_progress = createSVG(\"rect\", {\n      x: this.x,\n      y: this.y,\n      width: this.progress_width,\n      height: this.height,\n      rx: this.corner_radius,\n      ry: this.corner_radius,\n      class: \"bar-progress\",\n      append_to: this.bar_group,\n    });\n    const x = (date_utils.diff(this.task._start, this.gantt.gantt_start, 'hour') /\n      this.gantt.options.step) *\n      this.gantt.options.column_width;\n\n    let $date_highlight = document.createElement(\"div\");\n    $date_highlight.id = `highlight-${this.task.id}`;\n    $date_highlight.classList.add('date-highlight')\n    $date_highlight.style.height = this.height * 0.8 + 'px'\n    $date_highlight.style.width = this.width + 'px'\n    $date_highlight.style.top = this.gantt.options.header_height - 25 + 'px'\n    $date_highlight.style.left = x + 'px'\n    this.$date_highlight = $date_highlight\n    this.gantt.$lower_header.prepend($date_highlight)\n\n    animateSVG(this.$bar_progress, \"width\", 0, this.progress_width);\n  }\n\n  draw_label() {\n    let x_coord = this.x + this.$bar.getWidth() / 2;\n\n    if (this.task.thumbnail) {\n      x_coord = this.x + 10 + this.image_size + 5;\n    }\n\n    createSVG(\"text\", {\n      x: x_coord,\n      y: this.y + this.height / 2,\n      innerHTML: this.task.name,\n      class: \"bar-label\",\n      append_to: this.bar_group,\n    });\n    // labels get BBox in the next tick\n    requestAnimationFrame(() => this.update_label_position());\n  }\n  draw_thumbnail() {\n    let x_offset = 10, y_offset = 2;\n    let defs, clipPath;\n\n    defs = createSVG('defs', {\n      append_to: this.bar_group\n    });\n\n    createSVG('rect', {\n      id: 'rect_' + this.task.id,\n      x: this.x + x_offset,\n      y: this.y + y_offset,\n      width: this.image_size,\n      height: this.image_size,\n      rx: '15',\n      class: 'img_mask',\n      append_to: defs\n    });\n\n    clipPath = createSVG('clipPath', {\n      id: 'clip_' + this.task.id,\n      append_to: defs\n    });\n\n    createSVG('use', {\n      href: '#rect_' + this.task.id,\n      append_to: clipPath\n    });\n\n    createSVG('image', {\n      x: this.x + x_offset,\n      y: this.y + y_offset,\n      width: this.image_size,\n      height: this.image_size,\n      class: 'bar-img',\n      href: this.task.thumbnail,\n      clipPath: 'clip_' + this.task.id,\n      append_to: this.bar_group\n    });\n  }\n\n  draw_resize_handles() {\n    if (this.invalid || this.gantt.options.readonly) return;\n\n    const bar = this.$bar;\n    const handle_width = this.gantt.options.handle_width;\n\n    createSVG(\"rect\", {\n      x: bar.getX() + bar.getWidth() - handle_width - 1,\n      y: bar.getY() + 1,\n      width: handle_width,\n      height: this.height - 2,\n      rx: this.corner_radius,\n      ry: this.corner_radius,\n      class: \"handle right\",\n      append_to: this.handle_group,\n    });\n\n    createSVG(\"rect\", {\n      x: bar.getX() + 1,\n      y: bar.getY() + 1,\n      width: handle_width,\n      height: this.height - 2,\n      rx: this.corner_radius,\n      ry: this.corner_radius,\n      class: \"handle left\",\n      append_to: this.handle_group,\n    });\n\n    this.$handle_progress = createSVG(\"polygon\", {\n      points: this.get_progress_polygon_points().join(\",\"),\n      class: \"handle progress\",\n      append_to: this.handle_group,\n    });\n  }\n\n  get_progress_polygon_points() {\n    const bar_progress = this.$bar_progress;\n    let icon_width = 10;\n    let icon_height = 15;\n\n    return [\n      bar_progress.getEndX() - icon_width / 2,\n      bar_progress.getY() + bar_progress.getHeight() / 2,\n\n      bar_progress.getEndX(),\n      bar_progress.getY() + bar_progress.getHeight() / 2 - icon_height / 2,\n\n      bar_progress.getEndX() + icon_width / 2,\n      bar_progress.getY() + bar_progress.getHeight() / 2,\n\n      bar_progress.getEndX(),\n      bar_progress.getY() + bar_progress.getHeight() / 2 + icon_height / 2,\n\n      bar_progress.getEndX() - icon_width / 2,\n      bar_progress.getY() + bar_progress.getHeight() / 2,\n    ];\n  }\n\n  bind() {\n    if (this.invalid) return;\n    this.setup_click_event();\n  }\n\n  setup_click_event() {\n    let task_id = this.task.id;\n    $.on(this.group, \"mouseover\", (e) => {\n      this.gantt.trigger_event(\"hover\", [this.task, e.screenX, e.screenY, e])\n    })\n\n    let timeout;\n    $.on(this.group, \"mouseenter\", (e) => timeout = setTimeout(() => {\n      this.show_popup(e.offsetX)\n      document.querySelector(`#highlight-${task_id}`).style.display = 'block';\n    }, 200))\n\n    $.on(this.group, \"mouseleave\", () => {\n      clearTimeout(timeout)\n      this.gantt.popup?.hide?.()\n      document.querySelector(`#highlight-${task_id}`).style.display = 'none';\n    })\n\n\n    $.on(this.group, this.gantt.options.popup_trigger, () => {\n      this.gantt.trigger_event(\"click\", [this.task]);\n    });\n\n    $.on(this.group, \"dblclick\", (e) => {\n      if (this.action_completed) {\n        // just finished a move action, wait for a few seconds\n        return;\n      }\n\n      this.gantt.trigger_event(\"double_click\", [this.task]);\n    });\n  }\n\n  show_popup(x) {\n    if (this.gantt.bar_being_dragged) return;\n\n    const start_date = date_utils.format(\n      this.task._start,\n      \"MMM D\",\n      this.gantt.options.language,\n    );\n    const end_date = date_utils.format(\n      date_utils.add(this.task._end, -1, \"second\"),\n      \"MMM D\",\n      this.gantt.options.language,\n    );\n    const subtitle = `${start_date} -  ${end_date}<br/>Progress: ${this.task.progress}`;\n\n    this.gantt.show_popup({\n      x,\n      target_element: this.$bar,\n      title: this.task.name,\n      subtitle: subtitle,\n      task: this.task,\n    });\n  }\n\n  update_bar_position({ x = null, width = null }) {\n    const bar = this.$bar;\n    if (x) {\n      if (this.gantt.options.drag_limit_child) {\n        // get all x values of parent task\n        const xs = this.task.dependencies.map((dep) => {\n          return this.gantt.get_bar(dep).$bar.getX();\n        });\n        // child task must not go before parent\n        const valid_x = xs.reduce((_, curr) => {\n          return x >= curr;\n        }, x);\n\n        if (!valid_x) {\n          width = null;\n          return;\n        }\n      }\n\n      this.update_attr(bar, \"x\", x);\n      if (this.$date_highlight) this.$date_highlight.style.left = x + 'px';\n    }\n    if (width) {\n      this.update_attr(bar, \"width\", width);\n      if (this.$date_highlight) this.$date_highlight.style.width = width + 'px';\n    }\n    this.update_label_position();\n    this.update_handle_position();\n    if (this.gantt.options.show_expected_progress) {\n      this.date_changed();\n      this.compute_duration();\n      this.update_expected_progressbar_position();\n    }\n    this.update_progressbar_position();\n    this.update_arrow_position();\n  }\n\n  update_label_position_on_horizontal_scroll({ x, sx }) {\n    const container = document.querySelector('.gantt-container');\n    const label = this.group.querySelector('.bar-label');\n    const img = this.group.querySelector('.bar-img') || '';\n    const img_mask = this.bar_group.querySelector('.img_mask') || '';\n\n    let barWidthLimit = this.$bar.getX() + this.$bar.getWidth();\n    let newLabelX = label.getX() + x;\n    let newImgX = img && img.getX() + x || 0;\n    let imgWidth = img && img.getBBox().width + 7 || 7;\n    let labelEndX = newLabelX + label.getBBox().width + 7;\n    let viewportCentral = sx + container.clientWidth / 2;\n\n    if (label.classList.contains('big')) return;\n\n    if (labelEndX < barWidthLimit && x > 0 && labelEndX < viewportCentral) {\n      label.setAttribute('x', newLabelX);\n      if (img) {\n        img.setAttribute('x', newImgX);\n        img_mask.setAttribute('x', newImgX);\n      }\n    } else if ((newLabelX - imgWidth) > this.$bar.getX() && x < 0 && labelEndX > viewportCentral) {\n      label.setAttribute('x', newLabelX);\n      if (img) {\n        img.setAttribute('x', newImgX);\n        img_mask.setAttribute('x', newImgX);\n      }\n\n    }\n  }\n\n  date_changed() {\n    let changed = false;\n    const { new_start_date, new_end_date } = this.compute_start_end_date();\n\n    if (Number(this.task._start) !== Number(new_start_date)) {\n      changed = true;\n      this.task._start = new_start_date;\n    }\n\n    if (Number(this.task._end) !== Number(new_end_date)) {\n      changed = true;\n      this.task._end = new_end_date;\n    }\n\n    if (!changed) return;\n\n    this.gantt.trigger_event(\"date_change\", [\n      this.task,\n      new_start_date,\n      date_utils.add(new_end_date, -1, \"second\"),\n    ]);\n  }\n\n  progress_changed() {\n    const new_progress = this.compute_progress();\n    this.task.progress = new_progress;\n    this.gantt.trigger_event(\"progress_change\", [this.task, new_progress]);\n  }\n\n  set_action_completed() {\n    this.action_completed = true;\n    setTimeout(() => (this.action_completed = false), 1000);\n  }\n\n  compute_start_end_date() {\n    const bar = this.$bar;\n    const x_in_units = bar.getX() / this.gantt.options.column_width;\n    const new_start_date = date_utils.add(\n      this.gantt.gantt_start,\n      x_in_units * this.gantt.options.step,\n      \"hour\",\n    );\n    const width_in_units = bar.getWidth() / this.gantt.options.column_width;\n    const new_end_date = date_utils.add(\n      new_start_date,\n      width_in_units * this.gantt.options.step,\n      \"hour\",\n    );\n\n    return { new_start_date, new_end_date };\n  }\n\n  compute_progress() {\n    const progress =\n      (this.$bar_progress.getWidth() / this.$bar.getWidth()) * 100;\n    return parseInt(progress, 10);\n  }\n\n  compute_expected_progress() {\n    this.expected_progress =\n      date_utils.diff(date_utils.today(), this.task._start, \"hour\") /\n      this.gantt.options.step;\n    // 未到当前日期\n    if (this.expected_progress < 0) {\n      this.expected_progress = 0;\n    }\n    this.expected_progress =\n      ((this.expected_progress < this.duration\n        ? this.expected_progress\n        : this.duration) *\n        100) /\n      this.duration;\n  }\n\n  compute_x() {\n    const { step, column_width } = this.gantt.options;\n    const task_start = this.task._start;\n    const gantt_start = this.gantt.gantt_start;\n\n    const diff = date_utils.diff(task_start, gantt_start, \"hour\");\n    let x = (diff / step) * column_width;\n\n    if (this.gantt.view_is(\"Month\")) {\n      const diff = date_utils.diff(task_start, gantt_start, \"day\");\n      x = (diff * column_width) / 30;\n    }\n    this.x = x;\n  }\n\n  compute_y() {\n    // this.y =\n    //   this.gantt.options.header_height +\n    //   this.gantt.options.padding / 2 +\n    //   this.task._index * (this.height + this.gantt.options.padding);\n    this.y = this.gantt.options.padding / 2 +\n      this.task._index * (this.height + this.gantt.options.padding);\n  }\n\n  compute_duration() {\n    this.duration =\n      date_utils.diff(this.task._end, this.task._start, \"hour\") /\n      this.gantt.options.step;\n  }\n\n  get_snap_position(dx) {\n    let odx = dx,\n      rem,\n      position;\n\n    if (this.gantt.view_is(\"Week\")) {\n      rem = dx % (this.gantt.options.column_width / 7);\n      position =\n        odx -\n        rem +\n        (rem < this.gantt.options.column_width / 14\n          ? 0\n          : this.gantt.options.column_width / 7);\n    } else if (this.gantt.view_is(\"Month\")) {\n      rem = dx % (this.gantt.options.column_width / 30);\n      position =\n        odx -\n        rem +\n        (rem < this.gantt.options.column_width / 60\n          ? 0\n          : this.gantt.options.column_width / 30);\n    } else {\n      rem = dx % this.gantt.options.column_width;\n      position =\n        odx -\n        rem +\n        (rem < this.gantt.options.column_width / 2\n          ? 0\n          : this.gantt.options.column_width);\n    }\n    return position;\n  }\n\n  update_attr(element, attr, value) {\n    value = +value;\n    if (!isNaN(value)) {\n      element.setAttribute(attr, value);\n    }\n    return element;\n  }\n\n  update_expected_progressbar_position() {\n    if (this.invalid) return;\n    this.$expected_bar_progress.setAttribute(\"x\", this.$bar.getX());\n    this.compute_expected_progress();\n    this.$expected_bar_progress.setAttribute(\n      \"width\",\n      this.gantt.options.column_width *\n      this.duration *\n      (this.expected_progress / 100) || 0,\n    );\n  }\n\n  update_progressbar_position() {\n    if (this.invalid || this.gantt.options.readonly) return;\n    this.$bar_progress.setAttribute(\"x\", this.$bar.getX());\n    this.$bar_progress.setAttribute(\n      \"width\",\n      this.$bar.getWidth() * (this.task.progress / 100),\n    );\n  }\n\n  update_label_position() {\n    const img_mask = this.bar_group.querySelector('.img_mask') || '';\n    const bar = this.$bar,\n      label = this.group.querySelector(\".bar-label\"),\n      img = this.group.querySelector('.bar-img');\n\n\n    let padding = 10;\n    let x_offset_label_img = this.image_size + 5;\n    const labelWidth = label.getBBox().width\n    const barWidth = bar.getWidth()\n    if (labelWidth > barWidth) {\n      label.classList.add(\"big\");\n      if (img) {\n        img.setAttribute('x', bar.getX() + barWidth + padding);\n        img_mask.setAttribute('x', bar.getX() + barWidth + padding);\n        label.setAttribute('x', bar.getX() + barWidth + x_offset_label_img);\n      } else {\n        label.setAttribute('x', bar.getX() + barWidth + padding);\n      }\n    } else {\n      label.classList.remove(\"big\");\n      if (img) {\n        img.setAttribute('x', bar.getX() + padding);\n        img_mask.setAttribute('x', bar.getX() + padding);\n        label.setAttribute('x', bar.getX() + padding + x_offset_label_img);\n      } else {\n        label.setAttribute('x', bar.getX() + barWidth / 2 - labelWidth / 2);\n      }\n    }\n  }\n\n  update_handle_position() {\n    if (this.invalid || this.gantt.options.readonly) return;\n    const bar = this.$bar;\n    const handle_width = this.gantt.options.handle_width;\n\n    this.handle_group\n      .querySelector(\".handle.left\")\n      .setAttribute(\"x\", bar.getX() + 1);\n    this.handle_group\n      .querySelector(\".handle.right\")\n      .setAttribute(\"x\", bar.getEndX() - handle_width - 1);\n    const handle = this.group.querySelector(\".handle.progress\");\n    handle && handle.setAttribute(\"points\", this.get_progress_polygon_points());\n  }\n\n  update_arrow_position() {\n    this.arrows = this.arrows || [];\n    for (let arrow of this.arrows) {\n      arrow.update();\n    }\n  }\n}\n\nfunction isFunction(functionToCheck) {\n  let getType = {};\n  return (\n    functionToCheck &&\n    getType.toString.call(functionToCheck) === \"[object Function]\"\n  );\n}\n","import { createSVG } from \"./svg_utils\";\n\nexport default class Arrow {\n  constructor(gantt, from_task, to_task) {\n    this.gantt = gantt;\n    this.from_task = from_task;\n    this.to_task = to_task;\n\n    this.calculate_path();\n    this.draw();\n    this.drawInner();\n  }\n\n  calculate_path() {\n    if (this.to_task.empty) return;\n\n    const rowHeight = this.gantt.options.bar_height + this.gantt.options.padding;\n    const taskHeight = this.gantt.options.bar_height;\n    const arrowCurve = this.gantt.options.arrow_curve;\n    const arrowIndent = this.gantt.options.column_width / 2;\n    const taskFrom = this.from_task;\n    const taskTo = this.to_task;\n\n    const taskFromX2 = taskFrom.$bar.getEndX();\n    const taskFromY1 = taskFrom.$bar.getY();\n    const taskToX1 = taskTo.$bar.getX();\n    const taskToY1 = taskTo.$bar.getY();\n\n    const indexCompare = taskFrom.task._index > taskTo.task._index ? -1 : 1;\n    const taskToEndPosition = taskToY1 + taskHeight / 2;\n    const taskFromEndPosition = taskFromX2 + arrowIndent * 2;\n\n    const taskFromHorizontalOffsetValue =\n        taskFromEndPosition < taskToX1 ? '' : `H ${taskToX1 - arrowIndent}`;\n    const taskToHorizontalOffsetValue =\n        taskFromEndPosition > taskToX1\n            ? arrowIndent\n            : taskToX1 - taskFromX2 - arrowIndent;\n\n    const path = `M ${taskFromX2} ${taskFromY1 + taskHeight / 2}\n    h ${arrowIndent}\n    v ${(indexCompare * rowHeight) / 2}\n    ${taskFromHorizontalOffsetValue}\n    V ${taskToEndPosition}\n    h ${taskToHorizontalOffsetValue}`;\n\n    const trianglePoints = `${taskToX1},${taskToEndPosition}\n    ${taskToX1 - arrowCurve},${taskToEndPosition - arrowCurve}\n    ${taskToX1 - arrowCurve},${taskToEndPosition + arrowCurve}`;\n\n    this.path = path;\n\n    this.points = trianglePoints;\n  }\n\n  draw() {\n    this.element = createSVG(\"g\", {\n      \"data-from\": this.from_task.task.id,\n      \"data-to\": this.to_task.task.id,\n    });\n  }\n\n  drawInner() {\n    if (this.to_task.empty) return;\n\n    this.svgPath = createSVG(\"path\", {\n      d: this.path,\n      fill: \"none\",\n      append_to: this.element\n    });\n    this.svgPolygon = createSVG(\"polygon\", {\n      points: this.points,\n      append_to: this.element,\n    });\n  }\n\n  update() {\n    if (this.to_task.empty) return;\n\n    this.calculate_path();\n    this.svgPath.setAttribute(\"d\", this.path);\n    this.svgPolygon.setAttribute(\"points\", this.points);\n  }\n}\n","export default class Popup {\n  constructor(parent, custom_html) {\n    this.parent = parent;\n    this.custom_html = custom_html;\n    this.make();\n  }\n\n  make() {\n    this.parent.innerHTML = `\n            <div class=\"title\"></div>\n            <div class=\"subtitle\"></div>\n            <div class=\"pointer\"></div>\n        `;\n\n    this.hide();\n\n    this.title = this.parent.querySelector(\".title\");\n    this.subtitle = this.parent.querySelector(\".subtitle\");\n    this.pointer = this.parent.querySelector(\".pointer\");\n  }\n\n  show(options) {\n    if (!options.target_element) {\n      throw new Error(\"target_element is required to show popup\");\n    }\n    const target_element = options.target_element;\n\n    if (this.custom_html) {\n      let html = this.custom_html(options.task);\n      html += '<div class=\"pointer\"></div>';\n      this.parent.innerHTML = html;\n      this.pointer = this.parent.querySelector(\".pointer\");\n    } else {\n      // set data\n      this.title.innerHTML = options.title;\n      this.subtitle.innerHTML = options.subtitle;\n    }\n\n    // set position\n    let position_meta;\n    if (target_element instanceof HTMLElement) {\n      position_meta = target_element.getBoundingClientRect();\n    } else if (target_element instanceof SVGElement) {\n      position_meta = options.target_element.getBBox();\n    }\n\n    this.parent.style.left = options.x - this.parent.clientWidth / 2 + \"px\";\n    this.parent.style.top = position_meta.y + position_meta.height + 10 + \"px\";\n\n    this.pointer.style.left = this.parent.clientWidth / 2 + \"px\";\n    this.pointer.style.top = \"-15px\";\n\n    // show\n    this.parent.style.opacity = 1;\n  }\n\n  hide() {\n    this.parent.style.opacity = 0;\n    this.parent.style.left = 0;\n  }\n}\n","import date_utils from \"./date_utils\";\nimport { $, createSVG } from \"./svg_utils\";\nimport Bar from \"./bar\";\nimport Arrow from \"./arrow\";\nimport Popup from \"./popup\";\n\nimport \"./gantt.scss\";\n\nconst VIEW_MODE = {\n  HOUR: \"Hour\",\n  QUARTER_DAY: \"Quarter Day\",\n  HALF_DAY: \"Half Day\",\n  DAY: \"Day\",\n  WEEK: \"Week\",\n  MONTH: \"Month\",\n  YEAR: \"Year\",\n};\n\nconst VIEW_MODE_PADDING = {\n  HOUR: [\"7d\", \"7d\"],\n  QUARTER_DAY: [\"7d\", \"7d\"],\n  HALF_DAY: [\"7d\", \"7d\"],\n  DAY: [\"1m\", \"1m\"],\n  WEEK: [\"1m\", \"1m\"],\n  MONTH: [\"1m\", \"1m\"],\n  YEAR: [\"2y\", \"2y\"],\n};\n\nconst DEFAULT_OPTIONS = {\n  header_height: 65,\n  // column_width: 30,\n  // step: 24,\n  bar_height: 30,\n  bar_corner_radius: 3,\n  arrow_curve: 5,\n  handle_width: 8,\n  padding: 18,\n  view_modes: [...Object.values(VIEW_MODE)],\n  view_mode: VIEW_MODE.DAY,\n  date_format: \"YYYY-MM-DD\",\n  popup_trigger: \"click\",\n  show_expected_progress: false,\n  drag_sync_child: false,\n  drag_limit_child: false,\n  popup: null,\n  language: \"en\",\n  readonly: false,\n  highlight_weekend: true,\n  scroll_to: 'start',\n  lines: 'both',\n  auto_move_label: true,\n  today_button: true,\n  view_mode_select: false,\n};\n\nexport default class Gantt {\n  constructor(wrapper, tasks, options) {\n    this.setup_wrapper(wrapper);\n    this.setup_options(options);\n    this.setup_tasks(tasks);\n    // initialize with default view mode\n    this.change_view_mode();\n    this.bind_events();\n  }\n\n  setup_wrapper(element) {\n    let svg_element, wrapper_element;\n\n    // CSS Selector is passed\n    if (typeof element === \"string\") {\n      element = document.querySelector(element);\n    }\n\n    // get the SVGElement\n    if (element instanceof HTMLElement) {\n      wrapper_element = element;\n      svg_element = element.querySelector(\"svg\");\n    } else if (element instanceof SVGElement) {\n      svg_element = element;\n    } else {\n      throw new TypeError(\n        \"Frappé Gantt only supports usage of a string CSS selector,\" +\n        \" HTML DOM element or SVG DOM element for the 'element' parameter\",\n      );\n    }\n\n    // svg element\n    if (!svg_element) {\n      // create it\n      this.$svg = createSVG(\"svg\", {\n        append_to: wrapper_element,\n        class: \"gantt\",\n      });\n    } else {\n      this.$svg = svg_element;\n      this.$svg.classList.add(\"gantt\");\n    }\n\n    // wrapper element\n    this.$container = document.createElement(\"div\");\n    this.$container.classList.add(\"gantt-container\");\n\n    // 1.header horizontal-scroll\n    this.$container_header = document.createElement('div');\n    this.$container_header.classList.add('gantt-container_header');\n    this.$container.appendChild(this.$container_header);\n\n    // 2.main vertical-scroll\n    this.$container_main = document.createElement('div');\n    this.$container_main.classList.add('gantt-container_main');\n    this.$container.appendChild(this.$container_main);\n\n    // 3. appendTo wrapper\n    const parent_element = this.$svg.parentElement;\n    parent_element.appendChild(this.$container);\n    this.$container_main.appendChild(this.$svg);\n\n    // 4.popup wrapper\n    this.$popup_wrapper = document.createElement(\"div\");\n    this.$popup_wrapper.classList.add(\"popup-wrapper\");\n    this.$popup_wrapper.classList.add(\"hidden\");\n    this.$container.appendChild(this.$popup_wrapper);\n  }\n\n  setup_options(options) {\n    this.options = { ...DEFAULT_OPTIONS, ...options }\n    if (!options.view_mode_padding) options.view_mode_padding = {}\n    for (let [key, value] of Object.entries(options.view_mode_padding)) {\n      if (typeof value === \"string\") {\n        // Configure for single value given\n        options.view_mode_padding[key] = [value, value];\n      }\n    }\n\n    this.options.view_mode_padding = {\n      ...VIEW_MODE_PADDING,\n      ...options.view_mode_padding,\n    };\n  }\n\n  setup_tasks(tasks) {\n    // prepare tasks\n    this.tasks = tasks.map((task, i) => {\n      // convert to Date objects\n      task._start = date_utils.parse(task.start);\n      if (task.end === undefined && task.duration !== undefined) {\n        task.end = task._start;\n        let durations = task.duration.split(\" \");\n\n        durations.forEach((tmpDuration) => {\n          let { duration, scale } = date_utils.parse_duration(tmpDuration);\n          task.end = date_utils.add(task.end, duration, scale);\n        });\n      }\n      task._end = date_utils.parse(task.end);\n      let diff = date_utils.diff(task._end, task._start, \"year\");\n      if (diff < 0) {\n        throw Error(\"start of task can't be after end of task: in task #, \" + (i + 1))\n      }\n      // make task invalid if duration too large\n      if (date_utils.diff(task._end, task._start, \"year\") > 10) {\n        task.end = null;\n      }\n\n\n      // cache index\n      task._index = i;\n\n      // invalid dates\n      if (!task.start && !task.end) {\n        task._start = null;\n        task._end = null;\n        task.empty = true;\n        // const today = date_utils.today();\n        // task._start = today;\n        // task._end = date_utils.add(today, 2, \"day\");\n      }\n\n      if (!task.start && task.end) {\n        task._start = date_utils.add(task._end, -2, \"day\");\n      }\n\n      if (task.start && !task.end) {\n        task._end = date_utils.add(task._start, 2, \"day\");\n      }\n\n      // if hours is not set, assume the last day is full day\n      // e.g: 2018-09-09 becomes 2018-09-09 23:59:59\n      if (task._end) {\n        const task_end_values = date_utils.get_date_values(task._end);\n        if (task_end_values.slice(3).every((d) => d === 0)) {\n          task._end = date_utils.add(task._end, 24, \"hour\");\n        }\n      }\n\n      // invalid flag\n      if (!task.start || !task.end) {\n        task.invalid = true;\n      }\n\n      // dependencies\n      if (typeof task.dependencies === \"string\" || !task.dependencies) {\n        let deps = [];\n        if (task.dependencies) {\n          deps = task.dependencies\n            .split(\",\")\n            .map((d) => d.trim().replaceAll(' ', '_'))\n            .filter((d) => d);\n        }\n        task.dependencies = deps;\n      }\n\n      // uids\n      if (!task.id) {\n        task.id = generate_id(task);\n      } else if (typeof task.id === 'string') {\n        task.id = task.id.replaceAll(' ', '_')\n      } else {\n        task.id = `${task.id}`\n      }\n\n      return task;\n    });\n\n    this.setup_dependencies();\n  }\n\n  setup_dependencies() {\n    this.dependency_map = {};\n    for (let t of this.tasks) {\n      for (let d of t.dependencies) {\n        this.dependency_map[d] = this.dependency_map[d] || [];\n        this.dependency_map[d].push(t.id);\n      }\n    }\n  }\n\n  refresh(tasks) {\n    this.setup_tasks(tasks);\n    this.change_view_mode();\n  }\n\n  change_view_mode(mode = this.options.view_mode) {\n    this.update_view_scale(mode);\n    this.setup_dates();\n    this.render();\n    // fire viewmode_change event\n    this.trigger_event(\"view_change\", [mode]);\n  }\n\n  update_view_scale(view_mode) {\n    this.options.view_mode = view_mode;\n    if (view_mode === VIEW_MODE.HOUR) {\n      this.options.step = 24 / 24;\n      this.options.column_width = 38;\n    } else if (view_mode === VIEW_MODE.DAY) {\n      this.options.step = 24;\n      this.options.column_width = 38;\n    } else if (view_mode === VIEW_MODE.HALF_DAY) {\n      this.options.step = 24 / 2;\n      this.options.column_width = 38;\n    } else if (view_mode === VIEW_MODE.QUARTER_DAY) {\n      this.options.step = 24 / 4;\n      this.options.column_width = 38;\n    } else if (view_mode === VIEW_MODE.WEEK) {\n      this.options.step = 24 * 7;\n      this.options.column_width = 140;\n    } else if (view_mode === VIEW_MODE.MONTH) {\n      this.options.step = 24 * 30;\n      this.options.column_width = 120;\n    } else if (view_mode === VIEW_MODE.YEAR) {\n      this.options.step = 24 * 365;\n      this.options.column_width = 120;\n    }\n  }\n\n  setup_dates() {\n    this.setup_gantt_dates();\n    this.setup_date_values();\n  }\n\n  setup_gantt_dates() {\n    this.gantt_start = this.gantt_end = null;\n\n    for (let task of this.tasks) {\n      // set global start and end date\n      if (!this.gantt_start || (task._start && task._start < this.gantt_start)) {\n          this.gantt_start = task._start;\n      }\n      if (!this.gantt_end || (task._end && task._end > this.gantt_end)) {\n        this.gantt_end = task._end;\n      }\n    }\n    let gantt_start, gantt_end;\n    if (!this.gantt_start) gantt_start = new Date();\n    else gantt_start = date_utils.start_of(this.gantt_start, \"day\");\n    if (!this.gantt_end) gantt_end = new Date();\n    else gantt_end = date_utils.start_of(this.gantt_end, \"day\");\n\n\n    // 判断当前时间\n    const today = date_utils.today();\n    if (gantt_start > today) gantt_start = today;\n    if (gantt_end < today) gantt_end = today;\n\n    // add date padding on both sides\n    let viewKey;\n    for (let [key, value] of Object.entries(VIEW_MODE)) {\n      if (value === this.options.view_mode) {\n        viewKey = key;\n      }\n    }\n    const [padding_start, padding_end] = this.options.view_mode_padding[\n      viewKey\n    ].map(date_utils.parse_duration);\n    gantt_start = date_utils.add(\n      gantt_start,\n      -padding_start.duration,\n      padding_start.scale,\n    );\n\n    let format_string;\n    if (this.view_is(VIEW_MODE.YEAR)) {\n      format_string = \"YYYY\"\n    } else if (this.view_is(VIEW_MODE.MONTH)) {\n      format_string = \"YYYY-MM\"\n    } else if (this.view_is(VIEW_MODE.DAY)) {\n      format_string = \"YYYY-MM-DD\"\n    } else {\n      format_string = \"YYYY-MM-DD HH\"\n    }\n    this.gantt_start = date_utils.parse(date_utils.format(gantt_start, format_string));\n    this.gantt_start.setHours(0, 0, 0, 0)\n    this.gantt_end = date_utils.add(\n      gantt_end,\n      padding_end.duration,\n      padding_end.scale,\n    );\n  }\n\n  setup_date_values() {\n    this.dates = [];\n    let cur_date = null;\n\n    while (cur_date === null || cur_date < this.gantt_end) {\n      if (!cur_date) {\n        cur_date = date_utils.clone(this.gantt_start);\n      } else {\n        if (this.view_is(VIEW_MODE.YEAR)) {\n          cur_date = date_utils.add(cur_date, 1, \"year\");\n        } else if (this.view_is(VIEW_MODE.MONTH)) {\n          cur_date = date_utils.add(cur_date, 1, \"month\");\n        } else {\n          cur_date = date_utils.add(cur_date, this.options.step, \"hour\");\n        }\n      }\n      this.dates.push(cur_date);\n    }\n  }\n\n  bind_events() {\n    this.bind_grid_scroll();\n\n    if (this.options.readonly) return\n    this.bind_grid_click();\n    this.bind_bar_create();\n    this.bind_bar_events();\n  }\n\n  render() {\n    this.clear();\n    this.setup_layers();\n    this.make_grid();\n    this.make_dates();\n    this.make_bars();\n    this.make_grid_extras();\n    this.make_arrows();\n    this.map_arrows_on_bars();\n    this.set_width();\n    this.set_scroll_position(this.options.scroll_to);\n  }\n\n  setup_layers() {\n    this.layers = {};\n    const layers = [\"grid\", \"arrow\", \"progress\", \"bar\", \"details\"];\n    // make group layers\n    for (let layer of layers) {\n      this.layers[layer] = createSVG(\"g\", {\n        class: layer,\n        append_to: this.$svg,\n      });\n    }\n  }\n\n  make_grid() {\n    this.make_grid_background();\n    this.make_grid_rows();\n    this.make_grid_header();\n  }\n\n  make_grid_extras() {\n    this.make_grid_highlights();\n    this.make_grid_ticks();\n  }\n\n  make_grid_background() {\n    const grid_width = this.dates.length * this.options.column_width;\n    // const grid_height =\n    //   this.options.header_height +\n    //   12 + // scrollbar-height\n    //   (this.options.bar_height + this.options.padding) * this.tasks.length;\n    const grid_height = (this.options.bar_height + this.options.padding) * this.tasks.length;\n\n    createSVG(\"rect\", {\n      x: 0,\n      y: 0,\n      width: grid_width,\n      height: grid_height,\n      class: \"grid-background\",\n      append_to: this.$svg,\n    });\n\n    if (this.options.height) {\n      this.$container_main.style.width = '100%';\n      this.$container_main.style.height = this.options.height + 'px';\n      this.$container_main.style.overflow = 'auto';\n      this.$container_main.style.position = 'relative';\n      this.$container.style.overflow = 'hidden';\n    }\n\n    $.attr(this.$svg, {\n      height: grid_height ,\n      width: \"100%\",\n    });\n  }\n\n  make_grid_rows() {\n    const rows_layer = createSVG(\"g\", { append_to: this.layers.grid });\n\n    const row_width = this.dates.length * this.options.column_width;\n    const row_height = this.options.bar_height + this.options.padding;\n\n    // let row_y = this.options.header_height;\n    let row_y = 0;\n\n    for (let _ of this.tasks) {\n      createSVG(\"rect\", {\n        x: 0,\n        y: row_y,\n        width: row_width,\n        height: row_height,\n        class: \"grid-row\",\n        append_to: rows_layer,\n      });\n      if (this.options.lines === 'both' || this.options.lines === 'horizontal') {\n\n      }\n\n      row_y += this.options.bar_height + this.options.padding;\n    }\n  }\n\n  make_grid_header() {\n    let $header = document.createElement(\"div\");\n    $header.style.height = this.options.header_height + \"px\";\n    $header.style.width = this.dates.length * this.options.column_width + \"px\";\n    $header.classList.add('grid-header')\n    this.$header = $header\n    this.$container_header.appendChild($header)\n\n    let $upper_header = document.createElement(\"div\");\n    $upper_header.classList.add('upper-header')\n    this.$upper_header = $upper_header\n    this.$header.appendChild($upper_header)\n\n    let $lower_header = document.createElement(\"div\");\n    $lower_header.classList.add('lower-header')\n    this.$lower_header = $lower_header\n    this.$header.appendChild($lower_header)\n\n    this.make_side_header()\n  }\n\n  make_side_header() {\n    let $side_header = document.createElement('div')\n    $side_header.classList.add('side-header')\n\n    // Create view mode change select\n    if (this.options.view_mode_select) {\n\n      const $select = document.createElement(\"select\");\n      $select.classList.add('viewmode-select')\n\n      const $el = document.createElement(\"option\");\n      $el.selected = true\n      $el.disabled = true\n      $el.textContent = 'Mode'\n      $select.appendChild($el)\n\n      for (const key in VIEW_MODE) {\n        const $option = document.createElement(\"option\");\n        $option.value = VIEW_MODE[key];\n        $option.textContent = VIEW_MODE[key];\n        $select.appendChild($option);\n      }\n      // $select.value = this.options.view_mode\n      $select.addEventListener(\"change\", (function () {\n        this.change_view_mode($select.value)\n      }).bind(this));\n      $side_header.appendChild($select)\n    }\n\n    // Create today button\n    if (this.options.today_button) {\n      let $today_button = document.createElement('button')\n      $today_button.classList.add('today-button')\n      $today_button.textContent = 'Today'\n      $today_button.onclick = this.scroll_today.bind(this)\n      $side_header.appendChild($today_button)\n    }\n\n    this.$header.appendChild($side_header)\n    const { left, y } = this.$header.getBoundingClientRect();\n    const width = Math.min(this.$header.clientWidth, this.$container.clientWidth)\n    $side_header.style.left = left + this.$container.scrollLeft + width - $side_header.clientWidth + 'px';\n    $side_header.style.top = y + 10 + 'px';\n  }\n\n  make_grid_ticks() {\n    if (!['both', 'vertical', 'horizontal'].includes(this.options.lines)) return\n    let tick_x = 0;\n    // let tick_y = this.options.header_height;\n    let tick_y = 0;\n    let tick_height =\n      (this.options.bar_height + this.options.padding) * this.tasks.length;\n\n    let $lines_layer = createSVG(\"g\", { class: 'lines_layer', append_to: this.layers.grid });\n\n    // let row_y = this.options.header_height;\n    let row_y = 0;\n\n    const row_width = this.dates.length * this.options.column_width;\n    const row_height = this.options.bar_height + this.options.padding;\n    if (this.options.lines !== 'vertical') {\n      for (let _ of this.tasks) {\n        createSVG(\"line\", {\n          x1: 0,\n          y1: row_y + row_height,\n          x2: row_width,\n          y2: row_y + row_height,\n          class: \"row-line\",\n          append_to: $lines_layer,\n        });\n        row_y += row_height;\n      }\n    }\n    if (this.options.lines === 'horizontal') return;\n    for (let date of this.dates) {\n      let tick_class = \"tick\";\n      // thick tick for monday\n      if (this.view_is(VIEW_MODE.DAY) && date.getDate() === 1) {\n        tick_class += \" thick\";\n      }\n      // thick tick for first week\n      if (\n        this.view_is(VIEW_MODE.WEEK) &&\n        date.getDate() >= 1 &&\n        date.getDate() < 8\n      ) {\n        tick_class += \" thick\";\n      }\n      // thick ticks for quarters\n      if (this.view_is(VIEW_MODE.MONTH) && date.getMonth() % 3 === 0) {\n        tick_class += \" thick\";\n      }\n\n      createSVG(\"path\", {\n        d: `M ${tick_x} ${tick_y} v ${tick_height}`,\n        class: tick_class,\n        append_to: this.layers.grid,\n      });\n\n      if (this.view_is(VIEW_MODE.MONTH)) {\n        tick_x +=\n          (date_utils.get_days_in_month(date) * this.options.column_width) / 30;\n      } else {\n        tick_x += this.options.column_width;\n      }\n    }\n  }\n\n  highlightWeekends() {\n    if (!this.view_is('Day') && !this.view_is('Half Day')) return\n    for (let d = new Date(this.gantt_start); d <= this.gantt_end; d.setDate(d.getDate() + 1)) {\n      if (d.getDay() === 0 || d.getDay() === 6) {\n        const x = (date_utils.diff(d, this.gantt_start, 'hour') /\n          this.options.step) *\n          this.options.column_width;\n        const height = (this.options.bar_height + this.options.padding) * this.tasks.length;\n        createSVG('rect', {\n          x,\n          // y: this.options.header_height,\n          y: 0,\n          width: (this.view_is('Day') ? 1 : 2) * this.options.column_width,\n          height,\n          class: 'holiday-highlight',\n          append_to: this.layers.grid,\n        });\n      }\n    }\n  }\n\n  //compute the horizontal x distance\n  computeGridHighlightDimensions(view_mode) {\n    let x = this.options.column_width / 2;\n\n    if (this.view_is(VIEW_MODE.DAY)) {\n      let today = date_utils.today()\n      return {\n        x: x +\n          (date_utils.diff(today, this.gantt_start, \"hour\") / this.options.step) *\n          this.options.column_width,\n        date: today\n      }\n    }\n\n    for (let date of this.dates) {\n      const todayDate = new Date();\n      const startDate = new Date(date);\n      const endDate = new Date(date);\n      switch (view_mode) {\n        case VIEW_MODE.WEEK:\n          endDate.setDate(date.getDate() + 7);\n          break;\n        case VIEW_MODE.MONTH:\n          endDate.setMonth(date.getMonth() + 1);\n          break;\n        case VIEW_MODE.YEAR:\n          endDate.setFullYear(date.getFullYear() + 1);\n          break;\n      }\n      if (todayDate >= startDate && todayDate <= endDate) {\n        return { x, date: startDate }\n      } else {\n        x += this.options.column_width;\n      }\n    }\n  }\n\n  make_grid_highlights() {\n    if (this.options.highlight_weekend) this.highlightWeekends()\n    // highlight today's | week's | month's | year's\n    if (\n      this.view_is(VIEW_MODE.DAY) ||\n      this.view_is(VIEW_MODE.WEEK) ||\n      this.view_is(VIEW_MODE.MONTH) ||\n      this.view_is(VIEW_MODE.YEAR)\n    ) {\n      // Used as we must find the _end_ of session if view is not Day\n      const grid_width = this.dates.length * this.options.column_width;\n      console.log('ddd ==> as', grid_width)\n      const $overlay_wrapper = this.create_el({ width: grid_width, classes: 'gantt-today-overlay', append_to: this.$container_main })\n\n      const { x: left, date } = this.computeGridHighlightDimensions(this.options.view_mode)\n      // const top = this.options.header_height;\n      const top = 0;\n      const height = (this.options.bar_height + this.options.padding) * this.tasks.length;\n      this.$current_highlight = this.create_el({ top, left, height, classes: 'today-highlight', append_to: $overlay_wrapper })\n\n      let $today = document.getElementById(date_utils.format(date).replaceAll(' ', '_'))\n      $today.classList.add('today-date-highlight')\n      $today.style.top = +$today.style.top.slice(0, -2) - 4 + 'px'\n      $today.style.left = +$today.style.left.slice(0, -2) - 8 + 'px'\n    }\n  }\n\n  create_el({ left, top, width, height, id, classes, append_to }) {\n    let $el = document.createElement(\"div\");\n    $el.classList.add(classes)\n    $el.style.top = top + 'px'\n    $el.style.left = left + 'px'\n    if (id) $el.id = id\n    if (width) $el.style.width = width + 'px'\n    if (height) $el.style.height = height + 'px'\n    append_to.appendChild($el)\n    return $el\n  }\n\n  make_dates() {\n    this.upper_texts_x = {}\n    this.get_dates_to_draw().forEach((date, i) => {\n      let $lower_text = this.create_el({\n        left: date.lower_x,\n        top: date.lower_y,\n        id: date.formatted_date,\n        classes: 'lower-text',\n        append_to: this.$lower_header\n      })\n      $lower_text.innerText = date.lower_text\n      $lower_text.style.left = +$lower_text.style.left.slice(0, -2) - $lower_text.clientWidth / 2 + 'px'\n\n      if (date.upper_text) {\n        this.upper_texts_x[date.upper_text] = date.upper_x\n        let $upper_text = document.createElement('div');\n        $upper_text.classList.add('upper-text')\n        $upper_text.style.left = date.upper_x + 'px'\n        $upper_text.style.top = date.upper_y + 'px'\n        $upper_text.innerText = date.upper_text\n        this.$upper_header.appendChild($upper_text)\n\n        // remove out-of-bound dates\n        if (date.upper_x > this.layers.grid.getBBox().width) {\n          $upper_text.remove();\n        }\n      }\n    })\n  }\n\n  get_dates_to_draw() {\n    let last_date = null;\n    const dates = this.dates.map((date, i) => {\n      const d = this.get_date_info(date, last_date, i);\n      last_date = d;\n      return d;\n    });\n    return dates;\n  }\n\n  get_date_info(date, last_date_info) {\n    let last_date = last_date_info ? last_date_info.date : date_utils.add(date, 1, \"day\")\n    const date_text = {\n      Hour_lower: date_utils.format(date, \"HH\", this.options.language),\n      \"Quarter Day_lower\": date_utils.format(date, \"HH\", this.options.language),\n      \"Half Day_lower\": date_utils.format(date, \"HH\", this.options.language),\n      Day_lower:\n        date.getDate() !== last_date.getDate()\n          ? date_utils.format(date, \"D\", this.options.language)\n          : \"\",\n      Week_lower:\n        date.getMonth() !== last_date.getMonth()\n          ? date_utils.format(date, \"D MMM\", this.options.language)\n          : date_utils.format(date, \"D\", this.options.language),\n      Month_lower: date_utils.format(date, \"MMMM\", this.options.language),\n      Year_lower: date_utils.format(date, \"YYYY\", this.options.language),\n      Hour_upper:\n        date.getDate() !== last_date.getDate()\n          ? date_utils.format(date, \"D MMMM\", this.options.language)\n          : \"\",\n      \"Quarter Day_upper\":\n        date.getDate() !== last_date.getDate()\n          ? date_utils.format(date, \"D MMM\", this.options.language)\n          : \"\",\n      \"Half Day_upper\":\n        date.getDate() !== last_date.getDate()\n          ? date.getMonth() !== last_date.getMonth()\n            ? date_utils.format(date, \"D MMM\", this.options.language)\n            : date_utils.format(date, \"D\", this.options.language)\n          : \"\",\n      Day_upper:\n        date.getMonth() !== last_date.getMonth() || !last_date_info\n          ? date_utils.format(date, \"MMMM\", this.options.language)\n          : \"\",\n      Week_upper:\n        date.getMonth() !== last_date.getMonth()\n          ? date_utils.format(date, \"MMMM\", this.options.language)\n          : \"\",\n      Month_upper:\n        date.getFullYear() !== last_date.getFullYear()\n          ? date_utils.format(date, \"YYYY\", this.options.language)\n          : \"\",\n      Year_upper:\n        date.getFullYear() !== last_date.getFullYear()\n          ? date_utils.format(date, \"YYYY\", this.options.language)\n          : \"\",\n    };\n    let column_width = this.view_is(VIEW_MODE.MONTH) ? (date_utils.get_days_in_month(date) * this.options.column_width) / 30 : this.options.column_width;\n    const base_pos = {\n      x: last_date_info\n        ? last_date_info.base_pos_x + last_date_info.column_width\n        : 0,\n      lower_y: this.options.header_height - 20,\n      upper_y: this.options.header_height - 50,\n    };\n    const x_pos = {\n      Hour_lower: column_width / 2,\n      Hour_upper: column_width * 12,\n      \"Quarter Day_lower\": column_width / 2,\n      \"Quarter Day_upper\": column_width * 2,\n      \"Half Day_lower\": column_width / 2,\n      \"Half Day_upper\": column_width,\n      Day_lower: column_width / 2,\n      Day_upper: column_width / 2,\n      Week_lower: column_width / 2,\n      Week_upper: (column_width * 4) / 2,\n      Month_lower: column_width / 2,\n      Month_upper: column_width / 2,\n      Year_lower: column_width / 2,\n      Year_upper: (column_width * 30) / 2,\n    };\n    return {\n      date,\n      formatted_date: date_utils.format(date).replaceAll(' ', '_'),\n      column_width,\n      base_pos_x: base_pos.x,\n      upper_text: this.options.lower_text ? this.options.upper_text(date, this.options.view_mode, date_text[`${this.options.view_mode}_upper`]) : date_text[`${this.options.view_mode}_upper`],\n      lower_text: this.options.lower_text ? this.options.lower_text(date, this.options.view_mode, date_text[`${this.options.view_mode}_lower`]) : date_text[`${this.options.view_mode}_lower`],\n      upper_x: base_pos.x + x_pos[`${this.options.view_mode}_upper`],\n      upper_y: base_pos.upper_y,\n      lower_x: base_pos.x + x_pos[`${this.options.view_mode}_lower`],\n      lower_y: base_pos.lower_y,\n    };\n  }\n\n  make_bars() {\n    this.bars = this.tasks.map((task) => {\n      const bar = new Bar(this, task);\n      this.layers.bar.appendChild(bar.group);\n      return bar;\n    });\n  }\n\n  make_arrows() {\n    this.arrows = [];\n    for (let task of this.tasks) {\n      let arrows = [];\n      arrows = task.dependencies\n        .map((task_id) => {\n          const dependency = this.get_task(task_id);\n          if (!dependency) return;\n          const arrow = new Arrow(\n            this,\n            this.bars[dependency._index], // from_task\n            this.bars[task._index], // to_task\n          );\n          this.layers.arrow.appendChild(arrow.element);\n          return arrow;\n        })\n        .filter(Boolean); // filter falsy values\n      this.arrows = this.arrows.concat(arrows);\n    }\n  }\n\n  map_arrows_on_bars() {\n    for (let bar of this.bars) {\n      bar.arrows = this.arrows.filter((arrow) => {\n        return (\n          arrow.from_task.task.id === bar.task.id ||\n          arrow.to_task.task.id === bar.task.id\n        );\n      });\n    }\n  }\n\n  set_width() {\n    const cur_width = this.$svg.getBoundingClientRect().width;\n    const actual_width = this.$svg.querySelector('.grid .grid-row') ? this.$svg\n      .querySelector('.grid .grid-row')\n      .getAttribute('width') : 0;\n    if (cur_width < actual_width) {\n      this.$svg.setAttribute(\"width\", actual_width);\n    }\n  }\n\n  set_scroll_position(date) {\n    if (!date || date === 'start') {\n      date = this.gantt_start\n    } else if (date === 'today') {\n      return this.scroll_today()\n    } else if (typeof date === 'string') {\n      date = date_utils.parse(date)\n    }\n\n    const parent_element = this.$svg.parentElement;\n    if (!parent_element) return;\n\n    const hours_before_first_task = date_utils.diff(\n      date,\n      this.gantt_start,\n      \"hour\",\n    ) + 24;\n\n    const scroll_pos =\n      (hours_before_first_task / this.options.step) *\n      this.options.column_width -\n      this.options.column_width;\n    parent_element.scrollTo({ left: scroll_pos, behavior: 'smooth' })\n  }\n\n  scroll_today() {\n    this.set_scroll_position(new Date())\n  }\n\n  bind_grid_scroll() {\n    const grid_width = this.dates.length * this.options.column_width;\n\n    // 鼠标滚轮\n    $.on(\n      this.$container_header,\n      'wheel',\n      (event) => {\n        if (event.shiftKey || event.deltaX) {\n          const scrollMove = event.deltaX ? event.deltaX : event.deltaY;\n          const scrollX = this.$container_main.scrollLeft || 0;\n          let newScrollX = scrollX + scrollMove;\n          if (newScrollX < 0) {\n            newScrollX = 0;\n          } else if (newScrollX > grid_width) {\n            newScrollX = grid_width;\n          }\n          console.log('ddd ==> scroll-X', newScrollX);\n          this.$container_main.scrollLeft = newScrollX;\n          event.preventDefault();\n        }\n      }\n    );\n\n    $.on(this.$container_main,\n      'scroll',\n      $.throttle(20, () => {\n        const scrollLeft = this.$container_main.scrollLeft;\n        this.$container_header.scrollLeft = scrollLeft;\n      }),\n    );\n  }\n\n  bind_grid_click() {\n    $.on(\n      this.$svg,\n      this.options.popup_trigger,\n      \".grid-row, .grid-header\",\n      () => {\n        this.unselect_all();\n        this.hide_popup();\n      },\n    );\n  }\n\n  bind_bar_create() {\n    // 只针对没有任务项的可以创建\n    let x_on_start = 0;\n    let y_on_start = 0;\n    let is_creating = null;\n    let holder = null;\n\n    const radius = this.options.bar_corner_radius;\n    const height = this.options.bar_height;\n\n    $.on(this.$svg, \"mousedown\", \".grid-row\", (e) => {\n      is_creating = true;\n      // 选区\n      x_on_start = e.offsetX;\n      [, y_on_start] = this.get_snap_coord(e.offsetX, e.offsetY);\n      // const date = this.get_snap_date(x_on_start);\n    });\n\n    $.on(this.$svg, \"mousemove\", (e) => {\n      if (!is_creating) return;\n      let dx = e.offsetX - x_on_start;\n\n      // limit block\n      // const width = this.get_snap_position(Math.abs(dx));\n      // free distance\n      const width = Math.abs(dx);\n      // create rect\n      if (!holder) {\n        holder = createSVG('rect', {\n          x: x_on_start,\n          y: y_on_start,\n          width: 0,\n          height: height,\n          rx: radius,\n          ry: radius,\n          class: 'bar-progress',\n          append_to: this.layers.progress,\n        });\n      }\n      // move-right\n      let x = x_on_start;\n      if (dx < 0) {\n        // move-left\n        x = x_on_start - width;\n      }\n      holder.setAttribute('x', x);\n      holder.setAttribute('width', width);\n    });\n\n    $.on(this.$svg, \"mouseup\", () => {\n      is_creating = false;\n      if (holder) {\n        const start_x = holder.getX();\n        const end_x = holder.getX() + holder.getBBox().width;\n        const date_start = this.get_snap_date(start_x);\n        const date_end = this.get_snap_date(end_x);\n        console.log('ddd ==> date_start end', date_start, date_end);\n      }\n      // this.layers.progress.removeChild(holder);\n      holder = null;\n    });\n  }\n\n  bind_bar_events() {\n    let is_dragging = false;\n    let x_on_start = 0;\n    let x_on_scroll_start = 0;\n    let y_on_start = 0;\n    let is_resizing_left = false;\n    let is_resizing_right = false;\n    let parent_bar_id = null;\n    let bars = []; // instanceof Bar\n    this.bar_being_dragged = null;\n\n    function action_in_progress() {\n      return is_dragging || is_resizing_left || is_resizing_right;\n    }\n\n    $.on(this.$svg, \"mousedown\", \".bar-wrapper, .handle\", (e, element) => {\n      const bar_wrapper = $.closest(\".bar-wrapper\", element);\n      bars.forEach((bar) => bar.group.classList.remove(\"active\"));\n\n      if (element.classList.contains(\"left\")) {\n        is_resizing_left = true;\n      } else if (element.classList.contains(\"right\")) {\n        is_resizing_right = true;\n      } else if (element.classList.contains(\"bar-wrapper\")) {\n        is_dragging = true;\n      }\n\n      bar_wrapper.classList.add(\"active\");\n      if (this.popup) {\n        this.popup.parent.classList.add('hidden');\n      }\n\n      x_on_start = e.offsetX;\n      y_on_start = e.offsetY;\n\n      parent_bar_id = bar_wrapper.getAttribute(\"data-id\");\n      const ids = [\n        parent_bar_id\n      ];\n      // drag sync children\n      if (this.options.drag_sync_child) {\n        ids.push(...this.get_all_dependent_tasks(parent_bar_id));\n      }\n      bars = ids.map((id) => this.get_bar(id));\n\n      this.bar_being_dragged = parent_bar_id;\n\n      bars.forEach((bar) => {\n        if (bar.empty) return;\n        const $bar = bar.$bar;\n        $bar.ox = $bar.getX();\n        $bar.oy = $bar.getY();\n        $bar.owidth = $bar.getWidth();\n        $bar.finaldx = 0;\n      });\n    });\n    $.on(this.$container_main, 'scroll', e => {\n      let elements = document.querySelectorAll('.bar-wrapper');\n      let localBars = [];\n      const ids = [];\n      let dx;\n      if (x_on_scroll_start) {\n        dx = e.currentTarget.scrollLeft - x_on_scroll_start;\n      }\n\n      const daysSinceStart = e.currentTarget.scrollLeft / this.options.column_width * this.options.step / 24;\n      let format_str = \"D MMM\"\n      if ([\"Year\", \"Month\"].includes(this.options.view_mode)) format_str = 'YYYY'\n      else if ([\"Day\", \"Week\"].includes(this.options.view_mode)) format_str = 'MMMM'\n      else if (this.view_is('Half Day')) format_str = 'D'\n      else if (this.view_is('Hour')) format_str = \"D MMMM\"\n\n\n      let currentUpper = date_utils.format(\n        date_utils.add(this.gantt_start, daysSinceStart, 'day'),\n        format_str\n      );\n      const upperTexts = Array.from(document.querySelectorAll('.upper-text'));\n      const $el = upperTexts.find(el => el.textContent === currentUpper)\n      if ($el && !$el.classList.contains('current-upper')) {\n        const $current = document.querySelector('.current-upper')\n        if ($current) {\n          $current.classList.remove('current-upper')\n          $current.style.left = this.upper_texts_x[$current.textContent] + 'px';\n          $current.style.top = this.options.header_height - 50 + 'px';\n        }\n\n        $el.classList.add('current-upper')\n        let dimensions = this.$svg.getBoundingClientRect()\n        $el.style.left = dimensions.x + this.$container_main.scrollLeft + 19 + 'px';\n        // $el.style.top = dimensions.y + this.options.header_height - 50 + 'px';\n        $el.style.top = dimensions.y - this.options.header_height + 14 + 'px';\n      }\n\n      Array.prototype.forEach.call(elements, function (el, i) {\n        ids.push(el.getAttribute('data-id'));\n      });\n\n      if (dx) {\n        localBars = ids.map(id => this.get_bar(id));\n        if (this.options.auto_move_label) {\n          localBars.forEach(bar => {\n            bar.update_label_position_on_horizontal_scroll({ x: dx, sx: e.currentTarget.scrollLeft });\n          });\n        }\n      }\n\n      x_on_scroll_start = e.currentTarget.scrollLeft;\n    });\n\n    $.on(this.$svg, \"mousemove\", (e) => {\n      if (!action_in_progress()) return;\n      const dx = e.offsetX - x_on_start;\n      const dy = e.offsetY - y_on_start;\n\n      bars.forEach((bar) => {\n        if (bar.empty) return;\n        const $bar = bar.$bar;\n        // limit-block\n        // $bar.finaldx = this.get_snap_position(dx);\n        // free-distance\n        $bar.finaldx = dx;\n        this.hide_popup();\n        if (is_resizing_left) {\n          // 左不能大于右\n          if ($bar.finaldx - $bar.owidth >= 0) return;\n          if (parent_bar_id === bar.task.id) {\n            bar.update_bar_position({\n              x: $bar.ox + $bar.finaldx,\n              width: $bar.owidth - $bar.finaldx,\n            });\n          } else {\n            bar.update_bar_position({\n              x: $bar.ox + $bar.finaldx,\n            });\n          }\n        } else if (is_resizing_right) {\n          // 右不能小于左\n          if ($bar.finaldx + $bar.owidth < 0) return;\n          if (parent_bar_id === bar.task.id) {\n            bar.update_bar_position({\n              width: $bar.owidth + $bar.finaldx,\n            });\n          }\n        } else if (is_dragging && !this.options.readonly) {\n          bar.update_bar_position({ x: $bar.ox + $bar.finaldx });\n        }\n      });\n    });\n\n    document.addEventListener(\"mouseup\", (e) => {\n\n      is_dragging = false;\n      is_resizing_left = false;\n      is_resizing_right = false;\n    });\n\n    $.on(this.$svg, \"mouseup\", (e) => {\n      this.bar_being_dragged = null;\n      bars.forEach((bar) => {\n        if (bar.empty) return;\n        const $bar = bar.$bar;\n        if (!$bar.finaldx) return;\n        bar.date_changed();\n        bar.set_action_completed();\n      });\n    });\n\n    this.bind_bar_progress();\n  }\n\n  bind_bar_progress() {\n    let x_on_start = 0;\n    let y_on_start = 0;\n    let is_resizing = null;\n    let bar = null;\n    let $bar_progress = null;\n    let $bar = null;\n\n    $.on(this.$svg, \"mousedown\", \".handle.progress\", (e, handle) => {\n      is_resizing = true;\n      x_on_start = e.offsetX;\n      y_on_start = e.offsetY;\n\n      const $bar_wrapper = $.closest(\".bar-wrapper\", handle);\n      const id = $bar_wrapper.getAttribute(\"data-id\");\n      bar = this.get_bar(id);\n\n      $bar_progress = bar.$bar_progress;\n      $bar = bar.$bar;\n\n      $bar_progress.finaldx = 0;\n      $bar_progress.owidth = $bar_progress.getWidth();\n      $bar_progress.min_dx = -$bar_progress.getWidth();\n      $bar_progress.max_dx = $bar.getWidth() - $bar_progress.getWidth();\n    });\n\n    $.on(this.$svg, \"mousemove\", (e) => {\n      if (!is_resizing) return;\n      let dx = e.offsetX - x_on_start;\n      let dy = e.offsetY - y_on_start;\n\n      if (dx > $bar_progress.max_dx) {\n        dx = $bar_progress.max_dx;\n      }\n      if (dx < $bar_progress.min_dx) {\n        dx = $bar_progress.min_dx;\n      }\n\n      const $handle = bar.$handle_progress;\n      $.attr($bar_progress, \"width\", $bar_progress.owidth + dx);\n      $.attr($handle, \"points\", bar.get_progress_polygon_points());\n      $bar_progress.finaldx = dx;\n    });\n\n    $.on(this.$svg, \"mouseup\", () => {\n      is_resizing = false;\n      if (!($bar_progress && $bar_progress.finaldx)) return;\n\n      $bar_progress.finaldx = 0;\n      bar.progress_changed();\n      bar.set_action_completed();\n      bar = null;\n      $bar_progress = null;\n      $bar = null;\n    });\n  }\n\n  get_all_dependent_tasks(task_id) {\n    let out = [];\n    let to_process = [task_id];\n    while (to_process.length) {\n      const deps = to_process.reduce((acc, curr) => {\n        acc = acc.concat(this.dependency_map[curr]);\n        return acc;\n      }, []);\n\n      out = out.concat(deps);\n      to_process = deps.filter((d) => !to_process.includes(d));\n    }\n\n    return out.filter(Boolean);\n  }\n\n  get_snap_position(dx) {\n    let odx = dx,\n      rem,\n      position;\n\n    if (this.view_is(VIEW_MODE.WEEK)) {\n      rem = dx % (this.options.column_width / 7);\n      position =\n        odx -\n        rem +\n        (rem < this.options.column_width / 14\n          ? 0\n          : this.options.column_width / 7);\n    } else if (this.view_is(VIEW_MODE.MONTH)) {\n      rem = dx % (this.options.column_width / 30);\n      position =\n        odx -\n        rem +\n        (rem < this.options.column_width / 60\n          ? 0\n          : this.options.column_width / 30);\n    } else if (this.view_is(VIEW_MODE.YEAR)) {\n      rem = dx % (this.options.column_width / 365);\n      position =\n        odx -\n        rem +\n        (rem < this.options.column_width / 120\n          ? 0\n          : this.options.column_width / 365);\n    } else {\n      rem = dx % this.options.column_width;\n      position =\n        odx -\n        rem +\n        (rem < this.options.column_width / 2 ? 0 : this.options.column_width);\n    }\n    return position;\n  }\n\n  get_snap_coord(ox, oy) {\n    let start_x = ox;\n    // 网格区\n    if (\n      this.view_is(VIEW_MODE.HOUR) ||\n      this.view_is(VIEW_MODE.HALF_DAY) ||\n      this.view_is(VIEW_MODE.QUARTER_DAY) ||\n      this.view_is(VIEW_MODE.DAY)\n    ) {\n      start_x = parseInt(ox / this.options.column_width) * this.options.column_width;\n    }\n\n    const padding = this.options.padding / 2;\n    // const header_height = this.options.header_height;\n    const header_height = 0;\n    const row_height = this.options.bar_height + this.options.padding;\n\n    const mod = parseInt((oy - header_height) / row_height);\n    const start_y = header_height + mod * row_height + padding;\n\n    return [start_x, start_y];\n  }\n\n  get_snap_date(x) {\n    const x_in_units = x / this.options.column_width;\n    return date_utils.add(\n      this.gantt_start,\n      x_in_units * this.options.step,\n      \"hour\",\n    );\n  }\n\n  unselect_all() {\n    [...this.$svg.querySelectorAll(\".bar-wrapper\")].forEach((el) => {\n      el.classList.remove(\"active\");\n    });\n    if (this.popup) {\n      this.popup.parent.classList.remove('hidden');\n    }\n  }\n\n  view_is(modes) {\n    if (typeof modes === \"string\") {\n      return this.options.view_mode === modes;\n    }\n\n    if (Array.isArray(modes)) {\n      return modes.some((mode) => this.options.view_mode === mode);\n    }\n\n    return false;\n  }\n\n  get_task(id) {\n    return this.tasks.find((task) => {\n      return task.id === id;\n    });\n  }\n\n  get_bar(id) {\n    return this.bars.find((bar) => {\n      return bar.task.id === id;\n    });\n  }\n\n  show_popup(options) {\n    if (this.options.popup === false) return\n    if (!this.popup) {\n      this.popup = new Popup(\n        this.$popup_wrapper,\n        this.options.popup,\n      );\n    }\n    this.popup.show(options);\n  }\n\n  hide_popup() {\n    this.popup && this.popup.hide();\n  }\n\n  trigger_event(event, args) {\n    if (this.options[\"on_\" + event]) {\n      this.options[\"on_\" + event].apply(null, args);\n    }\n  }\n\n  /**\n   * Gets the oldest starting date from the list of tasks\n   *\n   * @returns Date\n   * @memberof Gantt\n   */\n  get_oldest_starting_date() {\n    if (!this.tasks.length) return new Date()\n    return this.tasks\n      .map((task) => task._start)\n      .reduce((prev_date, cur_date) =>\n        (cur_date && cur_date <= prev_date) ? cur_date : prev_date,\n      );\n  }\n\n  /**\n   * Clear all elements from the parent svg element\n   *\n   * @memberof Gantt\n   */\n  clear() {\n    this.$svg.innerHTML = \"\";\n    this.$header?.remove?.()\n    this.$current_highlight?.remove?.()\n    this.popup?.hide?.()\n  }\n}\n\nGantt.VIEW_MODE = VIEW_MODE;\n\nfunction generate_id(task) {\n  return task.name + \"_\" + Math.random().toString(36).slice(2, 12);\n}\n"],"names":["YEAR","MONTH","DAY","HOUR","MINUTE","SECOND","MILLISECOND","SHORTENED","January","February","March","April","May","June","July","August","September","October","November","December","date_utils","parse_duration","duration","matches","exec","parseInt","scale","parse","date","date_separator","time_separator","Date","date_parts","time_parts","parts","split","map","val","vals","length","parseFloat","concat","to_string","with_time","TypeError","this","get_date_values","i","padStart","date_string","time_string","format","format_string","lang","month_name","Intl","DateTimeFormat","month","month_name_capitalized","charAt","toUpperCase","slice","values","d","format_map","YYYY","MM","DD","HH","mm","ss","SSS","D","MMMM","MMM","str","formatted_values","Object","keys","sort","a","b","forEach","key","includes","replaceAll","push","value","diff","date_a","date_b","milliseconds","seconds","hours","minutes","days","months","years","endsWith","Math","floor","today","now","add","qty","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","getMilliseconds","start_of","scores","should_reset","_scale","clone","get_days_in_month","no_of_days","year","targetLength","padString","String","repeat","$","expr","con","document","querySelector","createSVG","tag","attrs","elem","createElementNS","attr","append_to","appendChild","innerHTML","setAttribute","animateSVG","svgElement","from","to","animatedSvgElement","dur","begin","animEl","attributeName","animateElement","calcMode","keyTimes","keySplines","cubic_bezier","getAnimationElement","event","createEvent","initEvent","eventName","dispatchEvent","name","ease","linear","on","element","selector","callback","delegate","bind","off","handler","removeEventListener","addEventListener","e","delegatedTarget","target","closest","call","parentNode","getAttribute","throttle","delay","noTrailing","debounceMode","timeoutID","lastExec","undefined","self","elapsed","Number","args","arguments","apply","clear","clearTimeout","setTimeout","Bar","constructor","gantt","task","set_defaults","prepare","draw","action_completed","prepare_values","prepare_helpers","empty","invalid","height","options","bar_height","image_size","compute_x","compute_y","compute_duration","corner_radius","bar_corner_radius","width","column_width","progress_width","progress","group","class","custom_class","important","id","bar_group","handle_group","SVGElement","prototype","getX","getY","getWidth","getHeight","getEndX","prepare_expected_progress_values","compute_expected_progress","expected_progress_width","expected_progress","draw_bar","draw_progress_bar","show_expected_progress","draw_expected_progress_bar","draw_label","draw_resize_handles","thumbnail","draw_thumbnail","$bar","x","y","rx","ry","classList","$expected_bar_progress","$bar_progress","_start","gantt_start","step","$date_highlight","createElement","style","top","header_height","left","$lower_header","prepend","x_coord","requestAnimationFrame","update_label_position","defs","clipPath","href","readonly","bar","handle_width","$handle_progress","points","get_progress_polygon_points","join","bar_progress","icon_width","icon_height","setup_click_event","timeout","task_id","trigger_event","screenX","screenY","show_popup","offsetX","display","popup","hide","popup_trigger","bar_being_dragged","subtitle","language","_end","target_element","title","update_bar_position","drag_limit_child","dependencies","dep","get_bar","reduce","_","curr","update_attr","update_handle_position","date_changed","update_expected_progressbar_position","update_progressbar_position","update_arrow_position","update_label_position_on_horizontal_scroll","sx","container","label","img","img_mask","barWidthLimit","newLabelX","newImgX","imgWidth","getBBox","labelEndX","viewportCentral","clientWidth","contains","changed","new_start_date","new_end_date","compute_start_end_date","progress_changed","new_progress","compute_progress","set_action_completed","x_in_units","width_in_units","task_start","view_is","padding","_index","get_snap_position","dx","rem","position","odx","isNaN","x_offset_label_img","labelWidth","barWidth","remove","handle","arrows","arrow","update","Arrow","from_task","to_task","calculate_path","drawInner","rowHeight","taskHeight","arrowCurve","arrow_curve","arrowIndent","taskFrom","taskTo","taskFromX2","taskFromY1","taskToX1","taskToEndPosition","taskFromEndPosition","path","trianglePoints","svgPath","fill","svgPolygon","Popup","parent","custom_html","make","pointer","show","Error","html","position_meta","HTMLElement","getBoundingClientRect","opacity","VIEW_MODE","QUARTER_DAY","HALF_DAY","WEEK","VIEW_MODE_PADDING","DEFAULT_OPTIONS","view_modes","view_mode","date_format","drag_sync_child","highlight_weekend","scroll_to","lines","auto_move_label","today_button","view_mode_select","Gantt","wrapper","tasks","setup_wrapper","setup_options","setup_tasks","change_view_mode","bind_events","svg_element","wrapper_element","$svg","$container","$container_header","$container_main","parentElement","$popup_wrapper","view_mode_padding","entries","start","end","tmpDuration","every","deps","trim","filter","random","toString","generate_id","setup_dependencies","dependency_map","t","refresh","mode","update_view_scale","setup_dates","render","setup_gantt_dates","setup_date_values","gantt_end","viewKey","padding_start","padding_end","setHours","dates","cur_date","bind_grid_scroll","bind_grid_click","bind_bar_create","bind_bar_events","setup_layers","make_grid","make_dates","make_bars","make_grid_extras","make_arrows","map_arrows_on_bars","set_width","set_scroll_position","layers","layer","make_grid_background","make_grid_rows","make_grid_header","make_grid_highlights","make_grid_ticks","grid_width","grid_height","overflow","rows_layer","grid","row_width","row_height","row_y","$header","$upper_header","make_side_header","$side_header","$select","$el","selected","disabled","textContent","$option","$today_button","onclick","scroll_today","min","scrollLeft","tick_x","tick_height","$lines_layer","x1","y1","x2","y2","tick_class","highlightWeekends","setDate","getDay","computeGridHighlightDimensions","todayDate","startDate","endDate","setMonth","setFullYear","console","log","$overlay_wrapper","create_el","classes","$current_highlight","$today","getElementById","upper_texts_x","get_dates_to_draw","$lower_text","lower_x","lower_y","formatted_date","innerText","lower_text","upper_text","upper_x","$upper_text","upper_y","last_date","get_date_info","last_date_info","date_text","Hour_lower","Day_lower","Week_lower","Month_lower","Year_lower","Hour_upper","Day_upper","Week_upper","Month_upper","Year_upper","base_pos","base_pos_x","x_pos","bars","dependency","get_task","Boolean","cur_width","actual_width","parent_element","scroll_pos","scrollTo","behavior","shiftKey","deltaX","scrollMove","deltaY","newScrollX","preventDefault","unselect_all","hide_popup","x_on_start","y_on_start","is_creating","holder","radius","get_snap_coord","offsetY","abs","start_x","end_x","date_start","get_snap_date","date_end","is_dragging","x_on_scroll_start","is_resizing_left","is_resizing_right","parent_bar_id","bar_wrapper","ids","get_all_dependent_tasks","ox","oy","owidth","finaldx","elements","querySelectorAll","localBars","currentTarget","daysSinceStart","format_str","currentUpper","Array","find","el","$current","dimensions","bind_bar_progress","is_resizing","min_dx","max_dx","$handle","out","to_process","acc","modes","isArray","some","get_oldest_starting_date","prev_date"],"mappings":"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"}