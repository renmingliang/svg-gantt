{"version":3,"file":"frappe-gantt.min.js","sources":["../src/date_utils.js","../src/svg_utils.js","../src/lang_utils.js","../src/version.js","../src/bar.js","../src/arrow.js","../src/popup.js","../src/backdrop.js","../src/index.js"],"sourcesContent":["const YEAR = \"year\";\nconst MONTH = \"month\";\nconst DAY = \"day\";\nconst HOUR = \"hour\";\nconst MINUTE = \"minute\";\nconst SECOND = \"second\";\nconst MILLISECOND = \"millisecond\";\n\nconst SHORTENED = {\n  January: \"Jan\",\n  February: \"Feb\",\n  March: \"Mar\",\n  April: \"Apr\",\n  May: \"May\",\n  June: \"Jun\",\n  July: \"Jul\",\n  August: \"Aug\",\n  September: \"Sep\",\n  October: \"Oct\",\n  November: \"Nov\",\n  December: \"Dec\"\n};\n\nexport default {\n  parse_duration(duration) {\n    const regex = /([0-9]{1,})+(y|m|d|h|min|s|ms)/gm;\n    const matches = regex.exec(duration);\n\n    if (matches !== null) {\n      if (matches[2] === \"y\") {\n        return { duration: parseInt(matches[1]), scale: `year` };\n      } else if (matches[2] === \"m\") {\n        return { duration: parseInt(matches[1]), scale: `month` };\n      } else if (matches[2] === \"d\") {\n        return { duration: parseInt(matches[1]), scale: `day` };\n      } else if (matches[2] === \"h\") {\n        return { duration: parseInt(matches[1]), scale: `hour` };\n      } else if (matches[2] === \"min\") {\n        return { duration: parseInt(matches[1]), scale: `minute` };\n      } else if (matches[2] === \"s\") {\n        return { duration: parseInt(matches[1]), scale: `second` };\n      } else if (matches[2] === \"ms\") {\n        return { duration: parseInt(matches[1]), scale: `millisecond` };\n      }\n    }\n  },\n  parse(date, date_separator = \"-\", time_separator = /[.:]/) {\n    if (date instanceof Date) {\n      return date;\n    }\n    if (typeof date === \"string\") {\n      let date_parts, time_parts;\n      const parts = date.split(\" \");\n      date_parts = parts[0]\n        .split(date_separator)\n        .map((val) => parseInt(val, 10));\n      time_parts = parts[1] && parts[1].split(time_separator);\n\n      // month is 0 indexed\n      date_parts[1] = date_parts[1] ? date_parts[1] - 1 : 0;\n\n      let vals = date_parts;\n\n      if (time_parts && time_parts.length) {\n        if (time_parts.length === 4) {\n          time_parts[3] = \"0.\" + time_parts[3];\n          time_parts[3] = parseFloat(time_parts[3]) * 1000;\n        }\n        vals = vals.concat(time_parts);\n      }\n      return new Date(...vals);\n    }\n  },\n\n  to_string(date, with_time = false) {\n    if (!(date instanceof Date)) {\n      throw new TypeError(\"Invalid argument type\");\n    }\n    const vals = this.get_date_values(date).map((val, i) => {\n      if (i === 1) {\n        // add 1 for month\n        val = val + 1;\n      }\n\n      if (i === 6) {\n        return padStart(val + \"\", 3, \"0\");\n      }\n\n      return padStart(val + \"\", 2, \"0\");\n    });\n    const date_string = `${vals[0]}-${vals[1]}-${vals[2]}`;\n    const time_string = `${vals[3]}:${vals[4]}:${vals[5]}.${vals[6]}`;\n\n    return date_string + (with_time ? \" \" + time_string : \"\");\n  },\n\n  format(date, format_string = \"YYYY-MM-DD HH:mm:ss.SSS\", lang = \"en\") {\n    const dateTimeFormat = new Intl.DateTimeFormat(lang, {\n      month: \"long\",\n    });\n    const month_name = dateTimeFormat.format(date);\n    const month_name_capitalized =\n      month_name.charAt(0).toUpperCase() + month_name.slice(1);\n\n    const values = this.get_date_values(date);\n    const format_map = {\n      YYYY: values[0],\n      MM: padStart(values[1] + 1, 2, 0),\n      DD: padStart(values[2], 2, 0),\n      HH: padStart(values[3], 2, 0),\n      mm: padStart(values[4], 2, 0),\n      ss: padStart(values[5], 2, 0),\n      M: values[1] + 1,\n      D: values[2],\n      h: values[3],\n      m: values[4],\n      s: values[5],\n      SSS: values[6],\n      Q: parseInt((values[1] + 1) / 3) + 1,\n      MMMM: month_name_capitalized,\n      MMM: SHORTENED[month_name_capitalized] || month_name_capitalized,\n    };\n\n    let str = format_string;\n    const formatted_values = [];\n\n    Object.keys(format_map)\n      .sort((a, b) => b.length - a.length) // big string first\n      .forEach((key) => {\n        if (str.includes(key)) {\n          str = str.replaceAll(key, `$${formatted_values.length}`);\n          formatted_values.push(format_map[key]);\n        }\n      });\n\n    formatted_values.forEach((value, i) => {\n      str = str.replaceAll(`$${i}`, value);\n    });\n\n    return str;\n  },\n\n  diff(date_a, date_b, scale = DAY) {\n    let milliseconds, seconds, hours, minutes, days, months, years;\n\n    milliseconds = date_a - date_b;\n    seconds = milliseconds / 1000;\n    minutes = seconds / 60;\n    hours = minutes / 60;\n    days = hours / 24;\n    months = days / 30;\n    years = months / 12;\n\n    if (!scale.endsWith(\"s\")) {\n      scale += \"s\";\n    }\n\n    return Math.floor(\n      {\n        milliseconds,\n        seconds,\n        minutes,\n        hours,\n        days,\n        months,\n        years,\n      }[scale],\n    );\n  },\n\n  today() {\n    const vals = this.get_date_values(new Date()).slice(0, 3);\n    return new Date(...vals);\n  },\n\n  now() {\n    return new Date();\n  },\n\n  add(date, qty, scale) {\n    qty = parseInt(qty, 10);\n    const vals = [\n      date.getFullYear() + (scale === YEAR ? qty : 0),\n      date.getMonth() + (scale === MONTH ? qty : 0),\n      date.getDate() + (scale === DAY ? qty : 0),\n      date.getHours() + (scale === HOUR ? qty : 0),\n      date.getMinutes() + (scale === MINUTE ? qty : 0),\n      date.getSeconds() + (scale === SECOND ? qty : 0),\n      date.getMilliseconds() + (scale === MILLISECOND ? qty : 0),\n    ];\n    return new Date(...vals);\n  },\n\n  start_of(date, scale) {\n    const scores = {\n      [YEAR]: 6,\n      [MONTH]: 5,\n      [DAY]: 4,\n      [HOUR]: 3,\n      [MINUTE]: 2,\n      [SECOND]: 1,\n      [MILLISECOND]: 0,\n    };\n\n    function should_reset(_scale) {\n      const max_score = scores[scale];\n      return scores[_scale] <= max_score;\n    }\n\n    const vals = [\n      date.getFullYear(),\n      should_reset(YEAR) ? 0 : date.getMonth(),\n      should_reset(MONTH) ? 1 : date.getDate(),\n      should_reset(DAY) ? 0 : date.getHours(),\n      should_reset(HOUR) ? 0 : date.getMinutes(),\n      should_reset(MINUTE) ? 0 : date.getSeconds(),\n      should_reset(SECOND) ? 0 : date.getMilliseconds(),\n    ];\n\n    return new Date(...vals);\n  },\n\n  clone(date) {\n    return new Date(...this.get_date_values(date));\n  },\n\n  get_date_values(date) {\n    return [\n      date.getFullYear(),\n      date.getMonth(),\n      date.getDate(),\n      date.getHours(),\n      date.getMinutes(),\n      date.getSeconds(),\n      date.getMilliseconds(),\n    ];\n  },\n\n  get_days_in_month(date) {\n    const no_of_days = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n\n    const month = date.getMonth();\n\n    if (month !== 1) {\n      return no_of_days[month];\n    }\n\n    // Feb\n    const year = date.getFullYear();\n    if ((year % 4 === 0 && year % 100 != 0) || year % 400 === 0) {\n      return 29;\n    }\n    return 28;\n  },\n};\n\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/padStart\nfunction padStart(str, targetLength, padString) {\n  str = str + \"\";\n  targetLength = targetLength >> 0;\n  padString = String(typeof padString !== \"undefined\" ? padString : \" \");\n  if (str.length > targetLength) {\n    return String(str);\n  } else {\n    targetLength = targetLength - str.length;\n    if (targetLength > padString.length) {\n      padString += padString.repeat(targetLength / padString.length);\n    }\n    return padString.slice(0, targetLength) + String(str);\n  }\n}\n","export function $(expr, con) {\n  return typeof expr === \"string\"\n    ? (con || document).querySelector(expr)\n    : expr || null;\n}\n\nexport function createSVG(tag, attrs) {\n  const elem = document.createElementNS(\"http://www.w3.org/2000/svg\", tag);\n  for (let attr in attrs) {\n    if (attr === \"append_to\") {\n      const parent = attrs.append_to;\n      parent.appendChild(elem);\n    } else if (attr === \"innerHTML\") {\n      elem.innerHTML = attrs.innerHTML;\n    } else if (attr === 'clipPath') {\n      elem.setAttribute('clip-path', 'url(#' + attrs[attr] + ')');\n    } else {\n      elem.setAttribute(attr, attrs[attr]);\n    }\n  }\n  return elem;\n}\n\nexport function animateSVG(svgElement, attr, from, to) {\n  const animatedSvgElement = getAnimationElement(svgElement, attr, from, to);\n\n  if (animatedSvgElement === svgElement) {\n    // triggered 2nd time programmatically\n    // trigger artificial click event\n    const event = document.createEvent(\"HTMLEvents\");\n    event.initEvent(\"click\", true, true);\n    event.eventName = \"click\";\n    animatedSvgElement.dispatchEvent(event);\n  }\n}\n\nfunction getAnimationElement(\n  svgElement,\n  attr,\n  from,\n  to,\n  dur = \"0.4s\",\n  begin = \"0.1s\",\n) {\n  const animEl = svgElement.querySelector(\"animate\");\n  if (animEl) {\n    $.attr(animEl, {\n      attributeName: attr,\n      from,\n      to,\n      dur,\n      begin: \"click + \" + begin, // artificial click\n    });\n    return svgElement;\n  }\n\n  const animateElement = createSVG(\"animate\", {\n    attributeName: attr,\n    from,\n    to,\n    dur,\n    begin,\n    calcMode: \"spline\",\n    values: from + \";\" + to,\n    keyTimes: \"0; 1\",\n    keySplines: cubic_bezier(\"ease-out\"),\n  });\n  svgElement.appendChild(animateElement);\n\n  return svgElement;\n}\n\nfunction cubic_bezier(name) {\n  return {\n    ease: \".25 .1 .25 1\",\n    linear: \"0 0 1 1\",\n    \"ease-in\": \".42 0 1 1\",\n    \"ease-out\": \"0 0 .58 1\",\n    \"ease-in-out\": \".42 0 .58 1\",\n  }[name];\n}\n\n$.on = (element, event, selector, callback) => {\n  if (!callback) {\n    callback = selector;\n    $.bind(element, event, callback);\n  } else {\n    $.delegate(element, event, selector, callback);\n  }\n};\n\n$.off = (element, event, handler) => {\n  element.removeEventListener(event, handler);\n};\n\n$.bind = (element, event, callback) => {\n  event.split(/\\s+/).forEach(function (event) {\n    element.addEventListener(event, callback);\n  });\n};\n\n$.delegate = (element, event, selector, callback) => {\n  element.addEventListener(event, function (e) {\n    const delegatedTarget = e.target.closest(selector);\n    if (delegatedTarget) {\n      e.delegatedTarget = delegatedTarget;\n      callback.call(this, e, delegatedTarget);\n    }\n  });\n};\n\n$.closest = (selector, element) => {\n  if (!element) return null;\n\n  if (element.matches(selector)) {\n    return element;\n  }\n\n  return $.closest(selector, element.parentNode);\n};\n\n$.attr = (element, attr, value) => {\n  if (!value && typeof attr === \"string\") {\n    return element.getAttribute(attr);\n  }\n\n  if (typeof attr === \"object\") {\n    for (let key in attr) {\n      $.attr(element, key, attr[key]);\n    }\n    return;\n  }\n\n  element.setAttribute(attr, value);\n};\n\n$.throttle = function (delay, noTrailing, callback, debounceMode) {\n    // After wrapper has stopped being called, this timeout ensures that\n    // `callback` is executed at the proper times in `throttle` and `end`\n    // debounce modes.\n    var timeoutID;\n\n    // Keep track of the last time `callback` was executed.\n    var lastExec = 0;\n\n    // `noTrailing` defaults to falsy.\n    if (typeof noTrailing !== 'boolean') {\n        debounceMode = callback;\n        callback = noTrailing;\n        noTrailing = undefined;\n    }\n\n    // The `wrapper` function encapsulates all of the throttling / debouncing\n    // functionality and when executed will limit the rate at which `callback`\n    // is executed.\n    function wrapper() {\n        var self = this;\n        var elapsed = Number(new Date()) - lastExec;\n        var args = arguments;\n\n        // Execute `callback` and update the `lastExec` timestamp.\n        function exec() {\n            lastExec = Number(new Date());\n            callback.apply(self, args);\n        }\n\n        // If `debounceMode` is true (at begin) this is used to clear the flag\n        // to allow future `callback` executions.\n        function clear() {\n            timeoutID = undefined;\n        }\n\n        if (debounceMode && !timeoutID) {\n            // Since `wrapper` is being called for the first time and\n            // `debounceMode` is true (at begin), execute `callback`.\n            exec();\n        }\n\n        // Clear any existing timeout.\n        if (timeoutID) {\n            clearTimeout(timeoutID);\n        }\n\n        if (debounceMode === undefined && elapsed > delay) {\n            // In throttle mode, if `delay` time has been exceeded, execute\n            // `callback`.\n            exec();\n        } else if (noTrailing !== true) {\n            // In trailing throttle mode, since `delay` time has not been\n            // exceeded, schedule `callback` to execute `delay` ms after most\n            // recent execution.\n            //\n            // If `debounceMode` is true (at begin), schedule `clear` to execute\n            // after `delay` ms.\n            //\n            // If `debounceMode` is false (at end), schedule `callback` to\n            // execute after `delay` ms.\n            timeoutID = setTimeout(\n                debounceMode ? clear : exec,\n                debounceMode === undefined ? delay - elapsed : delay,\n            );\n        }\n    }\n\n    // Return the wrapper function.\n    return wrapper;\n};\n","export const VIEW_MODE = {\n  HOUR: \"Hour\",\n  QUARTER_DAY: \"Quarter Day\",\n  HALF_DAY: \"Half Day\",\n  DAY: \"Day\",\n  WEEK: \"Week\",\n  MONTH: \"Month\",\n  QUARTER_YEAR: \"Quarter Year\",\n  YEAR: \"Year\",\n};\n\nexport const getLang = function(lan) {\n  if (lan === 'zh') {\n    return LAN_ZH;\n  } else {\n    return LAN_EN;\n  }\n}\n\nexport const LAN_ZH = {\n  HOUR: \"时\",\n  QUARTER_DAY: \"季时\",\n  HALF_DAY: \"半天\",\n  DAY: \"日\",\n  WEEK: \"周\",\n  MONTH: \"月\",\n  QUARTER_YEAR: \"季\",\n  YEAR: \"年\",\n  TODAY: \"今天\"\n};\n\nexport const LAN_EN = {\n  HOUR: 'Hour',\n  QUARTER_DAY: 'Quarter Day',\n  HALF_DAY: 'Half Day',\n  DAY: 'Day',\n  WEEK: 'Week',\n  MONTH: 'Month',\n  QUARTER_YEAR: 'Quarter Year',\n  YEAR: 'Year',\n  TODAY: \"Today\"\n};","const version = '1.0.0';\n\nexport default version;\n","import date_utils from \"./date_utils\";\nimport { $, createSVG, animateSVG } from \"./svg_utils\";\nimport { VIEW_MODE } from \"./lang_utils\";\n\nexport default class Bar {\n  constructor(gantt, task) {\n    this.set_defaults(gantt, task);\n    this.prepare();\n    this.draw();\n    this.bind();\n  }\n\n  set_defaults(gantt, task) {\n    this.action_completed = false;\n    this.gantt = gantt;\n    this.task = task;\n  }\n\n  prepare() {\n    this.prepare_doms();\n    this.prepare_values();\n    this.prepare_helpers();\n  }\n\n  prepare_doms() {\n    this.group = createSVG(\"g\", {\n      class: \"bar-wrapper\" + (this.task.custom_class ? \" \" + this.task.custom_class : \"\") + (this.task.important ? ' important' : ''),\n      \"data-id\": this.task.id,\n    });\n    this.bar_group = createSVG(\"g\", {\n      class: \"bar-group\",\n      append_to: this.group,\n    });\n    this.handle_group = createSVG(\"g\", {\n      class: \"handle-group\",\n      append_to: this.group,\n    });\n  }\n\n  prepare_values() {\n    this.empty = this.task.empty;\n    this.invalid = this.task.invalid;\n    this.height = this.gantt.options.bar_height;\n    this.image_size = this.height - 5;\n    this.compute_x();\n    this.compute_y();\n    this.compute_duration();\n    this.corner_radius = this.gantt.options.bar_corner_radius;\n    this.width = this.gantt.options.column_width * this.duration;\n    this.progress_width =\n      this.gantt.options.column_width *\n      this.duration *\n      (this.task.progress / 100) || 0;\n  }\n\n  prepare_helpers() {\n    SVGElement.prototype.getX = function () {\n      return +this.getAttribute(\"x\");\n    };\n    SVGElement.prototype.getY = function () {\n      return +this.getAttribute(\"y\");\n    };\n    SVGElement.prototype.getWidth = function () {\n      return +this.getAttribute(\"width\");\n    };\n    SVGElement.prototype.getHeight = function () {\n      return +this.getAttribute(\"height\");\n    };\n    SVGElement.prototype.getEndX = function () {\n      return this.getX() + this.getWidth();\n    };\n  }\n\n  prepare_expected_progress_values() {\n    this.compute_expected_progress();\n    this.expected_progress_width =\n      this.gantt.options.column_width *\n      this.duration *\n      (this.expected_progress / 100) || 0;\n  }\n\n  draw() {\n    if (this.empty) return;\n    this.draw_bar();\n    this.draw_progress_bar();\n    if (this.gantt.options.show_expected_progress) {\n      this.prepare_expected_progress_values();\n      this.draw_expected_progress_bar();\n    }\n    this.draw_label();\n    this.draw_resize_handles();\n\n    if (this.task.thumbnail) {\n      this.draw_thumbnail();\n    }\n  }\n\n  draw_bar() {\n    this.$bar = createSVG(\"rect\", {\n      x: this.x,\n      y: this.y,\n      width: this.width,\n      height: this.height,\n      rx: this.corner_radius,\n      ry: this.corner_radius,\n      class: \"bar-inner\",\n      append_to: this.bar_group,\n    });\n\n    animateSVG(this.$bar, \"width\", 0, this.width);\n\n    if (this.invalid) {\n      this.$bar.classList.add(\"bar-invalid\");\n    }\n  }\n\n  draw_expected_progress_bar() {\n    if (this.invalid) return;\n    this.$expected_bar_progress = createSVG(\"rect\", {\n      x: this.x,\n      y: this.y,\n      width: this.expected_progress_width,\n      height: this.height,\n      rx: this.corner_radius,\n      ry: this.corner_radius,\n      class: \"bar-expected-progress\",\n      append_to: this.bar_group,\n    });\n\n    animateSVG(\n      this.$expected_bar_progress,\n      \"width\",\n      0,\n      this.expected_progress_width,\n    );\n  }\n\n  draw_progress_bar() {\n    if (this.invalid) return;\n    this.$bar_progress = createSVG(\"rect\", {\n      x: this.x,\n      y: this.y,\n      width: this.progress_width,\n      height: this.height,\n      rx: this.corner_radius,\n      ry: this.corner_radius,\n      class: \"bar-progress\",\n      append_to: this.bar_group,\n    });\n    animateSVG(this.$bar_progress, \"width\", 0, this.progress_width);\n  }\n\n  draw_label() {\n    let x_coord = this.x + this.$bar.getWidth() / 2;\n\n    if (this.task.thumbnail) {\n      x_coord = this.x + 10 + this.image_size + 5;\n    }\n\n    createSVG(\"text\", {\n      x: x_coord,\n      y: this.y + this.height / 2,\n      innerHTML: this.task.name,\n      class: \"bar-label\",\n      append_to: this.bar_group,\n    });\n    // labels get BBox in the next tick\n    requestAnimationFrame(() => this.update_label_position());\n  }\n\n  draw_thumbnail() {\n    let x_offset = 10, y_offset = 2;\n    let defs, clipPath;\n\n    defs = createSVG('defs', {\n      append_to: this.bar_group\n    });\n\n    createSVG('rect', {\n      id: 'rect_' + this.task.id,\n      x: this.x + x_offset,\n      y: this.y + y_offset,\n      width: this.image_size,\n      height: this.image_size,\n      rx: '15',\n      class: 'img_mask',\n      append_to: defs\n    });\n\n    clipPath = createSVG('clipPath', {\n      id: 'clip_' + this.task.id,\n      append_to: defs\n    });\n\n    createSVG('use', {\n      href: '#rect_' + this.task.id,\n      append_to: clipPath\n    });\n\n    createSVG('image', {\n      x: this.x + x_offset,\n      y: this.y + y_offset,\n      width: this.image_size,\n      height: this.image_size,\n      class: 'bar-img',\n      href: this.task.thumbnail,\n      clipPath: 'clip_' + this.task.id,\n      append_to: this.bar_group\n    });\n  }\n\n  draw_resize_handles() {\n    if (this.gantt.options.readonly) return;\n\n    const bar = this.$bar;\n    const handle_width = this.gantt.options.handle_width;\n\n    const gw = bar.getWidth();\n\n    createSVG(\"rect\", {\n      x: bar.getX() + 1,\n      y: bar.getY() + 1,\n      width: handle_width,\n      height: this.height - 2,\n      rx: this.corner_radius,\n      ry: this.corner_radius,\n      class: \"handle left\",\n      append_to: this.handle_group,\n    });\n\n    createSVG(\"rect\", {\n      x: bar.getX() + (gw > handle_width ? (gw - handle_width - 1) : gw),\n      y: bar.getY() + 1,\n      width: handle_width,\n      height: this.height - 2,\n      rx: this.corner_radius,\n      ry: this.corner_radius,\n      class: \"handle right\",\n      append_to: this.handle_group,\n    });\n\n    if (this.gantt.options.drag_bar_progress) {\n      this.$handle_progress = createSVG('polygon', {\n        points: this.get_progress_polygon_points().join(','),\n        class: 'handle progress',\n        append_to: this.handle_group,\n      });\n    }\n  }\n\n  get_progress_polygon_points() {\n    const bar_progress = this.$bar_progress;\n    if (!bar_progress) return [];\n    let icon_width = 10;\n    let icon_height = 15;\n\n    return [\n      bar_progress.getEndX() - icon_width / 2,\n      bar_progress.getY() + bar_progress.getHeight() / 2,\n\n      bar_progress.getEndX(),\n      bar_progress.getY() + bar_progress.getHeight() / 2 - icon_height / 2,\n\n      bar_progress.getEndX() + icon_width / 2,\n      bar_progress.getY() + bar_progress.getHeight() / 2,\n\n      bar_progress.getEndX(),\n      bar_progress.getY() + bar_progress.getHeight() / 2 + icon_height / 2,\n\n      bar_progress.getEndX() - icon_width / 2,\n      bar_progress.getY() + bar_progress.getHeight() / 2,\n    ];\n  }\n\n  bind() {\n    this.setup_click_event();\n  }\n\n  setup_click_event() {\n    $.on(this.group, \"mouseover\", (e) => {\n      this.gantt.trigger_event(\"hover\", [this.task, e.screenX, e.screenY, e])\n    })\n\n    let timeout;\n    $.on(this.group, \"mouseenter\", (e) => timeout = setTimeout(() => {\n      const scrollLeft = this.gantt.$container_main.scrollLeft;\n      this.show_popup(e.offsetX - scrollLeft);\n    }, 600))\n\n    $.on(this.group, \"mouseleave\", () => {\n      clearTimeout(timeout)\n      this.gantt.hide_popup();\n    })\n\n    let clickTimeout;\n    let clickCount = 0;\n    $.on(this.group, 'click', () => {\n      if (this.action_completed) {\n        // just finished a move action, wait for a few seconds\n        return;\n      }\n\n      clickCount += 1;\n      if (clickCount === 1) {\n        clickTimeout = setTimeout(() => {\n            this.gantt.trigger_event('click', [this.task]);\n            clickCount = 0;\n        }, 250);\n      } else {\n        clearTimeout(clickTimeout);\n        clickCount = 0;\n      }\n    });\n\n    $.on(this.group, \"dblclick\", () => {\n      clearTimeout(clickTimeout);\n      clickCount = 0;\n      this.gantt.trigger_event(\"double_click\", [this.task]);\n    });\n  }\n\n  show_popup(x) {\n    if (this.gantt.bar_being_dragged) return;\n\n    const start_date = date_utils.format(\n      this.task._start,\n      \"MM月DD日\",\n      this.gantt.options.language,\n    );\n    const end_date = date_utils.format(\n      date_utils.add(this.task._end, -1, \"second\"),\n      \"MM月DD日\",\n      this.gantt.options.language,\n    );\n    const subtitle = `${start_date} -  ${end_date}<br/>Progress: ${this.task.progress}`;\n\n    this.gantt.show_popup({\n      x,\n      target_element: this.$bar,\n      title: this.task.name,\n      subtitle: subtitle,\n      task: this.task,\n    });\n  }\n\n  update_bar_task(task) {\n    const old_task = this.task;\n    this.action_completed = false;\n    this.task = task;\n    this.prepare_values();\n\n    if (old_task.name !== task.name) {\n      const label = this.bar_group.querySelector('.bar-label')\n      if(label) label.innerHTML = task.name;\n    }\n\n    let cls = 'bar-wrapper';\n    if (task.custom_class) {\n      cls += ' ' + task.custom_class;\n    }\n    if (task.important) {\n      cls += ' important';\n    }\n    $.attr(this.group, 'class', cls);\n  }\n\n  update_bar_vertical({ offset }) {\n    // recalculate\n    this.compute_y();\n\n    if (this.empty) return;\n    // update-bar_group\n    Array.prototype.forEach.call(this.bar_group.children, function (el, i) {\n      const y = $.attr(el, 'y') * 1;\n      el.setAttribute('y', y + offset);\n    });\n    // update-thumbnail\n    if (this.task.thumbnail) {\n      const $thumbnail = this.bar_group.querySelector('#rect_' + this.task.id);\n      const y = $.attr($thumbnail, 'y') * 1;\n      $thumbnail.setAttribute('y', y + offset);\n    }\n    // update-handle_group\n    Array.prototype.forEach.call(this.handle_group.children, function (el, i, arr) {\n      const y = $.attr(el, 'y') * 1;\n      el.setAttribute('y', y + offset);\n    });\n    // update-polygon\n    const $handle = this.$handle_progress;\n    if ($handle) {\n      $handle.setAttribute('points', this.get_progress_polygon_points());\n    }\n  }\n\n  update_bar_position({ x = null, width = null }) {\n    const bar = this.$bar;\n    if (x != undefined) {\n      if (this.gantt.options.drag_limit_child) {\n        // get all x values of parent task\n        const xs = this.task.dependencies.map((dep) => {\n          return this.gantt.get_bar(dep).$bar.getX();\n        });\n        // child task must not go before parent\n        const valid_x = xs.reduce((_, curr) => {\n          return x >= curr;\n        }, x);\n\n        if (!valid_x) {\n          width = null;\n          return;\n        }\n      }\n\n      this.update_attr(bar, \"x\", x);\n      if (this.$date_highlight) this.$date_highlight.style.left = x + 'px';\n    }\n    if (width) {\n      this.update_attr(bar, \"width\", width);\n      if (this.$date_highlight) this.$date_highlight.style.width = width + 'px';\n    }\n    this.update_label_position();\n    this.update_handle_position();\n    if (this.gantt.options.show_expected_progress) {\n      this.date_changed();\n      this.compute_duration();\n      this.update_expected_progressbar_position();\n    }\n    this.update_progressbar_position();\n    this.update_arrow_position();\n  }\n\n  update_label_position_on_horizontal_scroll({ x, sx }) {\n    const container = document.querySelector('.gantt-container');\n    const label = this.group.querySelector('.bar-label');\n    const img = this.group.querySelector('.bar-img') || '';\n    const img_mask = this.bar_group.querySelector('.img_mask') || '';\n\n    let barWidthLimit = this.$bar.getX() + this.$bar.getWidth();\n    let newLabelX = label.getX() + x;\n    let newImgX = img && img.getX() + x || 0;\n    let imgWidth = img && img.getBBox().width + 7 || 7;\n    let labelEndX = newLabelX + label.getBBox().width + 7;\n    let viewportCentral = sx + container.clientWidth / 2;\n\n    if (label.classList.contains('big')) return;\n\n    if (labelEndX < barWidthLimit && x > 0 && labelEndX < viewportCentral) {\n      label.setAttribute('x', newLabelX);\n      if (img) {\n        img.setAttribute('x', newImgX);\n        img_mask.setAttribute('x', newImgX);\n      }\n    } else if ((newLabelX - imgWidth) > this.$bar.getX() && x < 0 && labelEndX > viewportCentral) {\n      label.setAttribute('x', newLabelX);\n      if (img) {\n        img.setAttribute('x', newImgX);\n        img_mask.setAttribute('x', newImgX);\n      }\n    }\n  }\n\n  date_changed() {\n    let changed = false;\n    const { new_start_date, new_end_date } = this.compute_start_end_date();\n\n    if (Number(this.task._start) !== Number(new_start_date)) {\n      changed = true;\n      this.task._start = new_start_date;\n    }\n\n    if (Number(this.task._end) !== Number(new_end_date)) {\n      changed = true;\n      this.task._end = new_end_date;\n    }\n\n    if (!changed) return;\n\n    if (this.invalid) {\n      this.invalid = false;\n      this.task.invalid = false;\n      this.$bar.classList.remove('bar-invalid');\n    }\n\n    this.gantt.trigger_event(\"date_change\", [\n      this.task,\n      new_start_date,\n      date_utils.add(new_end_date, -1, \"second\"),\n    ]);\n  }\n\n  progress_changed() {\n    const new_progress = this.compute_progress();\n    this.task.progress = new_progress;\n    this.gantt.trigger_event(\"progress_change\", [this.task, new_progress]);\n  }\n\n  set_action_completed() {\n    this.action_completed = true;\n    setTimeout(() => (this.action_completed = false), 800);\n  }\n\n  compute_start_end_date() {\n    const bx = this.$bar.getX();\n    const bw = this.$bar.getWidth();\n\n    const new_start_date = this.gantt.get_snap_date(bx, this.gantt.gantt_start);\n    const new_end_date = this.gantt.get_snap_date(bw, new_start_date);\n\n    return { new_start_date, new_end_date };\n  }\n\n  compute_progress() {\n    const progress =\n      (this.$bar_progress.getWidth() / this.$bar.getWidth()) * 100;\n    return parseInt(progress, 10);\n  }\n\n  compute_expected_progress() {\n    this.expected_progress =\n      date_utils.diff(date_utils.today(), this.task._start, \"hour\") /\n      this.gantt.options.step;\n    // Revision date after today\n    if (this.expected_progress < 0) {\n      this.expected_progress = 0;\n    }\n    this.expected_progress =\n      ((this.expected_progress < this.duration\n        ? this.expected_progress\n        : this.duration) *\n        100) /\n      this.duration;\n  }\n\n  compute_x() {\n    const { step, column_width } = this.gantt.options;\n    const task_start = this.task._start;\n    const gantt_start = this.gantt.gantt_start;\n\n    const diff = date_utils.diff(task_start, gantt_start, \"hour\");\n    let x = (diff / step) * column_width;\n\n    if (this.gantt.view_is(VIEW_MODE.MONTH)) {\n      const diff = date_utils.diff(task_start, gantt_start, \"day\");\n      x = (diff * column_width) / 30;\n    }\n    this.x = x;\n  }\n\n  compute_y() {\n    this.y = this.gantt.options.padding / 2 +\n      this.task._index * (this.height + this.gantt.options.padding);\n  }\n\n  compute_duration() {\n    this.duration =\n      date_utils.diff(this.task._end, this.task._start, \"hour\") /\n      this.gantt.options.step;\n  }\n\n  update_attr(element, attr, value) {\n    value = +value;\n    if (!isNaN(value)) {\n      element.setAttribute(attr, value);\n    }\n    return element;\n  }\n\n  update_expected_progressbar_position() {\n    if (!this.$expected_bar_progress) return;\n\n    this.$expected_bar_progress.setAttribute(\"x\", this.$bar.getX());\n    this.compute_expected_progress();\n    this.$expected_bar_progress.setAttribute(\n      \"width\",\n      this.gantt.options.column_width *\n      this.duration *\n      (this.expected_progress / 100) || 0,\n    );\n  }\n\n  update_progressbar_position() {\n    if (this.gantt.options.readonly) return;\n    if (!this.$bar_progress) return;\n\n    this.$bar_progress.setAttribute(\"x\", this.$bar.getX());\n    this.$bar_progress.setAttribute(\n      \"width\",\n      this.$bar.getWidth() * (this.task.progress / 100),\n    );\n\n    const $handle = this.$handle_progress;\n    if ($handle) {\n      $handle.setAttribute('points', this.get_progress_polygon_points());\n    }\n  }\n\n  update_label_position() {\n    const img_mask = this.bar_group.querySelector('.img_mask');\n    const bar = this.$bar,\n      label = this.group.querySelector(\".bar-label\"),\n      img = this.group.querySelector('.bar-img');\n\n    let x_offset = 10;\n    let x_offset_label_img = this.image_size + 5;\n    const barWidth = bar.getWidth();\n    const labelWidth = label.getBBox().width;\n    const contentWidth = labelWidth + (img ? x_offset_label_img : 0);\n    if (contentWidth + x_offset > barWidth) {\n      label.classList.add(\"big\");\n      if (img) {\n        img.setAttribute('x', bar.getX() + barWidth + x_offset);\n        img_mask.setAttribute('x', bar.getX() + barWidth + x_offset);\n        label.setAttribute('x', bar.getX() + barWidth + x_offset + x_offset_label_img);\n      } else {\n        label.setAttribute('x', bar.getX() + barWidth + x_offset);\n      }\n    } else {\n      label.classList.remove(\"big\");\n      if (img) {\n        img.setAttribute('x', bar.getX() + x_offset);\n        img_mask.setAttribute('x', bar.getX() + x_offset);\n        label.setAttribute('x', bar.getX() + x_offset + x_offset_label_img);\n      } else {\n        label.setAttribute('x', bar.getX() + barWidth / 2 - contentWidth / 2);\n      }\n    }\n  }\n\n  update_handle_position() {\n    if (this.gantt.options.readonly) return;\n    const bar = this.$bar;\n    const handle_width = this.gantt.options.handle_width;\n\n    this.handle_group\n      .querySelector(\".handle.left\")\n      .setAttribute(\"x\", bar.getX() + 1);\n    this.handle_group\n      .querySelector(\".handle.right\")\n      .setAttribute(\"x\", bar.getEndX() - handle_width - 1);\n  }\n\n  update_arrow_position() {\n    this.arrows = this.arrows || [];\n    for (let arrow of this.arrows) {\n      arrow.update();\n    }\n  }\n}\n","import { createSVG } from \"./svg_utils\";\n\nexport default class Arrow {\n  constructor(gantt, from_task, to_task) {\n    this.gantt = gantt;\n    this.from_task = from_task;\n    this.to_task = to_task;\n\n    this.calculate_path();\n    this.draw();\n    this.drawInner();\n  }\n\n  calculate_path() {\n    if (this.from_task.empty || this.to_task.empty) return;\n\n    const rowHeight = this.gantt.options.bar_height + this.gantt.options.padding;\n    const taskHeight = this.gantt.options.bar_height;\n    const arrowCurve = this.gantt.options.arrow_curve;\n    // const arrowIndent = this.gantt.options.column_width / 2;\n    const arrowIndent = 19; // fixed indent\n    const taskFrom = this.from_task;\n    const taskTo = this.to_task;\n\n    const taskFromX2 = taskFrom.$bar.getEndX();\n    const taskFromY1 = taskFrom.$bar.getY();\n    const taskToX1 = taskTo.$bar.getX();\n    const taskToY1 = taskTo.$bar.getY();\n\n    const indexCompare = taskFrom.task._index > taskTo.task._index ? -1 : 1;\n    const taskToEndPosition = taskToY1 + taskHeight / 2;\n    const taskFromEndPosition = taskFromX2 + arrowIndent * 2;\n\n    const taskFromHorizontalOffsetValue =\n        taskFromEndPosition < taskToX1 ? '' : `H ${taskToX1 - arrowIndent}`;\n    const taskToHorizontalOffsetValue =\n        taskFromEndPosition > taskToX1\n            ? arrowIndent\n            : taskToX1 - taskFromX2 - arrowIndent;\n\n    const path = `M ${taskFromX2} ${taskFromY1 + taskHeight / 2}\n    h ${arrowIndent}\n    v ${(indexCompare * rowHeight) / 2}\n    ${taskFromHorizontalOffsetValue}\n    V ${taskToEndPosition}\n    h ${taskToHorizontalOffsetValue}`;\n\n    const trianglePoints = `${taskToX1},${taskToEndPosition}\n    ${taskToX1 - arrowCurve},${taskToEndPosition - arrowCurve}\n    ${taskToX1 - arrowCurve},${taskToEndPosition + arrowCurve}`;\n\n    this.path = path;\n\n    this.points = trianglePoints;\n  }\n\n  draw() {\n    this.element = createSVG(\"g\", {\n      \"data-from\": this.from_task.task.id,\n      \"data-to\": this.to_task.task.id,\n    });\n  }\n\n  drawInner() {\n    if (this.from_task.empty || this.to_task.empty) return;\n\n    this.svgPath = createSVG(\"path\", {\n      d: this.path,\n      fill: \"none\",\n      append_to: this.element\n    });\n    this.svgPolygon = createSVG(\"polygon\", {\n      points: this.points,\n      append_to: this.element,\n    });\n  }\n\n  update() {\n    if (this.from_task.empty || this.to_task.empty) return;\n\n    this.calculate_path();\n    this.svgPath.setAttribute(\"d\", this.path);\n    this.svgPolygon.setAttribute(\"points\", this.points);\n  }\n}\n","export default class Popup {\n  constructor(gantt, parent) {\n    this.gantt = gantt;\n    this.parent = parent;\n    this.custom_html = gantt.options.popup;\n    this.make();\n  }\n\n  make() {\n    this.parent.innerHTML = `\n        <div class=\"title\"></div>\n        <div class=\"subtitle\"></div>\n        <div class=\"pointer\"></div>\n    `;\n\n    this.hide();\n\n    this.title = this.parent.querySelector(\".title\");\n    this.subtitle = this.parent.querySelector(\".subtitle\");\n    this.pointer = this.parent.querySelector(\".pointer\");\n  }\n\n  show(options) {\n    if (!options.target_element) {\n      throw new Error(\"target_element is required to show popup\");\n    }\n    const target_element = options.target_element;\n\n    if (typeof this.custom_html === 'function') {\n      let html = this.custom_html(options.task);\n      html += '<div class=\"pointer\"></div>';\n      this.parent.innerHTML = html;\n      this.pointer = this.parent.querySelector(\".pointer\");\n    } else {\n      // set data\n      this.title.innerHTML = options.title;\n      this.subtitle.innerHTML = options.subtitle;\n    }\n\n    // set position\n    let position_meta;\n    if (target_element instanceof HTMLElement) {\n      position_meta = target_element.getBoundingClientRect();\n    } else if (target_element instanceof SVGElement) {\n      position_meta = target_element.getBBox();\n    }\n    const parentWidth = this.parent.clientWidth;\n    const parentHeight = this.parent.clientHeight;\n    const ganttOptions = this.gantt.options;\n    const ganttWidth = this.gantt.$container.clientWidth;\n    const ganttHeight = this.gantt.$container.clientHeight;\n\n    const dy = this.gantt.$container_main.scrollTop;\n\n    // get position\n    let pos_x = options.x - parentWidth / 2;\n    let pos_y =\n        position_meta.y +\n        position_meta.height +\n        ganttOptions.header_height -\n        dy +\n        10;\n\n    if (pos_y > ganttHeight - parentHeight) {\n      pos_y = position_meta.y - parentHeight - 10 - dy + ganttOptions.header_height;\n    }\n\n    if (pos_x > ganttWidth - parentWidth) {\n      const diff = pos_x - (ganttWidth - parentWidth - 5);\n      pos_x -= diff;\n    }\n\n    if (pos_x < 0) {\n      pos_x = 2\n    }\n\n    this.parent.style.left = pos_x + \"px\";\n    this.parent.style.top = pos_y + \"px\";\n\n    this.pointer.style.left = parentWidth / 2 + 'px';\n    this.pointer.style.top = \"-15px\";\n\n    // show\n    this.parent.style.display = \"block\";\n  }\n\n  hide() {\n    this.parent.style.display = \"none\";\n    this.parent.style.left = 0;\n  }\n}\n","export default class Backdrop {\n  constructor(parent) {\n    this.parent = parent;\n    this.make();\n  }\n\n  make() {\n    this.parent.innerHTML = `\n      <div class=\"gantt-drag-mask\">\n        <div class=\"date-range\"></div>\n      </div>\n    `;\n\n    // this.hide();\n\n    this.drag_mask = this.parent.querySelector('.gantt-drag-mask');\n    this.date_range = this.parent.querySelector('.date-range');\n  }\n\n  showAt({ x, width, range }) {\n    if (range && range.length) {\n      const htmlHold = `<span>${range[0]}</span><span>${range[1]}</span>`;\n      this.date_range.innerHTML = htmlHold;\n    }\n\n    this.drag_mask.style.left = x + 'px';\n    this.drag_mask.style.width = width + 'px';\n\n    this.show();\n  }\n\n  show() {\n    this.parent.style.display = 'block';\n    this.drag_mask.style.display = 'block';\n  }\n\n  hide() {\n    this.parent.style.display = \"none\";\n    this.drag_mask.style.display = \"none\";\n  }\n}","import date_utils from './date_utils';\nimport { $, createSVG } from './svg_utils';\nimport { getLang, VIEW_MODE } from './lang_utils';\nimport version from './version';\nimport Bar from './bar';\nimport Arrow from './arrow';\nimport Popup from './popup';\nimport Backdrop from './backdrop';\n\nimport './gantt.scss';\n\nconst VIEW_MODE_PADDING = {\n  HOUR: ['7d', '7d'],\n  QUARTER_DAY: ['7d', '7d'],\n  HALF_DAY: ['7d', '7d'],\n  DAY: ['1m', '1m'],\n  WEEK: ['1m', '1m'],\n  MONTH: ['1m', '1m'],\n  QUARTER_YEAR: ['3m', '3m'],\n  YEAR: ['1y', '1y'],\n};\n\nconst TICK_LINE = {\n  BOTH: 'both',\n  HORIZONTAL: 'horizontal',\n  VERTICAL: 'vertical',\n};\n\nconst DEFAULT_OPTIONS = {\n  header_height: 65,\n  header_tick: false,\n  // column_width: 30,\n  // step: 24,\n  bar_height: 30,\n  bar_corner_radius: 3,\n  arrow_curve: 5,\n  handle_width: 8,\n  padding: 18,\n  view_modes: [...Object.values(VIEW_MODE)],\n  view_mode: VIEW_MODE.DAY,\n  popup_trigger: 'click',\n  show_expected_progress: false,\n  dependencies: 'arrow',\n  drag_ignore_hours: true,\n  drag_bar_progress: true,\n  drag_sync_child: false,\n  drag_limit_child: false,\n  popup: null,\n  language: 'en',\n  readonly: false,\n  highlight_weekend: true,\n  scroll_to: 'start',\n  lines: TICK_LINE.BOTH,\n  auto_move_label: true,\n  today_button: true,\n  view_mode_select: false,\n};\n\nexport default class Gantt {\n  constructor(wrapper, tasks, options) {\n    this.version = version;\n    this.setup_wrapper(wrapper);\n    this.setup_options(options);\n    this.setup_tasks(tasks);\n    // initialize with default view mode\n    this.change_view_mode();\n    this.bind_events();\n  }\n\n  setup_wrapper(element) {\n    let svg_element, wrapper_element;\n\n    // CSS Selector is passed\n    if (typeof element === 'string') {\n      element = document.querySelector(element);\n    }\n\n    // get the SVGElement\n    if (element instanceof HTMLElement) {\n      wrapper_element = element;\n      svg_element = element.querySelector('svg');\n    } else if (element instanceof SVGElement) {\n      svg_element = element;\n    } else {\n      throw new TypeError(\n        'Frappé Gantt only supports usage of a string CSS selector,' +\n          \" HTML DOM element or SVG DOM element for the 'element' parameter\",\n      );\n    }\n\n    // svg element\n    if (!svg_element) {\n      // create it\n      this.$svg = createSVG('svg', {\n        append_to: wrapper_element,\n        class: 'gantt',\n      });\n    } else {\n      this.$svg = svg_element;\n      this.$svg.classList.add('gantt');\n    }\n\n    // container element\n    this.$container = document.createElement('div');\n    this.$container.classList.add('gantt-container');\n\n    // 1.header horizontal-scroll\n    this.$container_header = document.createElement('div');\n    this.$container_header.classList.add('gantt-container_header');\n    this.$container.appendChild(this.$container_header);\n\n    // 2.main vertical-scroll\n    this.$container_main = document.createElement('div');\n    this.$container_main.classList.add('gantt-container_main');\n    this.$container.appendChild(this.$container_main);\n\n    // 3. svg appendTo wrapper\n    const parent_element = this.$svg.parentElement;\n    parent_element.appendChild(this.$container);\n    this.$container_main.appendChild(this.$svg);\n\n    // 4. toobar wrapper\n    this.$container_toolbar = document.createElement('div');\n    this.$container_toolbar.classList.add('gantt-container_toolbar');\n    this.$container.appendChild(this.$container_toolbar);\n\n    // 5.popup wrapper\n    this.$popup_wrapper = document.createElement('div');\n    this.$popup_wrapper.classList.add('gantt-popup-wrapper');\n    this.$container.appendChild(this.$popup_wrapper);\n\n    // 6.backdrop wrapper\n    this.$drag_backdrop = document.createElement('div');\n    this.$drag_backdrop.classList.add('gantt-drag-backdrop');\n    this.$container.appendChild(this.$drag_backdrop);\n  }\n\n  setup_options(options) {\n    this.options = { ...DEFAULT_OPTIONS, ...options };\n    if (!options.view_mode_padding) options.view_mode_padding = {};\n    for (let [key, value] of Object.entries(options.view_mode_padding)) {\n      if (typeof value === 'string') {\n        // Configure for single value given\n        options.view_mode_padding[key] = [value, value];\n      }\n    }\n\n    this.options.view_mode_padding = {\n      ...VIEW_MODE_PADDING,\n      ...options.view_mode_padding,\n    };\n  }\n\n  setup_tasks(tasks) {\n    // prepare tasks\n    this.tasks = tasks.map((task, i) => {\n      return this.format_task(task, i);\n    });\n\n    this.setup_dependencies();\n  }\n\n  setup_dependencies() {\n    this.dependency_map = {};\n    for (let t of this.tasks) {\n      this.format_dependency(t);\n    }\n  }\n\n  format_task(task, i) {\n    // reset symbol\n    task.empty = false;\n    task.invalid = false;\n    task.progress = task.progress || 0;\n\n    // convert to Date objects\n    task._start = date_utils.parse(task.start);\n    if (task.end === undefined && task.duration !== undefined) {\n      task.end = task._start;\n      let durations = task.duration.split(' ');\n\n      durations.forEach((tmpDuration) => {\n        let { duration, scale } = date_utils.parse_duration(tmpDuration);\n        task.end = date_utils.add(task.end, duration, scale);\n      });\n    }\n    task._end = date_utils.parse(task.end);\n    let diff = date_utils.diff(task._end, task._start, 'year');\n    if (diff < 0) {\n      throw Error(\n        \"start of task can't be after end of task: in task #, \" + (i + 1),\n      );\n    }\n    // make task invalid if duration too large\n    if (date_utils.diff(task._end, task._start, 'year') > 10) {\n      task.end = null;\n    }\n\n    // cache index\n    task._index = i;\n\n    // invalid flag\n    if (!task.start) {\n      task.invalid = 'start';\n    }\n    if (!task.end) {\n      task.invalid = 'end';\n    }\n    if (!task.start && !task.end) {\n      task._start = null;\n      task._end = null;\n      task.empty = true;\n      task.invalid = true;\n    }\n\n    // mock daterange\n    if (task.start && !task.end) {\n      task._end = date_utils.add(task._start, 2, 'day');\n    }\n    if (!task.start && task.end) {\n      task._start = date_utils.add(task._end, -2, 'day');\n    }\n\n    // if hours is not set, assume the last day is full day\n    // e.g: 2018-09-09 becomes 2018-09-09 23:59:59\n    if (task._end) {\n      const task_end_values = date_utils.get_date_values(task._end);\n      if (task_end_values.slice(3).every((d) => d === 0)) {\n        task._end = date_utils.add(task._end, 24, 'hour');\n      }\n    }\n\n    // dependencies\n    if (typeof task.dependencies === 'string' || !task.dependencies) {\n      let deps = [];\n      if (task.dependencies) {\n        deps = task.dependencies\n          .split(',')\n          .map((d) => d.trim().replaceAll(' ', '_'))\n          .filter((d) => d);\n      }\n      task.dependencies = deps;\n    }\n\n    // uids\n    if (!task.id) {\n      task.id = generate_id(task);\n    } else if (typeof task.id === 'string') {\n      task.id = task.id.replaceAll(' ', '_');\n    } else {\n      task.id = `${task.id}`;\n    }\n    return task;\n  }\n\n  format_dependency(task) {\n    for (let d of task.dependencies) {\n      this.dependency_map[d] = this.dependency_map[d] || [];\n      this.dependency_map[d].push(task.id);\n    }\n  }\n\n  refresh(tasks) {\n    this.setup_tasks(tasks);\n    this.change_view_mode();\n  }\n\n  update(task) {\n    const original = this.get_task(task.id);\n    const current = Object.assign({}, original, task);\n    const update_task = this.format_task(current, original._index);\n\n    // empty daterange\n    if (original.empty || update_task.empty) {\n      this.replace(update_task, original);\n      return;\n    }\n\n    // invalid daterange\n    if (original.invalid !== update_task.invalid) {\n      this.replace(update_task, original);\n      return;\n    }\n\n    // update task\n    this.tasks.splice(original._index, 1, update_task);\n    const bar = this.get_bar(update_task.id);\n    bar.update_bar_task(update_task);\n\n    let move_x = bar.$bar.getX();\n    let move_w = bar.$bar.getWidth();\n\n    if (original._start !== update_task._start) {\n      // calculate-left\n      const start_date = date_utils.parse(update_task._start);\n      const dx = this.get_snap_distance(original._start, start_date);\n      move_x -= dx;\n      move_w += dx;\n    }\n\n    if (original._end !== update_task._end) {\n      // calculate-right\n      const end_date = date_utils.parse(update_task._end);\n      const dx = this.get_snap_distance(original._end, end_date);\n      move_w -= dx;\n    }\n\n    // move\n    bar.update_bar_position({\n      x: move_x,\n      width: move_w,\n    });\n  }\n\n  remove(task) {\n    let index = null;\n    if (typeof task === 'object') {\n      const tid = `${task.id}`.replaceAll(' ', '_');\n      index = this.tasks.findIndex((item) => item.id === tid);\n    } else {\n      index = task;\n    }\n    if (index === -1 || index >= this.tasks.length) return;\n    const row_height = this.options.bar_height + this.options.padding;\n\n    // remove tasks bars\n    const remove_bar = this.bars[index];\n    this.layers.bar.removeChild(remove_bar.group);\n    this.tasks.splice(index, 1);\n    this.bars.splice(index, 1);\n\n    // resort task._index\n    let i = index;\n    while (i < this.tasks.length) {\n      this.tasks[i]._index = i;\n      this.bars[i].update_bar_vertical({ offset: -row_height });\n      i += 1;\n    }\n\n    // remove grid-row row-line\n    const $rows = this.layers.grid.querySelector('.rows_layer');\n    $rows.lastChild && $rows.removeChild($rows.lastChild);\n    const $lines = this.layers.grid.querySelector('.lines_layer');\n    $lines.lastChild && $lines.removeChild($lines.lastChild);\n\n    // redraw arrows\n    this.layers.arrow.innerHTML = '';\n    this.make_arrows();\n    this.map_arrows_on_bars();\n\n    // update grid_height\n    const grid_height = this.tasks.length * row_height;\n    this.$svg.setAttribute('height', grid_height);\n    this.$svg\n      .querySelector('.grid-background')\n      .setAttribute('height', grid_height);\n  }\n\n  insert(task, index) {\n    let target;\n    if (index === undefined) {\n      target = this.tasks.length; // default end\n    } else if (typeof index === 'object') {\n      target = this.tasks.findIndex((task) => task.id === index.id);\n      target += 1; // target task\n    } else {\n      target = index; // target index\n    }\n    const insert_task = this.format_task(task, target);\n    // resort task._index\n    let i = target;\n    while (i < this.tasks.length) {\n      this.tasks[i]._index = i + 1;\n      i += 1;\n    }\n    // insert task target\n    this.tasks.splice(target, 0, insert_task);\n    this.setup_dependencies();\n\n    // calculate daterange\n    let limit_start = null,\n      limit_end = null;\n    if (insert_task._start && insert_task._start < this.gantt_start) {\n      limit_start = insert_task._start;\n    }\n    if (insert_task._end && insert_task._end > this.gantt_end) {\n      limit_end = insert_task._end;\n    }\n    // out of limit date\n    if (limit_start || limit_end) {\n      this.update_gantt_dates({ start: limit_start, end: limit_end });\n    }\n\n    // update bars y\n    const row_height = this.options.bar_height + this.options.padding;\n    i = target;\n    while (i < this.bars.length) {\n      this.bars[i].update_bar_vertical({ offset: row_height });\n      i += 1;\n    }\n\n    // insert bar\n    const insert_bar = new Bar(this, insert_task);\n    const target_bar = this.bars[target + 1];\n    this.layers.bar.insertBefore(\n      insert_bar.group,\n      target_bar ? target_bar.group : null,\n    );\n    this.bars.splice(target, 0, insert_bar);\n\n    // append grid-row\n    const row_width = this.dates.length * this.options.column_width;\n    const insert_y = (this.tasks.length - 1) * row_height;\n    const $grid_el = this.layers.grid;\n    createSVG('rect', {\n      x: 0,\n      y: insert_y,\n      width: row_width,\n      height: row_height,\n      class: 'grid-row',\n      append_to: $grid_el.querySelector('.rows_layer'),\n    });\n    // append row-line\n    const $lines_layer = $grid_el.querySelector('.lines_layer');\n    if ($lines_layer) {\n      if (this.options.lines !== TICK_LINE.VERTICAL) {\n        createSVG('line', {\n          x1: 0,\n          y1: insert_y,\n          x2: row_width,\n          y2: insert_y,\n          class: 'row-line',\n          append_to: $lines_layer,\n        });\n      }\n    }\n\n    // redraw arrows\n    this.layers.arrow.innerHTML = '';\n    this.make_arrows();\n    this.map_arrows_on_bars();\n\n    // update grid_height\n    const grid_height = this.tasks.length * row_height;\n    this.$svg.setAttribute('height', grid_height);\n    this.$svg\n      .querySelector('.grid-background')\n      .setAttribute('height', grid_height);\n  }\n\n  replace(update_task, prev_task) {\n    // Bar\n    const update_bar = new Bar(this, update_task);\n\n    // remove old_bar from bars and bar-layers\n    const old_bar = this.bars[prev_task._index];\n    this.layers.bar.removeChild(old_bar.group);\n    this.bars.splice(prev_task._index, 1, update_bar);\n\n    // replace update_bar and update tasks\n    const target_postion = this.bars[prev_task._index + 1];\n    this.layers.bar.insertBefore(\n      update_bar.group,\n      target_postion ? target_postion.group : null,\n    );\n    this.tasks.splice(prev_task._index, 1, update_task);\n\n    // redraw arrows\n    this.layers.arrow.innerHTML = '';\n    this.make_arrows();\n    this.map_arrows_on_bars();\n  }\n\n  change_view_mode(mode = this.options.view_mode) {\n    const record_start = performance.now();\n    this.update_view_scale(mode);\n    this.setup_dates();\n    this.render();\n    const record_end = performance.now();\n    const record_time = record_end - record_start;\n    // fire viewmode_change event delay\n    this.trigger_event('view_change', [mode, record_time]);\n  }\n\n  update_view_scale(view_mode) {\n    this.options.view_mode = view_mode;\n    if (view_mode === VIEW_MODE.HOUR) {\n      this.options.step = 24 / 24;\n      this.options.column_width = 38;\n    } else if (view_mode === VIEW_MODE.QUARTER_DAY) {\n      this.options.step = 24 / 4;\n      this.options.column_width = 38;\n    } else if (view_mode === VIEW_MODE.HALF_DAY) {\n      this.options.step = 24 / 2;\n      this.options.column_width = 38;\n    } else if (view_mode === VIEW_MODE.DAY) {\n      this.options.step = 24;\n      this.options.column_width = 38;\n    } else if (view_mode === VIEW_MODE.WEEK) {\n      this.options.step = 24 * 7;\n      this.options.column_width = 140;\n    } else if (view_mode === VIEW_MODE.MONTH) {\n      this.options.step = 24 * 30;\n      this.options.column_width = 280;\n    } else if (view_mode === VIEW_MODE.QUARTER_YEAR) {\n      this.options.step = (24 * 365) / 4;\n      this.options.column_width = 400;\n    } else if (view_mode === VIEW_MODE.YEAR) {\n      this.options.step = 24 * 365;\n      this.options.column_width = 480;\n    }\n  }\n\n  setup_dates() {\n    this.setup_gantt_dates();\n    this.setup_date_values();\n  }\n\n  setup_gantt_dates() {\n    this.gantt_start = this.gantt_end = null;\n\n    for (let task of this.tasks) {\n      // set global start and end date\n      if (\n        !this.gantt_start ||\n        (task._start && task._start < this.gantt_start)\n      ) {\n        this.gantt_start = task._start;\n      }\n      if (!this.gantt_end || (task._end && task._end > this.gantt_end)) {\n        this.gantt_end = task._end;\n      }\n    }\n    let gantt_start, gantt_end;\n    if (!this.gantt_start) gantt_start = new Date();\n    else gantt_start = date_utils.start_of(this.gantt_start, 'day');\n    if (!this.gantt_end) gantt_end = new Date();\n    else gantt_end = date_utils.start_of(this.gantt_end, 'day');\n\n    // ensure today in daterange\n    const today = date_utils.today();\n    if (gantt_start > today) gantt_start = today;\n    if (gantt_end < today) gantt_end = today;\n\n    // pad date start and end\n    this.pad_gantt_dates(gantt_start, gantt_end);\n  }\n\n  pad_gantt_dates(start, end) {\n    // add date padding on both sides\n    let viewKey;\n    for (let [key, value] of Object.entries(VIEW_MODE)) {\n      if (value === this.options.view_mode) {\n        viewKey = key;\n      }\n    }\n    const [padding_start, padding_end] = this.options.view_mode_padding[\n      viewKey\n    ].map(date_utils.parse_duration);\n\n    const gantt_start = date_utils.add(\n      start,\n      -padding_start.duration,\n      padding_start.scale,\n    );\n\n    let format_string;\n    if (this.view_is(VIEW_MODE.YEAR)) {\n      format_string = 'YYYY';\n    } else if (this.view_is([VIEW_MODE.MONTH, VIEW_MODE.QUARTER_YEAR])) {\n      format_string = 'YYYY-MM';\n    } else if (this.view_is(VIEW_MODE.DAY)) {\n      format_string = 'YYYY-MM-DD';\n    } else {\n      format_string = 'YYYY-MM-DD HH';\n    }\n    this.gantt_start = date_utils.parse(\n      date_utils.format(gantt_start, format_string),\n    );\n    this.gantt_start.setHours(0, 0, 0, 0);\n\n    this.gantt_end = date_utils.add(\n      end,\n      padding_end.duration,\n      padding_end.scale,\n    );\n    this.gantt_end.setHours(0, 0, 0, 0);\n  }\n\n  setup_date_values() {\n    this.dates = [];\n    let cur_date = null;\n\n    while (cur_date === null || cur_date < this.gantt_end) {\n      if (!cur_date) {\n        cur_date = date_utils.clone(this.gantt_start);\n      } else {\n        if (this.view_is(VIEW_MODE.YEAR)) {\n          cur_date = date_utils.add(cur_date, 1, 'year');\n        } else if (this.view_is(VIEW_MODE.QUARTER_YEAR)) {\n          cur_date = date_utils.add(cur_date, 3, 'month');\n        } else if (this.view_is(VIEW_MODE.MONTH)) {\n          cur_date = date_utils.add(cur_date, 1, 'month');\n        } else {\n          cur_date = date_utils.add(cur_date, this.options.step, 'hour');\n        }\n      }\n      this.dates.push(cur_date);\n    }\n  }\n\n  update_gantt_dates({ start, end }) {\n    if (start && start < this.gantt_start) {\n      this.old_gantt_start = this.gantt_start;\n      const new_gantt_start = new Date(\n        date_utils.add(start, -1, 'day').setHours(0, 0, 0, 0),\n      );\n      const left_dates = this.get_left_dates(new_gantt_start, this.old_gantt_start);\n      this.gantt_start = left_dates[0];\n\n      const dx = this.get_snap_distance(this.old_gantt_start, this.gantt_start);\n      this.scale_grid(dx);\n      this.translate(dx);\n\n      this.update_gantt_left(left_dates);\n    }\n\n    if (end && end > this.gantt_end) {\n      this.old_gantt_end = this.gantt_end;\n      const new_gantt_end = new Date(\n        date_utils.add(end, 1, 'day').setHours(0, 0, 0, 0),\n      );\n      this.gantt_end = new_gantt_end;\n\n      const dx = this.get_snap_distance(new_gantt_end, this.old_gantt_end);\n      this.scale_grid(dx);\n\n      this.update_gantt_right();\n    }\n  }\n\n  update_gantt_left(left_dates) {\n    // 绘制\n    this.get_dates_to_draw(left_dates, null).forEach((date, i) => {\n      this.draw_date(date, i);\n    });\n    // 合并\n    this.dates = left_dates.concat(this.dates);\n    // 高亮\n    this.highlightWeekends(\n      this.gantt_start,\n      date_utils.add(this.old_gantt_start, -1, 'day'),\n    );\n    this.highlightToday();\n    // 线条\n    this.draw_col_tick(left_dates);\n  }\n\n  get_left_dates(start, end) {\n    const left_dates = [];\n\n    let start_temp = end;\n    while (start_temp > start) {\n      if (this.view_is(VIEW_MODE.YEAR)) {\n        start_temp = date_utils.add(start_temp, -1, 'year');\n      } else if (this.view_is(VIEW_MODE.QUARTER_YEAR)) {\n        start_temp = date_utils.add(start_temp, -3, 'month');\n      } else if (this.view_is(VIEW_MODE.MONTH)) {\n        start_temp = date_utils.add(start_temp, -1, 'month');\n      } else {\n        start_temp = date_utils.add(start_temp, -this.options.step, 'hour');\n      }\n\n      left_dates.unshift(start_temp);\n    }\n\n    return left_dates;\n  }\n\n  update_gantt_right() {\n    const initial_date = this.last_date_info.date;\n    const right_dates = this.get_right_dates(initial_date, this.gantt_end);\n    // 日期\n    this.get_dates_to_draw(right_dates, this.last_date_info).forEach(\n      (date, i) => {\n        this.last_date_info = date;\n        this.draw_date(date, i);\n      },\n    );\n    // 合并\n    this.dates = this.dates.concat(right_dates);\n    // 高亮\n    this.highlightWeekends(initial_date, this.gantt_end, true);\n    this.highlightToday();\n    // 线条\n    this.draw_col_tick(right_dates, initial_date);\n  }\n\n  get_right_dates(start, end) {\n    const right_dates = [];\n\n    let start_temp = start;\n    while (start_temp < end) {\n      if (this.view_is(VIEW_MODE.YEAR)) {\n        start_temp = date_utils.add(start_temp, 1, 'year');\n      } else if (this.view_is(VIEW_MODE.QUARTER_YEAR)) {\n        start_temp = date_utils.add(start_temp, 3, 'month');\n      } else if (this.view_is(VIEW_MODE.MONTH)) {\n        start_temp = date_utils.add(start_temp, 1, 'month');\n      } else {\n        start_temp = date_utils.add(start_temp, this.options.step, 'hour');\n      }\n      right_dates.push(start_temp);\n    }\n    return right_dates;\n  }\n\n  scale_grid(dx) {\n    const old_grid_width = $.attr(this.$svg, 'width');\n    const new_grid_width = old_grid_width * 1 + dx;\n    // header\n    this.$header.style.width = new_grid_width + 'px';\n    // background\n    $.attr(this.$svg, { width: new_grid_width });\n    $.attr(this.$svg.querySelector('.grid-background'), {\n      width: new_grid_width,\n    });\n    // rows\n    const rows = this.layers.grid.querySelectorAll('.grid-row');\n    rows.forEach((row) => $.attr(row, { width: new_grid_width }));\n    // lines\n    const lines = this.layers.grid.querySelectorAll('.row-line');\n    lines.forEach((line) => $.attr(line, { x2: new_grid_width }));\n  }\n\n  translate(dx) {\n    const uppers = this.$upper_header.querySelectorAll('.upper-text');\n    uppers.forEach((u) => {\n      const old_x = this.upper_texts_x[u.textContent];\n      const new_x = old_x * 1 + dx;\n      this.upper_texts_x[u.textContent] = new_x;\n\n      u.classList.remove('current-upper');\n      u.style.left = new_x + 'px';\n    });\n\n    const lowers = this.$lower_header.querySelectorAll('.lower-text');\n    lowers.forEach((l) => {\n      const old_x = l.style.left.replace('px', '');\n      const new_x = old_x * 1 + dx;\n      l.style.left = new_x + 'px';\n    });\n\n    const holidays = this.layers.grid.querySelectorAll('.holiday-highlight');\n    holidays.forEach((h) => {\n      const old_x = $.attr(h, 'x');\n      const new_x = old_x * 1 + dx;\n      $.attr(h, { x: new_x });\n    });\n\n    const ticks = this.layers.grid.querySelectorAll('.tick');\n    ticks.forEach((tick) => {\n      const dpath = $.attr(tick, 'd')\n        .split(' ')\n        .map((d, i) => {\n          if (i === 1) {\n            return d * 1 + dx;\n          } else {\n            return d;\n          }\n        })\n        .join(' ');\n      $.attr(tick, { d: dpath });\n    });\n\n    this.bars.forEach((bar) => {\n      if (bar.empty) return;\n      bar.update_bar_position({ x: bar.$bar.getX() + dx });\n    });\n  }\n\n  set_readonly(bool) {\n    this.options.readonly = bool;\n    if (bool) {\n      this.$svg.classList.add('disabled');\n    } else {\n      this.$svg.classList.remove('disabled');\n    }\n  }\n\n  bind_events() {\n    this.bind_grid_scroll();\n\n    this.bind_grid_click();\n    this.bind_bar_create();\n    this.bind_bar_events();\n  }\n\n  render() {\n    this.clear();\n    this.setup_layers();\n    this.make_grid();\n    this.make_dates();\n    this.make_bars();\n    this.make_grid_extras();\n    this.make_arrows();\n    this.map_arrows_on_bars();\n    this.set_scroll_position(this.options.scroll_to);\n  }\n\n  setup_layers() {\n    this.layers = {};\n    const layers = ['grid', 'today', 'arrow', 'progress', 'bar'];\n    // make group layers\n    for (let layer of layers) {\n      this.layers[layer] = createSVG('g', {\n        class: layer,\n        append_to: this.$svg,\n      });\n    }\n  }\n\n  make_grid() {\n    this.make_grid_background();\n    this.make_grid_rows();\n    this.make_grid_header();\n    this.make_grid_toolbar();\n  }\n\n  make_grid_extras() {\n    this.make_grid_highlights();\n    this.make_grid_ticks();\n  }\n\n  make_grid_background() {\n    const grid_width = this.dates.length * this.options.column_width;\n    const grid_height =\n      (this.options.bar_height + this.options.padding) * this.tasks.length;\n\n    createSVG('rect', {\n      x: 0,\n      y: 0,\n      width: grid_width,\n      height: grid_height,\n      class: 'grid-background',\n      append_to: this.$svg,\n    });\n\n    const scroll_height = this.options.height\n      ? this.options.height + 'px'\n      : `calc(100% - ${this.options.header_height + 1}px`;\n    this.$container_main.style.height = scroll_height;\n    this.$container_main.style.width = '100%';\n    this.$container_main.style.overflow = 'auto';\n    this.$container_main.style.position = 'relative';\n    this.$container.style.overflow = 'hidden';\n\n    $.attr(this.$svg, {\n      height: grid_height,\n      width: grid_width,\n    });\n  }\n\n  make_grid_rows() {\n    const row_width = this.dates.length * this.options.column_width;\n    const row_height = this.options.bar_height + this.options.padding;\n\n    let row_y = 0;\n    const fragment = document.createDocumentFragment();\n    for (let _ of this.tasks) {\n      createSVG('rect', {\n        x: 0,\n        y: row_y,\n        width: row_width,\n        height: row_height,\n        class: 'grid-row',\n        append_to: fragment,\n      });\n      if (\n        this.options.lines === TICK_LINE.BOTH ||\n        this.options.lines === TICK_LINE.HORIZONTAL\n      ) {\n      }\n\n      row_y += this.options.bar_height + this.options.padding;\n    }\n\n    const $rows_layer = createSVG('g', {\n      class: 'rows_layer',\n      append_to: this.layers.grid,\n    });\n    $rows_layer.appendChild(fragment);\n  }\n\n  make_grid_header() {\n    const grid_width = this.dates.length * this.options.column_width;\n    let $header = document.createElement('div');\n    $header.style.height = this.options.header_height + 'px';\n    $header.style.width = grid_width + 'px';\n    $header.classList.add('grid-header');\n    this.$header = $header;\n\n    let $upper_header = document.createElement('div');\n    $upper_header.classList.add('upper-header');\n    this.$upper_header = $upper_header;\n    this.$header.appendChild($upper_header);\n\n    let $lower_header = document.createElement('div');\n    $lower_header.classList.add('lower-header');\n    this.$lower_header = $lower_header;\n    this.$header.appendChild($lower_header);\n\n    let $line_header = document.createElement('div');\n    $line_header.classList.add('line-header');\n    this.$line_header = $line_header;\n    this.$header.appendChild($line_header);\n\n    this.$container_header.appendChild(this.$header);\n  }\n\n  make_grid_toolbar() {\n    if (!this.options.view_mode_select && !this.options.today_button) return;\n\n    const $side_header = this.$container_toolbar;\n    const lang = getLang(this.options.language);\n\n    // Create view mode change select\n    if (this.options.view_mode_select) {\n      const $select = document.createElement('select');\n      $select.classList.add('viewmode-select');\n\n      const modes = this.options.view_modes;\n      const modes_values = Object.values(VIEW_MODE);\n      const modes_keys = Object.keys(VIEW_MODE);\n      for (const key in modes) {\n        const $option = document.createElement('option');\n        const val = modes[key];\n        const index = modes_values.findIndex((vm) => vm === val);\n        const label = modes_keys[index];\n        $option.value = val;\n        $option.textContent = lang[label] || val;\n        $select.appendChild($option);\n      }\n      $select.value = this.options.view_mode;\n      $select.addEventListener(\n        'change',\n        function () {\n          this.change_view_mode($select.value);\n        }.bind(this),\n      );\n      $side_header.appendChild($select);\n    }\n\n    // Create today button\n    if (this.options.today_button) {\n      let $today_button = document.createElement('button');\n      $today_button.classList.add('today-button');\n      $today_button.textContent = lang.TODAY;\n      $today_button.onclick = this.scroll_today.bind(this);\n      $side_header.appendChild($today_button);\n    }\n\n    // position\n    const top = Math.max(0, this.options.header_height - 50 - 5);\n    $side_header.style.top = top + 'px';\n  }\n\n  make_grid_ticks() {\n    if (!Object.values(TICK_LINE).includes(this.options.lines)) return;\n    this.draw_row_line();\n\n    this.draw_col_tick(this.dates);\n  }\n\n  draw_row_line() {\n    let row_y = 0;\n    const row_width = this.dates.length * this.options.column_width;\n    const row_height = this.options.bar_height + this.options.padding;\n    const row_fragment = document.createDocumentFragment();\n    if (this.options.lines !== TICK_LINE.VERTICAL) {\n      for (let _ of this.tasks) {\n        createSVG('line', {\n          x1: 0,\n          y1: row_y + row_height,\n          x2: row_width,\n          y2: row_y + row_height,\n          class: 'row-line',\n          append_to: row_fragment,\n        });\n        row_y += row_height;\n      }\n    }\n    const $lines_layer = createSVG('g', {\n      class: 'lines_layer',\n      append_to: this.layers.grid,\n    });\n    $lines_layer.appendChild(row_fragment);\n  }\n\n  draw_col_tick(dates, target) {\n    if (this.options.lines === TICK_LINE.HORIZONTAL) return;\n\n    let tick_x = 0;\n    if (target) {\n      const dc = this.get_snap_distance(target, this.gantt_start);\n      tick_x = dc + this.get_date_width(target);\n    }\n    const data_height =\n      (this.options.bar_height + this.options.padding) * this.tasks.length;\n    const tick_height = Math.max(5000, data_height);\n\n    const tick_fragment = document.createDocumentFragment();\n    for (let date of dates) {\n      let tick_class = 'tick';\n      if (this.get_thick_mode(date)) {\n        tick_class += ' thick';\n      }\n\n      createSVG('path', {\n        d: `M ${tick_x} 0 v ${tick_height}`,\n        class: tick_class,\n        append_to: tick_fragment,\n      });\n\n      tick_x += this.get_date_width(date);\n    }\n\n    const $el = this.layers.grid.querySelector('.ticks_layer');\n    if ($el) {\n      if (target) {\n        $el.appendChild(tick_fragment);\n      } else {\n        $el.insertBefore(tick_fragment, $el.firstChild);\n      }\n    } else {\n      const $ticks_layer = createSVG('g', {\n        class: 'ticks_layer',\n        append_to: this.layers.grid,\n      });\n      $ticks_layer.appendChild(tick_fragment);\n    }\n  }\n\n  get_thick_mode(date) {\n    let thick = false;\n    // thick tick for monday\n    if (this.view_is(VIEW_MODE.DAY) && date.getDate() === 1) {\n      thick = true;\n    }\n    // thick tick for first week\n    if (\n      this.view_is(VIEW_MODE.WEEK) &&\n      date.getDate() >= 1 &&\n      date.getDate() < 8\n    ) {\n      thick = true;\n    }\n    // thick ticks for quarters\n    if (this.view_is(VIEW_MODE.MONTH) && date.getMonth() % 3 === 0) {\n      thick = true;\n    }\n    // thick ticks for quarter_year\n    if (this.view_is(VIEW_MODE.QUARTER_YEAR) && date.getMonth() === 0) {\n      thick = true;\n    }\n    // thick ticks for year\n    if (this.view_is(VIEW_MODE.YEAR)) {\n      thick = true;\n    }\n    return thick;\n  }\n\n  get_date_width(date) {\n    if (this.view_is(VIEW_MODE.MONTH)) {\n      return (\n        (date_utils.get_days_in_month(date) * this.options.column_width) / 30\n      );\n    } else {\n      return this.options.column_width;\n    }\n  }\n\n  computeGridHighlightDimensions(view_mode) {\n    const today = date_utils.today();\n    let x = view_mode === VIEW_MODE.DAY ? this.options.column_width / 2 : 0;\n\n    return {\n      x: x + this.get_snap_distance(today, this.gantt_start),\n      date: today,\n    };\n  }\n\n  make_grid_highlights() {\n    this.highlightWeekends(this.gantt_start, this.gantt_end);\n    this.highlightToday();\n  }\n\n  highlightWeekends(start, end, append) {\n    if (!this.options.highlight_weekend) return;\n    if (!this.view_is([VIEW_MODE.DAY, VIEW_MODE.HALF_DAY])) return;\n\n    const weekends_fragment = document.createDocumentFragment();\n    for (let d = new Date(start); d <= end; d.setDate(d.getDate() + 1)) {\n      if (d.getDay() === 0 || d.getDay() === 6) {\n        const x = this.get_snap_distance(d, this.gantt_start);\n        createSVG('rect', {\n          x,\n          y: 0,\n          width:\n            (this.view_is(VIEW_MODE.DAY) ? 1 : 2) * this.options.column_width,\n          height: '100%',\n          class: 'holiday-highlight',\n          append_to: weekends_fragment,\n        });\n      }\n    }\n\n    const $el = this.layers.grid.querySelector('.holidays_layer');\n    if ($el) {\n      if (append) {\n        $el.appendChild(weekends_fragment);\n      } else {\n        $el.insertBefore(weekends_fragment, $el.firstChild);\n      }\n    } else {\n      const $holidays_layer = createSVG('g', {\n        class: 'holidays_layer',\n        append_to: this.layers.grid,\n      });\n      $holidays_layer.appendChild(weekends_fragment);\n    }\n  }\n\n  highlightToday() {\n    // highlight today's | week's | month's | quarter_year's | year's\n    if (\n      this.view_is(VIEW_MODE.DAY) ||\n      this.view_is(VIEW_MODE.WEEK) ||\n      this.view_is(VIEW_MODE.MONTH) ||\n      this.view_is(VIEW_MODE.QUARTER_YEAR) ||\n      this.view_is(VIEW_MODE.YEAR)\n    ) {\n      // Used as we must find the _end_ of session if view is not Day\n      const { x: left, date } = this.computeGridHighlightDimensions(\n        this.options.view_mode,\n      );\n\n      const data_height =\n        (this.options.bar_height + this.options.padding) * this.tasks.length;\n      const path_height = Math.max(5000, data_height);\n\n      const $el = this.layers.today.querySelector('.today-date-line');\n      if ($el) {\n        $.attr($el, { d: `M ${left} 0 v ${path_height}` });\n      } else {\n        createSVG('path', {\n          d: `M ${left} 0 v ${path_height}`,\n          class: 'today-date-line',\n          append_to: this.layers.today,\n        });\n      }\n\n      const $today = document.getElementById(\n        date_utils.format(date).replaceAll(' ', '_'),\n      );\n      if ($today) {\n        if (!$today.classList.contains('today-date-highlight')) {\n          $today.classList.add('today-date-highlight');\n          $today.style.top = +$today.style.top.slice(0, -2) - 4 + 'px';\n          $today.style.left = +$today.style.left.slice(0, -2) - 8 + 'px';\n        }\n      }\n    }\n  }\n\n  create_el({ left, top, width, height, id, classes, append_to }) {\n    let $el = document.createElement('div');\n    $el.classList.add(classes);\n    $el.style.top = top + 'px';\n    $el.style.left = left + 'px';\n    if (id) $el.id = id;\n    if (width) $el.style.width = width + 'px';\n    if (height) $el.style.height = height + 'px';\n    append_to.appendChild($el);\n    return $el;\n  }\n\n  make_dates() {\n    this.upper_texts_x = {};\n    this.get_dates_to_draw(this.dates, null).forEach((date, i) => {\n      this.last_date_info = date;\n      this.draw_date(date, i);\n    });\n  }\n\n  get_dates_to_draw(dates, last) {\n    let last_date = last;\n    return dates.map((date, i) => {\n      const d = this.get_date_info(date, last_date, i);\n      last_date = d;\n      return d;\n    });\n  }\n\n  get_date_info(date, last_date_info) {\n    let last_date = last_date_info\n      ? last_date_info.date\n      : date_utils.add(date, 1, 'day');\n    const date_text = {\n      Hour_lower: date_utils.format(date, 'HH', this.options.language),\n      'Quarter Day_lower': date_utils.format(date, 'HH', this.options.language),\n      'Half Day_lower': date_utils.format(date, 'HH', this.options.language),\n      Day_lower:\n        date.getDate() !== last_date.getDate()\n          ? date_utils.format(date, 'D', this.options.language)\n          : '',\n      Week_lower:\n        date.getMonth() !== last_date.getMonth()\n          ? date_utils.format(date, 'M月D日', this.options.language)\n          : date_utils.format(date, 'D', this.options.language),\n      Month_lower: date_utils.format(date, 'M月', this.options.language),\n      'Quarter Year_lower':\n        !last_date_info || date.getMonth() !== last_date.getMonth()\n          ? 'Q' + date_utils.format(date, 'Q', this.options.language)\n          : '',\n      Year_lower: date_utils.format(date, 'YYYY年', this.options.language),\n      Hour_upper:\n        date.getDate() !== last_date.getDate()\n          ? date_utils.format(date, 'MM月D日', this.options.language)\n          : '',\n      'Quarter Day_upper':\n        date.getDate() !== last_date.getDate()\n          ? date_utils.format(date, 'MM月D日', this.options.language)\n          : '',\n      'Half Day_upper':\n        date.getDate() !== last_date.getDate()\n          ? date_utils.format(date, 'MM月D日', this.options.language)\n          : '',\n      Day_upper:\n        !last_date_info || date.getMonth() !== last_date.getMonth()\n          ? date_utils.format(date, 'YYYY年MM月', this.options.language)\n          : '',\n      Week_upper:\n        !last_date_info || date.getMonth() !== last_date.getMonth()\n          ? date_utils.format(date, 'YYYY年MM月', this.options.language)\n          : '',\n      Month_upper:\n        !last_date_info || date.getFullYear() !== last_date.getFullYear()\n          ? date_utils.format(date, 'YYYY年', this.options.language)\n          : '',\n      'Quarter Year_upper':\n        !last_date_info || date.getFullYear() !== last_date.getFullYear()\n          ? date_utils.format(date, 'YYYY年', this.options.language)\n          : '',\n      Year_upper: '',\n    };\n\n    // special Month scale\n    let column_width = this.get_date_width(date);\n\n    const base_pos = {\n      x: last_date_info\n        ? last_date_info.base_pos_x + last_date_info.column_width\n        : 0,\n      lower_y: this.options.header_height - 20,\n      upper_y: Math.max(6, this.options.header_height - 50),\n    };\n\n    const base_tick = {\n      line: false,\n    };\n    if (this.options.header_tick) {\n      base_tick.line = this.get_thick_mode(date);\n    }\n\n    // starting_point upper:center-or-start lower:center\n    const x_pos = {\n      Hour_lower: column_width / 2,\n      Hour_upper: (column_width * 24) / 2,\n      'Quarter Day_lower': column_width / 2,\n      'Quarter Day_upper': (column_width * 4) / 2,\n      'Half Day_lower': column_width / 2,\n      'Half Day_upper': (column_width * 2) / 2,\n      Day_lower: column_width / 2,\n      Day_upper: column_width / 2,\n      Week_lower: 0,\n      Week_upper: 19,\n      Month_lower: column_width / 2,\n      Month_upper: 19,\n      'Quarter Year_lower': column_width / 2,\n      'Quarter Year_upper': (column_width * 4) / 2,\n      Year_lower: column_width / 2,\n      Year_upper: 19,\n    };\n    return {\n      date,\n      formatted_date: date_utils.format(date).replaceAll(' ', '_'),\n      column_width,\n      base_pos_x: base_pos.x,\n      upper_text: this.options.upper_text\n        ? this.options.upper_text(\n            date,\n            this.options.view_mode,\n            date_text[`${this.options.view_mode}_upper`],\n          )\n        : date_text[`${this.options.view_mode}_upper`],\n      lower_text: this.options.lower_text\n        ? this.options.lower_text(\n            date,\n            this.options.view_mode,\n            date_text[`${this.options.view_mode}_lower`],\n          )\n        : date_text[`${this.options.view_mode}_lower`],\n      upper_x: base_pos.x + x_pos[`${this.options.view_mode}_upper`],\n      upper_y: base_pos.upper_y,\n      lower_x: base_pos.x + x_pos[`${this.options.view_mode}_lower`],\n      lower_y: base_pos.lower_y,\n      tick_line: base_tick.line,\n    };\n  }\n\n  draw_date(date, i) {\n    let $lower_text = this.create_el({\n      left: date.lower_x,\n      top: date.lower_y,\n      id: date.formatted_date,\n      classes: 'lower-text',\n      append_to: this.$lower_header,\n    });\n    $lower_text.innerText = date.lower_text;\n    if (!this.view_is(VIEW_MODE.WEEK)) {\n      $lower_text.style.left = +$lower_text.style.left.slice(0, -2) - $lower_text.clientWidth / 2 + 'px';\n    }\n\n    if (date.upper_text) {\n      if (this.upper_texts_x[date.upper_text] === undefined) {\n        let $upper_text = this.create_el({\n          left: date.upper_x,\n          top: date.upper_y,\n          classes: 'upper-text',\n          append_to: this.$upper_header,\n        });\n        $upper_text.innerText = date.upper_text;\n      }\n\n      this.upper_texts_x[date.upper_text] = date.upper_x;\n    }\n\n    if (date.tick_line) {\n      this.create_el({\n        left: date.base_pos_x - 1,\n        top: date.lower_y,\n        width: 2,\n        height: this.options.header_height - 20,\n        classes: 'tick-line',\n        append_to: this.$line_header,\n      });\n    }\n  }\n\n  make_bars() {\n    const bar_fragment = document.createDocumentFragment();\n    this.bars = this.tasks.map((task) => {\n      const bar = new Bar(this, task);\n      bar_fragment.appendChild(bar.group);\n      return bar;\n    });\n    this.layers.bar.appendChild(bar_fragment);\n  }\n\n  make_arrows() {\n    this.arrows = [];\n    if (!this.options.dependencies) return;\n    const arrow_fragment = document.createDocumentFragment();\n    for (let task of this.tasks) {\n      let arrows = [];\n      arrows = task.dependencies\n        .map((task_id) => {\n          const dependency = this.get_task(task_id);\n          if (!dependency) return;\n          const arrow = new Arrow(\n            this,\n            this.bars[dependency._index], // from_task\n            this.bars[task._index], // to_task\n          );\n          arrow_fragment.appendChild(arrow.element);\n          return arrow;\n        })\n        .filter(Boolean); // filter falsy values\n      this.arrows = this.arrows.concat(arrows);\n    }\n    this.layers.arrow.appendChild(arrow_fragment);\n  }\n\n  map_arrows_on_bars() {\n    for (let bar of this.bars) {\n      bar.arrows = this.arrows.filter((arrow) => {\n        return (\n          arrow.from_task.task.id === bar.task.id ||\n          arrow.to_task.task.id === bar.task.id\n        );\n      });\n    }\n  }\n\n  set_scroll_position(date) {\n    if (!date || date === 'start') {\n      date = this.gantt_start;\n    } else if (date === 'today') {\n      return this.scroll_today();\n    } else if (typeof date === 'string') {\n      date = date_utils.parse(date);\n    }\n\n    const parent_element = this.$svg.parentElement;\n    if (!parent_element) return;\n\n    const hours_before_first_task = date_utils.diff(\n      date,\n      this.gantt_start,\n      'hour',\n    );\n    // 1/3 padding\n    const sharing = parent_element.clientWidth / 3;\n    const space = (sharing / this.options.column_width) * this.options.step;\n    const distance = hours_before_first_task - space;\n\n    // position\n    const scroll_pos =\n      (distance / this.options.step) * this.options.column_width;\n    // smooth、auto\n    parent_element.scrollTo({ left: scroll_pos, behavior: 'auto' });\n  }\n\n  scroll_today() {\n    this.set_scroll_position(new Date().setHours(0, 0, 0, 0));\n  }\n\n  bind_grid_scroll() {\n    // onmousewheel\n    $.on(this.$container_header, 'wheel', (event) => {\n      if (event.shiftKey || event.deltaX) {\n        const scrollMove = event.deltaX ? event.deltaX : event.deltaY;\n        const scrollX = this.$container_main.scrollLeft || 0;\n        const grid_width = $.attr(this.$svg, 'width');\n        let newScrollX = scrollX + scrollMove;\n        if (newScrollX < 0) {\n          newScrollX = 0;\n        } else if (newScrollX > grid_width) {\n          newScrollX = grid_width;\n        }\n        this.$container_main.scrollLeft = newScrollX;\n        event.preventDefault();\n      }\n    });\n\n    $.on(\n      this.$container_main,\n      'scroll',\n      $.throttle(20, () => {\n        const scrollLeft = this.$container_main.scrollLeft;\n        this.$container_header.scrollLeft = scrollLeft;\n      }),\n    );\n  }\n\n  bind_grid_click() {\n    $.on(this.$container, this.options.popup_trigger, () => {\n      this.unselect_all();\n      this.hide_popup();\n    });\n  }\n\n  bind_bar_create() {\n    let x_on_start = 0;\n    let y_on_start = 0;\n    let matched_task = null;\n    let is_creating = null;\n    let holder = null;\n    this.bar_being_created = null;\n\n    const radius = this.options.bar_corner_radius;\n    const bar_height = this.options.bar_height;\n    const row_height = bar_height + this.options.padding;\n\n    $.on(this.$svg, 'mousedown', (e) => {\n      if (this.options.readonly) return;\n\n      // location\n      const index = parseInt(e.offsetY / row_height);\n      matched_task = this.tasks[index];\n      // only empty date\n      if (!matched_task || (matched_task && matched_task.empty !== true))\n        return;\n      this.bar_being_created = matched_task.id;\n      // start record\n      is_creating = true;\n      x_on_start = e.offsetX;\n      y_on_start = this.get_snap_coord(e.offsetY);\n    });\n\n    $.on(this.$svg, 'mousemove', (e) => {\n      if (!is_creating) return;\n      let dx = e.offsetX - x_on_start;\n\n      // free distance\n      const width = Math.abs(dx);\n      // create rect\n      if (!holder) {\n        holder = createSVG('rect', {\n          x: x_on_start,\n          y: y_on_start,\n          width: 0,\n          height: bar_height,\n          rx: radius,\n          ry: radius,\n          class: 'bar-inner',\n          'data-id': matched_task.id,\n          append_to: this.layers.progress,\n        });\n      }\n      // move-right\n      let x = x_on_start;\n      if (dx < 0) {\n        // move-left\n        x = x_on_start - width;\n      }\n      holder.setAttribute('x', x);\n      holder.setAttribute('width', width);\n    });\n\n    $.on(this.$svg, 'mouseup', () => {\n      this.bar_being_created = null;\n      if (holder) {\n        const start_x = holder.getX();\n        const end_x = holder.getX() + holder.getBBox().width;\n        let date_start = this.get_snap_date(start_x);\n        let date_end = this.get_snap_date(end_x);\n        if (this.options.drag_ignore_hours) {\n          // Non-hourly computation\n          if (\n            !this.view_is([\n              VIEW_MODE.HOUR,\n              VIEW_MODE.QUARTER_DAY,\n              VIEW_MODE.HALF_DAY,\n            ])\n          ) {\n            date_start = new Date(date_start.setHours(0, 0, 0, 0));\n            date_end = new Date(\n              date_utils.add(date_end, 1, 'day').setHours(0, 0, 0, 0),\n            );\n          }\n        }\n\n        const update_task = Object.assign(matched_task, {\n          start: date_start,\n          _start: date_start,\n          end: date_end,\n          _end: date_end,\n          empty: false,\n          invalid: false,\n        });\n        this.replace(update_task, matched_task);\n\n        // remove holder dom\n        this.layers.progress.removeChild(holder);\n        // trigger event\n        this.trigger_event('date_change', [\n          matched_task,\n          date_start,\n          date_utils.add(date_end, -1, 'second'),\n        ]);\n      }\n      holder = null;\n    });\n\n    document.addEventListener('mouseup', () => {\n      is_creating = false;\n    });\n  }\n\n  bind_bar_events() {\n    let is_dragging = false;\n    let x_on_start = 0;\n    let x_on_scroll_start = 0;\n    let y_on_start = 0;\n    let is_resizing_left = false;\n    let is_resizing_right = false;\n    let parent_bar_id = null;\n    let bars = []; // instanceof Bar\n    this.bar_being_dragged = null;\n\n    function action_in_progress() {\n      return is_dragging || is_resizing_left || is_resizing_right;\n    }\n\n    $.on(this.$svg, 'mousedown', '.bar-wrapper, .handle', (e, element) => {\n      if (this.options.readonly) return;\n\n      const bar_wrapper = $.closest('.bar-wrapper', element);\n      bars.forEach((bar) => bar.group.classList.remove('active'));\n\n      if (element.classList.contains('left')) {\n        is_resizing_left = true;\n      } else if (element.classList.contains('right')) {\n        is_resizing_right = true;\n      } else if (element.classList.contains('bar-wrapper')) {\n        is_dragging = true;\n      }\n\n      bar_wrapper.classList.add('active');\n      this.hide_popup();\n\n      x_on_start = e.offsetX;\n      y_on_start = e.offsetY;\n\n      parent_bar_id = bar_wrapper.getAttribute('data-id');\n      const ids = [parent_bar_id];\n      // drag sync children\n      if (this.options.drag_sync_child) {\n        ids.push(...this.get_all_dependent_tasks(parent_bar_id));\n      }\n      bars = ids.map((id) => this.get_bar(id));\n\n      this.bar_being_dragged = parent_bar_id;\n\n      bars.forEach((bar) => {\n        if (bar.empty) return;\n        const $bar = bar.$bar;\n        $bar.ox = $bar.getX();\n        $bar.oy = $bar.getY();\n        $bar.owidth = $bar.getWidth();\n        $bar.finaldx = 0;\n      });\n    });\n\n    const handle_width = this.options.handle_width;\n    $.on(this.$svg, 'mousemove', (e) => {\n      if (!action_in_progress()) return;\n      const dx = e.offsetX - x_on_start;\n      const dy = e.offsetY - y_on_start;\n\n      bars.forEach((bar) => {\n        if (bar.empty) return;\n        const $bar = bar.$bar;\n        // free-distance\n        $bar.finaldx = dx;\n        this.hide_popup();\n        if (is_resizing_left) {\n          if ($bar.finaldx - $bar.owidth + handle_width >= 0) return;\n          if (parent_bar_id === bar.task.id) {\n            bar.update_bar_position({\n              x: $bar.ox + $bar.finaldx,\n              width: $bar.owidth - $bar.finaldx,\n            });\n          } else {\n            bar.update_bar_position({\n              x: $bar.ox + $bar.finaldx,\n            });\n          }\n        } else if (is_resizing_right) {\n          if ($bar.finaldx + $bar.owidth < handle_width) return;\n          if (parent_bar_id === bar.task.id) {\n            bar.update_bar_position({\n              width: $bar.owidth + $bar.finaldx,\n            });\n          }\n        } else if (is_dragging) {\n          bar.update_bar_position({ x: $bar.ox + $bar.finaldx });\n        }\n\n        // show drag_backdrop\n        if (parent_bar_id === bar.task.id) {\n          let x = 0;\n          const scrollLeft = this.$container_main.scrollLeft;\n          if (is_resizing_right) {\n            x = $bar.ox - scrollLeft;\n          } else {\n            x = $bar.ox + $bar.finaldx - scrollLeft;\n          }\n          this.show_backdrop({\n            x: x,\n            width: $bar.getWidth(),\n            bar,\n          });\n        }\n      });\n    });\n\n    $.on(this.$svg, 'mouseup', () => {\n      this.bar_being_dragged = null;\n      this.hide_backdrop();\n      bars.forEach((bar) => {\n        if (bar.empty) return;\n        const $bar = bar.$bar;\n        if (!$bar.finaldx) return;\n\n        // calculate start_date end_date\n        const { new_start_date, new_end_date } = bar.compute_start_end_date();\n\n        const date_start = new Date(date_utils.clone(new_start_date).setHours(0, 0, 0, 0));\n        const dx_start = this.get_snap_distance(date_start, this.gantt_start);\n\n        let date_end = new Date(date_utils.clone(new_end_date).setHours(0, 0, 0, 0));\n        if (new_end_date > date_end) {\n          date_end = date_utils.add(date_end, 1, 'day');\n        }\n        const dx_end = this.get_snap_distance(date_end, this.gantt_start);\n\n        if (this.options.drag_ignore_hours) {\n          // calculate drop coord\n          if (\n            !this.view_is([\n              VIEW_MODE.HOUR,\n              VIEW_MODE.QUARTER_DAY,\n              VIEW_MODE.HALF_DAY,\n            ])\n          ) {\n            bar.update_bar_position({\n              x: dx_start,\n              width: dx_end - dx_start,\n            });\n          }\n        }\n        // out of limit date\n        if (date_start < this.gantt_start || date_end > this.gantt_end) {\n          this.update_gantt_dates({\n            start: date_start,\n            end: date_end,\n          });\n        }\n\n        $bar.finaldx = 0;\n        bar.date_changed();\n        bar.set_action_completed();\n      });\n    });\n\n    document.addEventListener('mouseup', () => {\n      is_dragging = false;\n      is_resizing_left = false;\n      is_resizing_right = false;\n    });\n\n    $.on(this.$container_main, 'scroll', (e) => {\n      let elements = document.querySelectorAll('.bar-wrapper');\n      let localBars = [];\n      const ids = [];\n      let dx;\n      if (x_on_scroll_start) {\n        dx = e.currentTarget.scrollLeft - x_on_scroll_start;\n      }\n\n      const daysSinceStart =\n        ((e.currentTarget.scrollLeft / this.options.column_width) *\n          this.options.step) /\n        24;\n      let format_str = 'D MMM';\n      if (\n        this.view_is([VIEW_MODE.YEAR, VIEW_MODE.QUARTER_YEAR, VIEW_MODE.MONTH])\n      )\n        format_str = 'YYYY年';\n      else if (this.view_is([VIEW_MODE.DAY, VIEW_MODE.WEEK]))\n        format_str = 'YYYY年MM月';\n      else if (this.view_is(VIEW_MODE.HALF_DAY)) format_str = 'D MMM';\n      else if (this.view_is(VIEW_MODE.HOUR)) format_str = 'D MMMM';\n\n      // language\n      const currentUpper = date_utils.format(\n        date_utils.add(this.gantt_start, daysSinceStart, 'day'),\n        format_str,\n        this.options.language,\n      );\n      const upperTexts = Array.from(document.querySelectorAll('.upper-text'));\n      const $el = upperTexts.find((el) => el.textContent === currentUpper);\n      if ($el && !$el.classList.contains('current-upper')) {\n        const $current = document.querySelector('.current-upper');\n        if ($current) {\n          $current.classList.remove('current-upper');\n          $current.style.left = this.upper_texts_x[$current.textContent] + 'px';\n        }\n\n        $el.classList.add('current-upper');\n        // 38/2 - 8 first-point\n        $el.style.left = '11px';\n      }\n\n      Array.prototype.forEach.call(elements, function (el, i) {\n        ids.push(el.getAttribute('data-id'));\n      });\n\n      if (dx) {\n        localBars = ids.map((id) => this.get_bar(id));\n        if (this.options.auto_move_label) {\n          localBars.forEach((bar) => {\n            bar.update_label_position_on_horizontal_scroll({\n              x: dx,\n              sx: e.currentTarget.scrollLeft,\n            });\n          });\n        }\n      }\n\n      x_on_scroll_start = e.currentTarget.scrollLeft;\n\n      this.trigger_event('scroll', [e]);\n    });\n\n    if (this.options.drag_bar_progress) {\n      this.bind_bar_progress();\n    }\n  }\n\n  bind_bar_progress() {\n    let x_on_start = 0;\n    let y_on_start = 0;\n    let is_resizing = null;\n    let bar = null;\n    let $bar_progress = null;\n    let $bar = null;\n\n    $.on(this.$svg, 'mousedown', '.handle.progress', (e, handle) => {\n      if (this.options.readonly) return;\n\n      is_resizing = true;\n      x_on_start = e.offsetX;\n      y_on_start = e.offsetY;\n\n      const $bar_wrapper = $.closest('.bar-wrapper', handle);\n      const id = $bar_wrapper.getAttribute('data-id');\n      bar = this.get_bar(id);\n\n      $bar_progress = bar.$bar_progress;\n      $bar = bar.$bar;\n\n      $bar_progress.finaldx = 0;\n      $bar_progress.owidth = $bar_progress.getWidth();\n      $bar_progress.min_dx = -$bar_progress.getWidth();\n      $bar_progress.max_dx = $bar.getWidth() - $bar_progress.getWidth();\n    });\n\n    $.on(this.$svg, 'mousemove', (e) => {\n      if (!is_resizing) return;\n      let dx = e.offsetX - x_on_start;\n      let dy = e.offsetY - y_on_start;\n\n      if (dx > $bar_progress.max_dx) {\n        dx = $bar_progress.max_dx;\n      }\n      if (dx < $bar_progress.min_dx) {\n        dx = $bar_progress.min_dx;\n      }\n\n      const $handle = bar.$handle_progress;\n      $.attr($bar_progress, 'width', $bar_progress.owidth + dx);\n      $.attr($handle, 'points', bar.get_progress_polygon_points());\n      $bar_progress.finaldx = dx;\n    });\n\n    $.on(this.$svg, 'mouseup', () => {\n      is_resizing = false;\n      if (!($bar_progress && $bar_progress.finaldx)) return;\n\n      $bar_progress.finaldx = 0;\n      bar.progress_changed();\n      bar.set_action_completed();\n      bar = null;\n      $bar_progress = null;\n      $bar = null;\n    });\n  }\n\n  get_all_dependent_tasks(task_id) {\n    let out = [];\n    let to_process = [task_id];\n    while (to_process.length) {\n      const deps = to_process.reduce((acc, curr) => {\n        acc = acc.concat(this.dependency_map[curr]);\n        return acc;\n      }, []);\n\n      out = out.concat(deps);\n      to_process = deps.filter((d) => !to_process.includes(d));\n    }\n\n    return out.filter(Boolean);\n  }\n\n  get_snap_date(x, base_date = this.gantt_start) {\n    const x_in_units = x / this.options.column_width;\n    return date_utils.add(base_date, x_in_units * this.options.step, 'hour');\n  }\n\n  get_snap_distance(end, start) {\n    const hours = date_utils.diff(end, start, 'hour');\n    let x = (hours / this.options.step) * this.options.column_width;\n\n    if (this.view_is(VIEW_MODE.MONTH)) {\n      const days = date_utils.diff(end, start, 'day');\n      x = (days * this.options.column_width) / 30;\n\n      // 修正误差\n      const date_coord = this.get_snap_date(x, start);\n      if (date_coord < end) {\n        const diff = date_utils.diff(end, date_coord, 'hour');\n        x += (diff / this.options.step) * this.options.column_width;\n      }\n    }\n\n    return x;\n  }\n\n  get_snap_coord(oy) {\n    const padding = this.options.padding / 2;\n    const header_height = 0;\n    const row_height = this.options.bar_height + this.options.padding;\n\n    const mod = parseInt((oy - header_height) / row_height);\n    return header_height + mod * row_height + padding;\n  }\n\n  unselect_all() {\n    [...this.$svg.querySelectorAll('.bar-wrapper')].forEach((el) => {\n      el.classList.remove('active');\n    });\n  }\n\n  view_is(modes) {\n    if (typeof modes === 'string') {\n      return this.options.view_mode === modes;\n    }\n\n    if (Array.isArray(modes)) {\n      return modes.some((mode) => this.options.view_mode === mode);\n    }\n\n    return false;\n  }\n\n  get_task(id) {\n    return this.tasks.find((task) => {\n      return task.id === id;\n    });\n  }\n\n  get_bar(id) {\n    return this.bars.find((bar) => {\n      return bar.task.id === id;\n    });\n  }\n\n  show_backdrop({ x, width, bar }) {\n    if (!this.backdrop) {\n      this.backdrop = new Backdrop(this.$drag_backdrop);\n    }\n\n    const { new_start_date, new_end_date } = bar.compute_start_end_date();\n    const subtract_second_date = date_utils.add(new_end_date, -1, 'second');\n\n    let symbol = 'MM-DD';\n    // different years\n    if (\n      date_utils.format(new_start_date, 'YYYY') !==\n      date_utils.format(subtract_second_date, 'YYYY')\n    ) {\n      symbol = 'YYYY-MM-DD';\n    }\n\n    const date_start = date_utils.format(new_start_date, symbol);\n    const date_end = date_utils.format(subtract_second_date, symbol);\n    this.backdrop.showAt({ x, width, range: [date_start, date_end] });\n  }\n\n  hide_backdrop() {\n    this.backdrop && this.backdrop.hide();\n  }\n\n  show_popup(options) {\n    if (this.options.popup === false) return;\n    if (!this.popup) {\n      this.popup = new Popup(this, this.$popup_wrapper);\n    }\n    this.popup.show(options);\n  }\n\n  hide_popup() {\n    this.popup && this.popup.hide();\n  }\n\n  trigger_event(event, args) {\n    if (this.options['on_' + event]) {\n      this.options['on_' + event].apply(null, args);\n    }\n  }\n\n  clear() {\n    this.$svg.innerHTML = '';\n    this.$container_toolbar.innerHTML = '';\n    this.$header?.remove?.();\n    this.hide_popup();\n  }\n}\n\nGantt.VIEW_MODE = VIEW_MODE;\n\nGantt.VERSION = version;\n\nfunction generate_id(task) {\n  return task.name + '_' + Math.random().toString(36).slice(2, 12);\n}\n"],"names":["YEAR","MONTH","DAY","HOUR","MINUTE","SECOND","MILLISECOND","SHORTENED","January","February","March","April","May","June","July","August","September","October","November","December","date_utils","parse_duration","duration","matches","exec","parseInt","scale","parse","date","date_separator","time_separator","Date","date_parts","time_parts","parts","split","map","val","vals","length","parseFloat","concat","to_string","with_time","TypeError","this","get_date_values","i","padStart","date_string","time_string","format","format_string","lang","month_name","Intl","DateTimeFormat","month","month_name_capitalized","charAt","toUpperCase","slice","values","format_map","YYYY","MM","DD","HH","mm","ss","M","D","h","m","s","SSS","Q","MMMM","MMM","str","formatted_values","Object","keys","sort","a","b","forEach","key","includes","replaceAll","push","value","diff","date_a","date_b","milliseconds","seconds","hours","minutes","days","months","years","endsWith","Math","floor","today","now","add","qty","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","getMilliseconds","start_of","scores","should_reset","_scale","clone","get_days_in_month","no_of_days","year","targetLength","padString","String","repeat","$","expr","con","document","querySelector","createSVG","tag","attrs","elem","createElementNS","attr","append_to","appendChild","innerHTML","setAttribute","animateSVG","svgElement","from","to","animatedSvgElement","dur","begin","animEl","attributeName","animateElement","calcMode","keyTimes","keySplines","cubic_bezier","getAnimationElement","event","createEvent","initEvent","eventName","dispatchEvent","name","ease","linear","on","element","selector","callback","delegate","bind","off","handler","removeEventListener","addEventListener","e","delegatedTarget","target","closest","call","parentNode","getAttribute","throttle","delay","noTrailing","debounceMode","timeoutID","lastExec","undefined","self","elapsed","Number","args","arguments","apply","clear","clearTimeout","setTimeout","VIEW_MODE","QUARTER_DAY","HALF_DAY","WEEK","QUARTER_YEAR","LAN_ZH","TODAY","LAN_EN","version","Bar","constructor","gantt","task","set_defaults","prepare","draw","action_completed","prepare_doms","prepare_values","prepare_helpers","group","class","custom_class","important","id","bar_group","handle_group","empty","invalid","height","options","bar_height","image_size","compute_x","compute_y","compute_duration","corner_radius","bar_corner_radius","width","column_width","progress_width","progress","SVGElement","prototype","getX","getY","getWidth","getHeight","getEndX","prepare_expected_progress_values","compute_expected_progress","expected_progress_width","expected_progress","draw_bar","draw_progress_bar","show_expected_progress","draw_expected_progress_bar","draw_label","draw_resize_handles","thumbnail","draw_thumbnail","$bar","x","y","rx","ry","classList","$expected_bar_progress","$bar_progress","x_coord","requestAnimationFrame","update_label_position","defs","clipPath","href","readonly","bar","handle_width","gw","drag_bar_progress","$handle_progress","points","get_progress_polygon_points","join","bar_progress","icon_width","icon_height","setup_click_event","timeout","clickTimeout","trigger_event","screenX","screenY","scrollLeft","$container_main","show_popup","offsetX","hide_popup","clickCount","bar_being_dragged","subtitle","_start","language","_end","target_element","title","update_bar_task","old_task","label","cls","update_bar_vertical","offset","Array","children","el","$thumbnail","arr","$handle","update_bar_position","drag_limit_child","dependencies","dep","get_bar","reduce","_","curr","update_attr","$date_highlight","style","left","update_handle_position","date_changed","update_expected_progressbar_position","update_progressbar_position","update_arrow_position","update_label_position_on_horizontal_scroll","sx","container","img","img_mask","barWidthLimit","newLabelX","newImgX","imgWidth","getBBox","labelEndX","viewportCentral","clientWidth","contains","changed","new_start_date","new_end_date","compute_start_end_date","remove","progress_changed","new_progress","compute_progress","set_action_completed","bx","bw","get_snap_date","gantt_start","step","task_start","view_is","padding","_index","isNaN","x_offset","x_offset_label_img","barWidth","contentWidth","arrows","arrow","update","Arrow","from_task","to_task","calculate_path","drawInner","rowHeight","taskHeight","arrowCurve","arrow_curve","taskFrom","taskTo","taskFromX2","taskFromY1","taskToX1","taskToEndPosition","taskFromEndPosition","arrowIndent","path","trianglePoints","svgPath","d","fill","svgPolygon","Popup","parent","custom_html","popup","make","hide","pointer","show","Error","html","position_meta","HTMLElement","getBoundingClientRect","parentWidth","parentHeight","clientHeight","ganttOptions","ganttWidth","$container","ganttHeight","dy","scrollTop","pos_x","pos_y","header_height","top","display","Backdrop","drag_mask","date_range","showAt","range","htmlHold","VIEW_MODE_PADDING","TICK_LINE","BOTH","HORIZONTAL","VERTICAL","DEFAULT_OPTIONS","header_tick","view_modes","view_mode","popup_trigger","drag_ignore_hours","drag_sync_child","highlight_weekend","scroll_to","lines","auto_move_label","today_button","view_mode_select","Gantt","wrapper","tasks","setup_wrapper","setup_options","setup_tasks","change_view_mode","bind_events","svg_element","wrapper_element","$svg","createElement","$container_header","parentElement","$container_toolbar","$popup_wrapper","$drag_backdrop","view_mode_padding","entries","format_task","setup_dependencies","dependency_map","t","format_dependency","start","end","tmpDuration","every","deps","trim","filter","random","toString","generate_id","refresh","original","get_task","current","assign","update_task","replace","splice","move_x","move_w","start_date","dx","get_snap_distance","end_date","index","tid","findIndex","item","row_height","remove_bar","bars","layers","removeChild","$rows","grid","lastChild","$lines","make_arrows","map_arrows_on_bars","grid_height","insert","insert_task","limit_start","limit_end","gantt_end","update_gantt_dates","insert_bar","target_bar","insertBefore","row_width","dates","insert_y","$grid_el","$lines_layer","x1","y1","x2","y2","prev_task","update_bar","old_bar","target_postion","mode","record_start","performance","update_view_scale","setup_dates","render","record_time","setup_gantt_dates","setup_date_values","pad_gantt_dates","viewKey","padding_start","padding_end","setHours","cur_date","old_gantt_start","new_gantt_start","left_dates","get_left_dates","scale_grid","translate","update_gantt_left","old_gantt_end","new_gantt_end","update_gantt_right","get_dates_to_draw","draw_date","highlightWeekends","highlightToday","draw_col_tick","start_temp","unshift","initial_date","last_date_info","right_dates","get_right_dates","new_grid_width","$header","querySelectorAll","row","line","$upper_header","u","new_x","upper_texts_x","textContent","$lower_header","l","tick","dpath","set_readonly","bool","bind_grid_scroll","bind_grid_click","bind_bar_create","bind_bar_events","setup_layers","make_grid","make_dates","make_bars","make_grid_extras","set_scroll_position","layer","make_grid_background","make_grid_rows","make_grid_header","make_grid_toolbar","make_grid_highlights","make_grid_ticks","grid_width","scroll_height","overflow","position","row_y","fragment","createDocumentFragment","$line_header","$side_header","$select","modes","modes_values","modes_keys","$option","vm","$today_button","onclick","scroll_today","max","draw_row_line","row_fragment","tick_x","get_date_width","data_height","tick_height","tick_fragment","tick_class","get_thick_mode","$el","firstChild","thick","computeGridHighlightDimensions","append","weekends_fragment","setDate","getDay","path_height","$today","getElementById","create_el","classes","last","last_date","get_date_info","date_text","Hour_lower","Day_lower","Week_lower","Month_lower","Year_lower","Hour_upper","Day_upper","Week_upper","Month_upper","Year_upper","base_pos","base_pos_x","lower_y","upper_y","base_tick","x_pos","formatted_date","upper_text","lower_text","upper_x","lower_x","tick_line","$lower_text","innerText","bar_fragment","arrow_fragment","task_id","dependency","Boolean","parent_element","scroll_pos","scrollTo","behavior","shiftKey","deltaX","scrollMove","deltaY","scrollX","newScrollX","preventDefault","unselect_all","x_on_start","y_on_start","matched_task","is_creating","holder","bar_being_created","radius","offsetY","get_snap_coord","abs","start_x","end_x","date_start","date_end","is_dragging","x_on_scroll_start","is_resizing_left","is_resizing_right","parent_bar_id","bar_wrapper","ids","get_all_dependent_tasks","ox","oy","owidth","finaldx","show_backdrop","hide_backdrop","dx_start","dx_end","elements","localBars","currentTarget","daysSinceStart","format_str","currentUpper","find","$current","bind_bar_progress","is_resizing","handle","min_dx","max_dx","out","to_process","acc","base_date","x_in_units","date_coord","isArray","some","backdrop","subtract_second_date","symbol","VERSION"],"mappings":"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"}