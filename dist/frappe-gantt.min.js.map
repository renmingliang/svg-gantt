{"version":3,"file":"frappe-gantt.min.js","sources":["../src/date_utils.js","../src/svg_utils.js","../src/lang_utils.js","../src/bar.js","../src/arrow.js","../src/popup.js","../src/backdrop.js","../src/index.js"],"sourcesContent":["const YEAR = \"year\";\nconst MONTH = \"month\";\nconst DAY = \"day\";\nconst HOUR = \"hour\";\nconst MINUTE = \"minute\";\nconst SECOND = \"second\";\nconst MILLISECOND = \"millisecond\";\n\nconst SHORTENED = {\n  January: \"Jan\",\n  February: \"Feb\",\n  March: \"Mar\",\n  April: \"Apr\",\n  May: \"May\",\n  June: \"Jun\",\n  July: \"Jul\",\n  August: \"Aug\",\n  September: \"Sep\",\n  October: \"Oct\",\n  November: \"Nov\",\n  December: \"Dec\"\n};\n\nexport default {\n  parse_duration(duration) {\n    const regex = /([0-9]{1,})+(y|m|d|h|min|s|ms)/gm;\n    const matches = regex.exec(duration);\n\n    if (matches !== null) {\n      if (matches[2] === \"y\") {\n        return { duration: parseInt(matches[1]), scale: `year` };\n      } else if (matches[2] === \"m\") {\n        return { duration: parseInt(matches[1]), scale: `month` };\n      } else if (matches[2] === \"d\") {\n        return { duration: parseInt(matches[1]), scale: `day` };\n      } else if (matches[2] === \"h\") {\n        return { duration: parseInt(matches[1]), scale: `hour` };\n      } else if (matches[2] === \"min\") {\n        return { duration: parseInt(matches[1]), scale: `minute` };\n      } else if (matches[2] === \"s\") {\n        return { duration: parseInt(matches[1]), scale: `second` };\n      } else if (matches[2] === \"ms\") {\n        return { duration: parseInt(matches[1]), scale: `millisecond` };\n      }\n    }\n  },\n  parse(date, date_separator = \"-\", time_separator = /[.:]/) {\n    if (date instanceof Date) {\n      return date;\n    }\n    if (typeof date === \"string\") {\n      let date_parts, time_parts;\n      const parts = date.split(\" \");\n      date_parts = parts[0]\n        .split(date_separator)\n        .map((val) => parseInt(val, 10));\n      time_parts = parts[1] && parts[1].split(time_separator);\n\n      // month is 0 indexed\n      date_parts[1] = date_parts[1] ? date_parts[1] - 1 : 0;\n\n      let vals = date_parts;\n\n      if (time_parts && time_parts.length) {\n        if (time_parts.length === 4) {\n          time_parts[3] = \"0.\" + time_parts[3];\n          time_parts[3] = parseFloat(time_parts[3]) * 1000;\n        }\n        vals = vals.concat(time_parts);\n      }\n      return new Date(...vals);\n    }\n  },\n\n  to_string(date, with_time = false) {\n    if (!(date instanceof Date)) {\n      throw new TypeError(\"Invalid argument type\");\n    }\n    const vals = this.get_date_values(date).map((val, i) => {\n      if (i === 1) {\n        // add 1 for month\n        val = val + 1;\n      }\n\n      if (i === 6) {\n        return padStart(val + \"\", 3, \"0\");\n      }\n\n      return padStart(val + \"\", 2, \"0\");\n    });\n    const date_string = `${vals[0]}-${vals[1]}-${vals[2]}`;\n    const time_string = `${vals[3]}:${vals[4]}:${vals[5]}.${vals[6]}`;\n\n    return date_string + (with_time ? \" \" + time_string : \"\");\n  },\n\n  format(date, format_string = \"YYYY-MM-DD HH:mm:ss.SSS\", lang = \"en\") {\n    const dateTimeFormat = new Intl.DateTimeFormat(lang, {\n      month: \"long\",\n    });\n    const month_name = dateTimeFormat.format(date);\n    const month_name_capitalized =\n      month_name.charAt(0).toUpperCase() + month_name.slice(1);\n\n    const values = this.get_date_values(date);\n    const format_map = {\n      YYYY: values[0],\n      MM: padStart(values[1] + 1, 2, 0),\n      DD: padStart(values[2], 2, 0),\n      HH: padStart(values[3], 2, 0),\n      mm: padStart(values[4], 2, 0),\n      ss: padStart(values[5], 2, 0),\n      M: values[1] + 1,\n      D: values[2],\n      h: values[3],\n      m: values[4],\n      s: values[5],\n      SSS: values[6],\n      Q: parseInt((values[1] + 1) / 3) + 1,\n      MMMM: month_name_capitalized,\n      MMM: SHORTENED[month_name_capitalized] || month_name_capitalized,\n    };\n\n    let str = format_string;\n    const formatted_values = [];\n\n    Object.keys(format_map)\n      .sort((a, b) => b.length - a.length) // big string first\n      .forEach((key) => {\n        if (str.includes(key)) {\n          str = str.replaceAll(key, `$${formatted_values.length}`);\n          formatted_values.push(format_map[key]);\n        }\n      });\n\n    formatted_values.forEach((value, i) => {\n      str = str.replaceAll(`$${i}`, value);\n    });\n\n    return str;\n  },\n\n  diff(date_a, date_b, scale = DAY) {\n    let milliseconds, seconds, hours, minutes, days, months, years;\n\n    milliseconds = date_a - date_b;\n    seconds = milliseconds / 1000;\n    minutes = seconds / 60;\n    hours = minutes / 60;\n    days = hours / 24;\n    months = days / 30;\n    years = months / 12;\n\n    if (!scale.endsWith(\"s\")) {\n      scale += \"s\";\n    }\n\n    return Math.floor(\n      {\n        milliseconds,\n        seconds,\n        minutes,\n        hours,\n        days,\n        months,\n        years,\n      }[scale],\n    );\n  },\n\n  today() {\n    const vals = this.get_date_values(new Date()).slice(0, 3);\n    return new Date(...vals);\n  },\n\n  now() {\n    return new Date();\n  },\n\n  add(date, qty, scale) {\n    qty = parseInt(qty, 10);\n    const vals = [\n      date.getFullYear() + (scale === YEAR ? qty : 0),\n      date.getMonth() + (scale === MONTH ? qty : 0),\n      date.getDate() + (scale === DAY ? qty : 0),\n      date.getHours() + (scale === HOUR ? qty : 0),\n      date.getMinutes() + (scale === MINUTE ? qty : 0),\n      date.getSeconds() + (scale === SECOND ? qty : 0),\n      date.getMilliseconds() + (scale === MILLISECOND ? qty : 0),\n    ];\n    return new Date(...vals);\n  },\n\n  start_of(date, scale) {\n    const scores = {\n      [YEAR]: 6,\n      [MONTH]: 5,\n      [DAY]: 4,\n      [HOUR]: 3,\n      [MINUTE]: 2,\n      [SECOND]: 1,\n      [MILLISECOND]: 0,\n    };\n\n    function should_reset(_scale) {\n      const max_score = scores[scale];\n      return scores[_scale] <= max_score;\n    }\n\n    const vals = [\n      date.getFullYear(),\n      should_reset(YEAR) ? 0 : date.getMonth(),\n      should_reset(MONTH) ? 1 : date.getDate(),\n      should_reset(DAY) ? 0 : date.getHours(),\n      should_reset(HOUR) ? 0 : date.getMinutes(),\n      should_reset(MINUTE) ? 0 : date.getSeconds(),\n      should_reset(SECOND) ? 0 : date.getMilliseconds(),\n    ];\n\n    return new Date(...vals);\n  },\n\n  clone(date) {\n    return new Date(...this.get_date_values(date));\n  },\n\n  get_date_values(date) {\n    return [\n      date.getFullYear(),\n      date.getMonth(),\n      date.getDate(),\n      date.getHours(),\n      date.getMinutes(),\n      date.getSeconds(),\n      date.getMilliseconds(),\n    ];\n  },\n\n  get_days_in_month(date) {\n    const no_of_days = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n\n    const month = date.getMonth();\n\n    if (month !== 1) {\n      return no_of_days[month];\n    }\n\n    // Feb\n    const year = date.getFullYear();\n    if ((year % 4 === 0 && year % 100 != 0) || year % 400 === 0) {\n      return 29;\n    }\n    return 28;\n  },\n};\n\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/padStart\nfunction padStart(str, targetLength, padString) {\n  str = str + \"\";\n  targetLength = targetLength >> 0;\n  padString = String(typeof padString !== \"undefined\" ? padString : \" \");\n  if (str.length > targetLength) {\n    return String(str);\n  } else {\n    targetLength = targetLength - str.length;\n    if (targetLength > padString.length) {\n      padString += padString.repeat(targetLength / padString.length);\n    }\n    return padString.slice(0, targetLength) + String(str);\n  }\n}\n","export function $(expr, con) {\n  return typeof expr === \"string\"\n    ? (con || document).querySelector(expr)\n    : expr || null;\n}\n\nexport function createSVG(tag, attrs) {\n  const elem = document.createElementNS(\"http://www.w3.org/2000/svg\", tag);\n  for (let attr in attrs) {\n    if (attr === \"append_to\") {\n      const parent = attrs.append_to;\n      parent.appendChild(elem);\n    } else if (attr === \"innerHTML\") {\n      elem.innerHTML = attrs.innerHTML;\n    } else if (attr === 'clipPath') {\n      elem.setAttribute('clip-path', 'url(#' + attrs[attr] + ')');\n    } else {\n      elem.setAttribute(attr, attrs[attr]);\n    }\n  }\n  return elem;\n}\n\nexport function animateSVG(svgElement, attr, from, to) {\n  const animatedSvgElement = getAnimationElement(svgElement, attr, from, to);\n\n  if (animatedSvgElement === svgElement) {\n    // triggered 2nd time programmatically\n    // trigger artificial click event\n    const event = document.createEvent(\"HTMLEvents\");\n    event.initEvent(\"click\", true, true);\n    event.eventName = \"click\";\n    animatedSvgElement.dispatchEvent(event);\n  }\n}\n\nfunction getAnimationElement(\n  svgElement,\n  attr,\n  from,\n  to,\n  dur = \"0.4s\",\n  begin = \"0.1s\",\n) {\n  const animEl = svgElement.querySelector(\"animate\");\n  if (animEl) {\n    $.attr(animEl, {\n      attributeName: attr,\n      from,\n      to,\n      dur,\n      begin: \"click + \" + begin, // artificial click\n    });\n    return svgElement;\n  }\n\n  const animateElement = createSVG(\"animate\", {\n    attributeName: attr,\n    from,\n    to,\n    dur,\n    begin,\n    calcMode: \"spline\",\n    values: from + \";\" + to,\n    keyTimes: \"0; 1\",\n    keySplines: cubic_bezier(\"ease-out\"),\n  });\n  svgElement.appendChild(animateElement);\n\n  return svgElement;\n}\n\nfunction cubic_bezier(name) {\n  return {\n    ease: \".25 .1 .25 1\",\n    linear: \"0 0 1 1\",\n    \"ease-in\": \".42 0 1 1\",\n    \"ease-out\": \"0 0 .58 1\",\n    \"ease-in-out\": \".42 0 .58 1\",\n  }[name];\n}\n\n$.on = (element, event, selector, callback) => {\n  if (!callback) {\n    callback = selector;\n    $.bind(element, event, callback);\n  } else {\n    $.delegate(element, event, selector, callback);\n  }\n};\n\n$.off = (element, event, handler) => {\n  element.removeEventListener(event, handler);\n};\n\n$.bind = (element, event, callback) => {\n  event.split(/\\s+/).forEach(function (event) {\n    element.addEventListener(event, callback);\n  });\n};\n\n$.delegate = (element, event, selector, callback) => {\n  element.addEventListener(event, function (e) {\n    const delegatedTarget = e.target.closest(selector);\n    if (delegatedTarget) {\n      e.delegatedTarget = delegatedTarget;\n      callback.call(this, e, delegatedTarget);\n    }\n  });\n};\n\n$.closest = (selector, element) => {\n  if (!element) return null;\n\n  if (element.matches(selector)) {\n    return element;\n  }\n\n  return $.closest(selector, element.parentNode);\n};\n\n$.attr = (element, attr, value) => {\n  if (!value && typeof attr === \"string\") {\n    return element.getAttribute(attr);\n  }\n\n  if (typeof attr === \"object\") {\n    for (let key in attr) {\n      $.attr(element, key, attr[key]);\n    }\n    return;\n  }\n\n  element.setAttribute(attr, value);\n};\n\n$.throttle = function (delay, noTrailing, callback, debounceMode) {\n    // After wrapper has stopped being called, this timeout ensures that\n    // `callback` is executed at the proper times in `throttle` and `end`\n    // debounce modes.\n    var timeoutID;\n\n    // Keep track of the last time `callback` was executed.\n    var lastExec = 0;\n\n    // `noTrailing` defaults to falsy.\n    if (typeof noTrailing !== 'boolean') {\n        debounceMode = callback;\n        callback = noTrailing;\n        noTrailing = undefined;\n    }\n\n    // The `wrapper` function encapsulates all of the throttling / debouncing\n    // functionality and when executed will limit the rate at which `callback`\n    // is executed.\n    function wrapper() {\n        var self = this;\n        var elapsed = Number(new Date()) - lastExec;\n        var args = arguments;\n\n        // Execute `callback` and update the `lastExec` timestamp.\n        function exec() {\n            lastExec = Number(new Date());\n            callback.apply(self, args);\n        }\n\n        // If `debounceMode` is true (at begin) this is used to clear the flag\n        // to allow future `callback` executions.\n        function clear() {\n            timeoutID = undefined;\n        }\n\n        if (debounceMode && !timeoutID) {\n            // Since `wrapper` is being called for the first time and\n            // `debounceMode` is true (at begin), execute `callback`.\n            exec();\n        }\n\n        // Clear any existing timeout.\n        if (timeoutID) {\n            clearTimeout(timeoutID);\n        }\n\n        if (debounceMode === undefined && elapsed > delay) {\n            // In throttle mode, if `delay` time has been exceeded, execute\n            // `callback`.\n            exec();\n        } else if (noTrailing !== true) {\n            // In trailing throttle mode, since `delay` time has not been\n            // exceeded, schedule `callback` to execute `delay` ms after most\n            // recent execution.\n            //\n            // If `debounceMode` is true (at begin), schedule `clear` to execute\n            // after `delay` ms.\n            //\n            // If `debounceMode` is false (at end), schedule `callback` to\n            // execute after `delay` ms.\n            timeoutID = setTimeout(\n                debounceMode ? clear : exec,\n                debounceMode === undefined ? delay - elapsed : delay,\n            );\n        }\n    }\n\n    // Return the wrapper function.\n    return wrapper;\n};\n","export const VIEW_MODE = {\n  HOUR: \"Hour\",\n  QUARTER_DAY: \"Quarter Day\",\n  HALF_DAY: \"Half Day\",\n  DAY: \"Day\",\n  WEEK: \"Week\",\n  MONTH: \"Month\",\n  QUARTER_YEAR: \"Quarter Year\",\n  YEAR: \"Year\",\n};\n\nexport const getLang = function(lan) {\n  if (lan === 'zh') {\n    return LAN_ZH;\n  } else {\n    return LAN_EN;\n  }\n}\n\nexport const LAN_ZH = {\n  HOUR: \"时\",\n  QUARTER_DAY: \"季时\",\n  HALF_DAY: \"半天\",\n  DAY: \"日\",\n  WEEK: \"周\",\n  MONTH: \"月\",\n  QUARTER_YEAR: \"季\",\n  YEAR: \"年\",\n  TODAY: \"今天\"\n};\n\nexport const LAN_EN = {\n  HOUR: 'Hour',\n  QUARTER_DAY: 'Quarter Day',\n  HALF_DAY: 'Half Day',\n  DAY: 'Day',\n  WEEK: 'Week',\n  MONTH: 'Month',\n  QUARTER_YEAR: 'Quarter Year',\n  YEAR: 'Year',\n  TODAY: \"Today\"\n};","import date_utils from \"./date_utils\";\nimport { $, createSVG, animateSVG } from \"./svg_utils\";\nimport { VIEW_MODE } from \"./lang_utils\";\n\nexport default class Bar {\n  constructor(gantt, task) {\n    this.set_defaults(gantt, task);\n    this.prepare();\n    this.draw();\n    this.bind();\n  }\n\n  set_defaults(gantt, task) {\n    this.action_completed = false;\n    this.gantt = gantt;\n    this.task = task;\n  }\n\n  prepare() {\n    this.prepare_doms();\n    this.prepare_values();\n    this.prepare_helpers();\n  }\n\n  prepare_doms() {\n    this.group = createSVG(\"g\", {\n      class: \"bar-wrapper\" + (this.task.custom_class ? \" \" + this.task.custom_class : \"\") + (this.task.important ? ' important' : ''),\n      \"data-id\": this.task.id,\n    });\n    this.bar_group = createSVG(\"g\", {\n      class: \"bar-group\",\n      append_to: this.group,\n    });\n    this.handle_group = createSVG(\"g\", {\n      class: \"handle-group\",\n      append_to: this.group,\n    });\n  }\n\n  prepare_values() {\n    this.empty = this.task.empty;\n    this.invalid = this.task.invalid;\n    this.height = this.gantt.options.bar_height;\n    this.image_size = this.height - 5;\n    this.compute_x();\n    this.compute_y();\n    this.compute_duration();\n    this.corner_radius = this.gantt.options.bar_corner_radius;\n    this.width = this.gantt.options.column_width * this.duration;\n    this.progress_width =\n      this.gantt.options.column_width *\n      this.duration *\n      (this.task.progress / 100) || 0;\n  }\n\n  prepare_helpers() {\n    SVGElement.prototype.getX = function () {\n      return +this.getAttribute(\"x\");\n    };\n    SVGElement.prototype.getY = function () {\n      return +this.getAttribute(\"y\");\n    };\n    SVGElement.prototype.getWidth = function () {\n      return +this.getAttribute(\"width\");\n    };\n    SVGElement.prototype.getHeight = function () {\n      return +this.getAttribute(\"height\");\n    };\n    SVGElement.prototype.getEndX = function () {\n      return this.getX() + this.getWidth();\n    };\n  }\n\n  prepare_expected_progress_values() {\n    this.compute_expected_progress();\n    this.expected_progress_width =\n      this.gantt.options.column_width *\n      this.duration *\n      (this.expected_progress / 100) || 0;\n  }\n\n  update_bar_vertical({ offset }) {\n    // recalculate\n    this.compute_y();\n\n    if (this.empty) return;\n    // update-bar_group\n    Array.prototype.forEach.call(this.bar_group.children, function (el, i) {\n      const y = $.attr(el, 'y') * 1;\n      el.setAttribute('y', y + offset);\n    });\n    // update-thumbnail\n    if (this.task.thumbnail) {\n      const $thumbnail = this.bar_group.querySelector('#rect_' + this.task.id);\n      const y = $.attr($thumbnail, 'y') * 1;\n      $thumbnail.setAttribute('y', y + offset);\n    }\n    // update-handle_group\n    Array.prototype.forEach.call(this.handle_group.children, function (el, i, arr) {\n      // if (i === arr.length-1) return;\n      const y = $.attr(el, 'y') * 1;\n      el.setAttribute('y', y + offset);\n    });\n    // update-polygon\n    const $handle = this.$handle_progress;\n    if ($handle) {\n      $handle.setAttribute('points', this.get_progress_polygon_points());\n    }\n  }\n\n  draw() {\n    if (this.empty) return;\n    this.draw_bar();\n    this.draw_progress_bar();\n    if (this.gantt.options.show_expected_progress) {\n      this.prepare_expected_progress_values();\n      this.draw_expected_progress_bar();\n    }\n    this.draw_label();\n    this.draw_resize_handles();\n\n    if (this.task.thumbnail) {\n      this.draw_thumbnail();\n    }\n  }\n\n  draw_bar() {\n    this.$bar = createSVG(\"rect\", {\n      x: this.x,\n      y: this.y,\n      width: this.width,\n      height: this.height,\n      rx: this.corner_radius,\n      ry: this.corner_radius,\n      class: \"bar-inner\",\n      append_to: this.bar_group,\n    });\n\n    animateSVG(this.$bar, \"width\", 0, this.width);\n\n    if (this.invalid) {\n      this.$bar.classList.add(\"bar-invalid\");\n    }\n  }\n\n  draw_expected_progress_bar() {\n    if (this.invalid) return;\n    this.$expected_bar_progress = createSVG(\"rect\", {\n      x: this.x,\n      y: this.y,\n      width: this.expected_progress_width,\n      height: this.height,\n      rx: this.corner_radius,\n      ry: this.corner_radius,\n      class: \"bar-expected-progress\",\n      append_to: this.bar_group,\n    });\n\n    animateSVG(\n      this.$expected_bar_progress,\n      \"width\",\n      0,\n      this.expected_progress_width,\n    );\n  }\n\n  draw_progress_bar() {\n    if (this.invalid) return;\n    this.$bar_progress = createSVG(\"rect\", {\n      x: this.x,\n      y: this.y,\n      width: this.progress_width,\n      height: this.height,\n      rx: this.corner_radius,\n      ry: this.corner_radius,\n      class: \"bar-progress\",\n      append_to: this.bar_group,\n    });\n    animateSVG(this.$bar_progress, \"width\", 0, this.progress_width);\n  }\n\n  draw_label() {\n    let x_coord = this.x + this.$bar.getWidth() / 2;\n\n    if (this.task.thumbnail) {\n      x_coord = this.x + 10 + this.image_size + 5;\n    }\n\n    createSVG(\"text\", {\n      x: x_coord,\n      y: this.y + this.height / 2,\n      innerHTML: this.task.name,\n      class: \"bar-label\",\n      append_to: this.bar_group,\n    });\n    // labels get BBox in the next tick\n    requestAnimationFrame(() => this.update_label_position());\n  }\n\n  draw_thumbnail() {\n    let x_offset = 10, y_offset = 2;\n    let defs, clipPath;\n\n    defs = createSVG('defs', {\n      append_to: this.bar_group\n    });\n\n    createSVG('rect', {\n      id: 'rect_' + this.task.id,\n      x: this.x + x_offset,\n      y: this.y + y_offset,\n      width: this.image_size,\n      height: this.image_size,\n      rx: '15',\n      class: 'img_mask',\n      append_to: defs\n    });\n\n    clipPath = createSVG('clipPath', {\n      id: 'clip_' + this.task.id,\n      append_to: defs\n    });\n\n    createSVG('use', {\n      href: '#rect_' + this.task.id,\n      append_to: clipPath\n    });\n\n    createSVG('image', {\n      x: this.x + x_offset,\n      y: this.y + y_offset,\n      width: this.image_size,\n      height: this.image_size,\n      class: 'bar-img',\n      href: this.task.thumbnail,\n      clipPath: 'clip_' + this.task.id,\n      append_to: this.bar_group\n    });\n  }\n\n  draw_resize_handles() {\n    if (this.gantt.options.readonly) return;\n\n    const bar = this.$bar;\n    const handle_width = this.gantt.options.handle_width;\n\n    const gw = bar.getWidth();\n\n    createSVG(\"rect\", {\n      x: bar.getX() + 1,\n      y: bar.getY() + 1,\n      width: handle_width,\n      height: this.height - 2,\n      rx: this.corner_radius,\n      ry: this.corner_radius,\n      class: \"handle left\",\n      append_to: this.handle_group,\n    });\n\n    createSVG(\"rect\", {\n      x: bar.getX() + (gw > handle_width ? (gw - handle_width - 1) : gw),\n      y: bar.getY() + 1,\n      width: handle_width,\n      height: this.height - 2,\n      rx: this.corner_radius,\n      ry: this.corner_radius,\n      class: \"handle right\",\n      append_to: this.handle_group,\n    });\n\n    if (this.gantt.options.drag_bar_progress) {\n      this.$handle_progress = createSVG('polygon', {\n        points: this.get_progress_polygon_points().join(','),\n        class: 'handle progress',\n        append_to: this.handle_group,\n      });\n    }\n  }\n\n  get_progress_polygon_points() {\n    const bar_progress = this.$bar_progress;\n    if (!bar_progress) return [];\n    let icon_width = 10;\n    let icon_height = 15;\n\n    return [\n      bar_progress.getEndX() - icon_width / 2,\n      bar_progress.getY() + bar_progress.getHeight() / 2,\n\n      bar_progress.getEndX(),\n      bar_progress.getY() + bar_progress.getHeight() / 2 - icon_height / 2,\n\n      bar_progress.getEndX() + icon_width / 2,\n      bar_progress.getY() + bar_progress.getHeight() / 2,\n\n      bar_progress.getEndX(),\n      bar_progress.getY() + bar_progress.getHeight() / 2 + icon_height / 2,\n\n      bar_progress.getEndX() - icon_width / 2,\n      bar_progress.getY() + bar_progress.getHeight() / 2,\n    ];\n  }\n\n  bind() {\n    this.setup_click_event();\n  }\n\n  setup_click_event() {\n    $.on(this.group, \"mouseover\", (e) => {\n      this.gantt.trigger_event(\"hover\", [this.task, e.screenX, e.screenY, e])\n    })\n\n    let timeout;\n    $.on(this.group, \"mouseenter\", (e) => timeout = setTimeout(() => {\n      const scrollLeft = this.gantt.$container_main.scrollLeft;\n      this.show_popup(e.offsetX - scrollLeft);\n    }, 600))\n\n    $.on(this.group, \"mouseleave\", () => {\n      clearTimeout(timeout)\n      this.gantt.hide_popup();\n    })\n\n    let clickTimeout;\n    let clickCount = 0;\n    $.on(this.group, 'click', () => {\n      if (this.action_completed) {\n        // just finished a move action, wait for a few seconds\n        return;\n      }\n\n      clickCount += 1;\n      if (clickCount === 1) {\n        clickTimeout = setTimeout(() => {\n            this.gantt.trigger_event('click', [this.task]);\n            clickCount = 0;\n        }, 250);\n      } else {\n        clearTimeout(clickTimeout);\n        clickCount = 0;\n      }\n    });\n\n    $.on(this.group, \"dblclick\", () => {\n      clearTimeout(clickTimeout);\n      clickCount = 0;\n      this.gantt.trigger_event(\"double_click\", [this.task]);\n    });\n  }\n\n  show_popup(x) {\n    if (this.gantt.bar_being_dragged) return;\n\n    const start_date = date_utils.format(\n      this.task._start,\n      \"MM月DD日\",\n      this.gantt.options.language,\n    );\n    const end_date = date_utils.format(\n      date_utils.add(this.task._end, -1, \"second\"),\n      \"MM月DD日\",\n      this.gantt.options.language,\n    );\n    const subtitle = `${start_date} -  ${end_date}<br/>Progress: ${this.task.progress}`;\n\n    this.gantt.show_popup({\n      x,\n      target_element: this.$bar,\n      title: this.task.name,\n      subtitle: subtitle,\n      task: this.task,\n    });\n  }\n\n  update_bar_task(task) {\n    this.action_completed = false;\n    this.task = task;\n    this.prepare_values();\n\n    const label = this.bar_group.querySelector('.bar-label')\n    if(label) label.innerHTML = task.name;\n  }\n\n  update_bar_position({ x = null, width = null }) {\n    const bar = this.$bar;\n    if (x != undefined) {\n      if (this.gantt.options.drag_limit_child) {\n        // get all x values of parent task\n        const xs = this.task.dependencies.map((dep) => {\n          return this.gantt.get_bar(dep).$bar.getX();\n        });\n        // child task must not go before parent\n        const valid_x = xs.reduce((_, curr) => {\n          return x >= curr;\n        }, x);\n\n        if (!valid_x) {\n          width = null;\n          return;\n        }\n      }\n\n      this.update_attr(bar, \"x\", x);\n      if (this.$date_highlight) this.$date_highlight.style.left = x + 'px';\n    }\n    if (width) {\n      this.update_attr(bar, \"width\", width);\n      if (this.$date_highlight) this.$date_highlight.style.width = width + 'px';\n    }\n    this.update_label_position();\n    this.update_handle_position();\n    if (this.gantt.options.show_expected_progress) {\n      this.date_changed();\n      this.compute_duration();\n      this.update_expected_progressbar_position();\n    }\n    this.update_progressbar_position();\n    this.update_arrow_position();\n  }\n\n  update_label_position_on_horizontal_scroll({ x, sx }) {\n    const container = document.querySelector('.gantt-container');\n    const label = this.group.querySelector('.bar-label');\n    const img = this.group.querySelector('.bar-img') || '';\n    const img_mask = this.bar_group.querySelector('.img_mask') || '';\n\n    let barWidthLimit = this.$bar.getX() + this.$bar.getWidth();\n    let newLabelX = label.getX() + x;\n    let newImgX = img && img.getX() + x || 0;\n    let imgWidth = img && img.getBBox().width + 7 || 7;\n    let labelEndX = newLabelX + label.getBBox().width + 7;\n    let viewportCentral = sx + container.clientWidth / 2;\n\n    if (label.classList.contains('big')) return;\n\n    if (labelEndX < barWidthLimit && x > 0 && labelEndX < viewportCentral) {\n      label.setAttribute('x', newLabelX);\n      if (img) {\n        img.setAttribute('x', newImgX);\n        img_mask.setAttribute('x', newImgX);\n      }\n    } else if ((newLabelX - imgWidth) > this.$bar.getX() && x < 0 && labelEndX > viewportCentral) {\n      label.setAttribute('x', newLabelX);\n      if (img) {\n        img.setAttribute('x', newImgX);\n        img_mask.setAttribute('x', newImgX);\n      }\n    }\n  }\n\n  date_changed() {\n    let changed = false;\n    const { new_start_date, new_end_date } = this.compute_start_end_date();\n\n    if (Number(this.task._start) !== Number(new_start_date)) {\n      changed = true;\n      this.task._start = new_start_date;\n    }\n\n    if (Number(this.task._end) !== Number(new_end_date)) {\n      changed = true;\n      this.task._end = new_end_date;\n    }\n\n    if (!changed) return;\n\n    if (this.invalid) {\n      this.invalid = false;\n      this.task.invalid = false;\n      this.$bar.classList.remove('bar-invalid');\n    }\n\n    this.gantt.trigger_event(\"date_change\", [\n      this.task,\n      new_start_date,\n      date_utils.add(new_end_date, -1, \"second\"),\n    ]);\n  }\n\n  progress_changed() {\n    const new_progress = this.compute_progress();\n    this.task.progress = new_progress;\n    this.gantt.trigger_event(\"progress_change\", [this.task, new_progress]);\n  }\n\n  set_action_completed() {\n    this.action_completed = true;\n    setTimeout(() => (this.action_completed = false), 800);\n  }\n\n  compute_start_end_date() {\n    const bar = this.$bar;\n    const x_in_units = bar.getX() / this.gantt.options.column_width;\n    const new_start_date = date_utils.add(\n      this.gantt.gantt_start,\n      x_in_units * this.gantt.options.step,\n      \"hour\",\n    );\n    const width_in_units = bar.getWidth() / this.gantt.options.column_width;\n    const new_end_date = date_utils.add(\n      new_start_date,\n      width_in_units * this.gantt.options.step,\n      \"hour\",\n    );\n\n    return { new_start_date, new_end_date };\n  }\n\n  compute_progress() {\n    const progress =\n      (this.$bar_progress.getWidth() / this.$bar.getWidth()) * 100;\n    return parseInt(progress, 10);\n  }\n\n  compute_expected_progress() {\n    this.expected_progress =\n      date_utils.diff(date_utils.today(), this.task._start, \"hour\") /\n      this.gantt.options.step;\n    // Revision date after today\n    if (this.expected_progress < 0) {\n      this.expected_progress = 0;\n    }\n    this.expected_progress =\n      ((this.expected_progress < this.duration\n        ? this.expected_progress\n        : this.duration) *\n        100) /\n      this.duration;\n  }\n\n  compute_x() {\n    const { step, column_width } = this.gantt.options;\n    const task_start = this.task._start;\n    const gantt_start = this.gantt.gantt_start;\n\n    const diff = date_utils.diff(task_start, gantt_start, \"hour\");\n    let x = (diff / step) * column_width;\n\n    if (this.gantt.view_is(VIEW_MODE.MONTH)) {\n      const diff = date_utils.diff(task_start, gantt_start, \"day\");\n      x = (diff * column_width) / 30;\n    }\n    this.x = x;\n  }\n\n  compute_y() {\n    // this.y =\n    //   this.gantt.options.header_height +\n    //   this.gantt.options.padding / 2 +\n    //   this.task._index * (this.height + this.gantt.options.padding);\n    this.y = this.gantt.options.padding / 2 +\n      this.task._index * (this.height + this.gantt.options.padding);\n  }\n\n  compute_duration() {\n    this.duration =\n      date_utils.diff(this.task._end, this.task._start, \"hour\") /\n      this.gantt.options.step;\n  }\n\n  get_snap_position(dx) {\n    let odx = dx,\n      rem,\n      position;\n\n    if (this.gantt.view_is(VIEW_MODE.WEEK)) {\n      rem = dx % (this.gantt.options.column_width / 7);\n      position =\n        odx -\n        rem +\n        (rem < this.gantt.options.column_width / 14\n          ? 0\n          : this.gantt.options.column_width / 7);\n    } else if (this.gantt.view_is(VIEW_MODE.MONTH)) {\n      rem = dx % (this.gantt.options.column_width / 30);\n      position =\n        odx -\n        rem +\n        (rem < this.gantt.options.column_width / 60\n          ? 0\n          : this.gantt.options.column_width / 30);\n    } else {\n      rem = dx % this.gantt.options.column_width;\n      position =\n        odx -\n        rem +\n        (rem < this.gantt.options.column_width / 2\n          ? 0\n          : this.gantt.options.column_width);\n    }\n    return position;\n  }\n\n  update_attr(element, attr, value) {\n    value = +value;\n    if (!isNaN(value)) {\n      element.setAttribute(attr, value);\n    }\n    return element;\n  }\n\n  update_expected_progressbar_position() {\n    if (!this.$expected_bar_progress) return;\n\n    this.$expected_bar_progress.setAttribute(\"x\", this.$bar.getX());\n    this.compute_expected_progress();\n    this.$expected_bar_progress.setAttribute(\n      \"width\",\n      this.gantt.options.column_width *\n      this.duration *\n      (this.expected_progress / 100) || 0,\n    );\n  }\n\n  update_progressbar_position() {\n    if (this.gantt.options.readonly) return;\n    if (!this.$bar_progress) return;\n\n    this.$bar_progress.setAttribute(\"x\", this.$bar.getX());\n    this.$bar_progress.setAttribute(\n      \"width\",\n      this.$bar.getWidth() * (this.task.progress / 100),\n    );\n\n    const $handle = this.$handle_progress;\n    if ($handle) {\n      $handle.setAttribute('points', this.get_progress_polygon_points());\n    }\n  }\n\n  update_label_position() {\n    const img_mask = this.bar_group.querySelector('.img_mask') || '';\n    const bar = this.$bar,\n      label = this.group.querySelector(\".bar-label\"),\n      img = this.group.querySelector('.bar-img');\n\n\n    let padding = 10;\n    let x_offset_label_img = this.image_size + 5;\n    const labelWidth = label.getBBox().width\n    const barWidth = bar.getWidth()\n    if (labelWidth > barWidth) {\n      label.classList.add(\"big\");\n      if (img) {\n        img.setAttribute('x', bar.getX() + barWidth + padding);\n        img_mask.setAttribute('x', bar.getX() + barWidth + padding);\n        label.setAttribute('x', bar.getX() + barWidth + x_offset_label_img);\n      } else {\n        label.setAttribute('x', bar.getX() + barWidth + padding);\n      }\n    } else {\n      label.classList.remove(\"big\");\n      if (img) {\n        img.setAttribute('x', bar.getX() + padding);\n        img_mask.setAttribute('x', bar.getX() + padding);\n        label.setAttribute('x', bar.getX() + padding + x_offset_label_img);\n      } else {\n        label.setAttribute('x', bar.getX() + barWidth / 2 - labelWidth / 2);\n      }\n    }\n  }\n\n  update_handle_position() {\n    if (this.gantt.options.readonly) return;\n    const bar = this.$bar;\n    const handle_width = this.gantt.options.handle_width;\n\n    this.handle_group\n      .querySelector(\".handle.left\")\n      .setAttribute(\"x\", bar.getX() + 1);\n    this.handle_group\n      .querySelector(\".handle.right\")\n      .setAttribute(\"x\", bar.getEndX() - handle_width - 1);\n  }\n\n  update_arrow_position() {\n    this.arrows = this.arrows || [];\n    for (let arrow of this.arrows) {\n      arrow.update();\n    }\n  }\n}\n\nfunction isFunction(functionToCheck) {\n  let getType = {};\n  return (\n    functionToCheck &&\n    getType.toString.call(functionToCheck) === \"[object Function]\"\n  );\n}\n","import { createSVG } from \"./svg_utils\";\n\nexport default class Arrow {\n  constructor(gantt, from_task, to_task) {\n    this.gantt = gantt;\n    this.from_task = from_task;\n    this.to_task = to_task;\n\n    this.calculate_path();\n    this.draw();\n    this.drawInner();\n  }\n\n  calculate_path() {\n    if (this.from_task.empty || this.to_task.empty) return;\n\n    const rowHeight = this.gantt.options.bar_height + this.gantt.options.padding;\n    const taskHeight = this.gantt.options.bar_height;\n    const arrowCurve = this.gantt.options.arrow_curve;\n    // const arrowIndent = this.gantt.options.column_width / 2;\n    const arrowIndent = 19; // fixed indent\n    const taskFrom = this.from_task;\n    const taskTo = this.to_task;\n\n    const taskFromX2 = taskFrom.$bar.getEndX();\n    const taskFromY1 = taskFrom.$bar.getY();\n    const taskToX1 = taskTo.$bar.getX();\n    const taskToY1 = taskTo.$bar.getY();\n\n    const indexCompare = taskFrom.task._index > taskTo.task._index ? -1 : 1;\n    const taskToEndPosition = taskToY1 + taskHeight / 2;\n    const taskFromEndPosition = taskFromX2 + arrowIndent * 2;\n\n    const taskFromHorizontalOffsetValue =\n        taskFromEndPosition < taskToX1 ? '' : `H ${taskToX1 - arrowIndent}`;\n    const taskToHorizontalOffsetValue =\n        taskFromEndPosition > taskToX1\n            ? arrowIndent\n            : taskToX1 - taskFromX2 - arrowIndent;\n\n    const path = `M ${taskFromX2} ${taskFromY1 + taskHeight / 2}\n    h ${arrowIndent}\n    v ${(indexCompare * rowHeight) / 2}\n    ${taskFromHorizontalOffsetValue}\n    V ${taskToEndPosition}\n    h ${taskToHorizontalOffsetValue}`;\n\n    const trianglePoints = `${taskToX1},${taskToEndPosition}\n    ${taskToX1 - arrowCurve},${taskToEndPosition - arrowCurve}\n    ${taskToX1 - arrowCurve},${taskToEndPosition + arrowCurve}`;\n\n    this.path = path;\n\n    this.points = trianglePoints;\n  }\n\n  draw() {\n    this.element = createSVG(\"g\", {\n      \"data-from\": this.from_task.task.id,\n      \"data-to\": this.to_task.task.id,\n    });\n  }\n\n  drawInner() {\n    if (this.from_task.empty || this.to_task.empty) return;\n\n    this.svgPath = createSVG(\"path\", {\n      d: this.path,\n      fill: \"none\",\n      append_to: this.element\n    });\n    this.svgPolygon = createSVG(\"polygon\", {\n      points: this.points,\n      append_to: this.element,\n    });\n  }\n\n  update() {\n    if (this.from_task.empty || this.to_task.empty) return;\n\n    this.calculate_path();\n    this.svgPath.setAttribute(\"d\", this.path);\n    this.svgPolygon.setAttribute(\"points\", this.points);\n  }\n}\n","export default class Popup {\n  constructor(gantt, parent) {\n    this.gantt = gantt;\n    this.parent = parent;\n    this.custom_html = gantt.options.popup;\n    this.make();\n  }\n\n  make() {\n    this.parent.innerHTML = `\n        <div class=\"title\"></div>\n        <div class=\"subtitle\"></div>\n        <div class=\"pointer\"></div>\n    `;\n\n    this.hide();\n\n    this.title = this.parent.querySelector(\".title\");\n    this.subtitle = this.parent.querySelector(\".subtitle\");\n    this.pointer = this.parent.querySelector(\".pointer\");\n  }\n\n  show(options) {\n    if (!options.target_element) {\n      throw new Error(\"target_element is required to show popup\");\n    }\n    const target_element = options.target_element;\n\n    if (typeof this.custom_html === 'function') {\n      let html = this.custom_html(options.task);\n      html += '<div class=\"pointer\"></div>';\n      this.parent.innerHTML = html;\n      this.pointer = this.parent.querySelector(\".pointer\");\n    } else {\n      // set data\n      this.title.innerHTML = options.title;\n      this.subtitle.innerHTML = options.subtitle;\n    }\n\n    // set position\n    let position_meta;\n    if (target_element instanceof HTMLElement) {\n      position_meta = target_element.getBoundingClientRect();\n    } else if (target_element instanceof SVGElement) {\n      position_meta = target_element.getBBox();\n    }\n    const parentWidth = this.parent.clientWidth;\n    const parentHeight = this.parent.clientHeight;\n    const ganttOptions = this.gantt.options;\n    const ganttWidth = this.gantt.$container.clientWidth;\n    const ganttHeight = this.gantt.$container.clientHeight;\n\n    const dy = this.gantt.$container_main.scrollTop;\n\n    // get position\n    let pos_x = options.x - parentWidth / 2;\n    let pos_y =\n        position_meta.y +\n        position_meta.height +\n        ganttOptions.header_height -\n        dy +\n        10;\n\n    if (pos_y > ganttHeight - parentHeight) {\n      pos_y = position_meta.y - parentHeight - 10 - dy + ganttOptions.header_height;\n    }\n\n    if (pos_x > ganttWidth - parentWidth) {\n      const diff = pos_x - (ganttWidth - parentWidth - 5);\n      pos_x -= diff;\n    }\n\n    if (pos_x < 0) {\n      pos_x = 2\n    }\n\n    this.parent.style.left = pos_x + \"px\";\n    this.parent.style.top = pos_y + \"px\";\n\n    this.pointer.style.left = parentWidth / 2 + 'px';\n    this.pointer.style.top = \"-15px\";\n\n    // show\n    this.parent.style.display = \"block\";\n  }\n\n  hide() {\n    this.parent.style.display = \"none\";\n    this.parent.style.left = 0;\n  }\n}\n","export default class Backdrop {\n  constructor(parent) {\n    this.parent = parent;\n    this.make();\n  }\n\n  make() {\n    this.parent.innerHTML = `\n      <div class=\"gantt-drag-mask\">\n        <div class=\"date-range\"></div>\n      </div>\n    `;\n\n    // this.hide();\n\n    this.drag_mask = this.parent.querySelector('.gantt-drag-mask');\n    this.date_range = this.parent.querySelector('.date-range');\n  }\n\n  showAt({ x, width, range }) {\n    if (range && range.length) {\n      const htmlHold = `<span>${range[0]}</span><span>${range[1]}</span>`;\n      this.date_range.innerHTML = htmlHold;\n    }\n\n    this.drag_mask.style.left = x + 'px';\n    this.drag_mask.style.width = width + 'px';\n\n    this.show();\n  }\n\n  show() {\n    this.parent.style.display = 'block';\n    this.drag_mask.style.display = 'block';\n  }\n\n  hide() {\n    this.parent.style.display = \"none\";\n    this.drag_mask.style.display = \"none\";\n  }\n}","import date_utils from \"./date_utils\";\nimport { $, createSVG } from \"./svg_utils\";\nimport { getLang, VIEW_MODE } from \"./lang_utils\";\nimport Bar from \"./bar\";\nimport Arrow from \"./arrow\";\nimport Popup from \"./popup\";\nimport Backdrop from './backdrop';\n\nimport \"./gantt.scss\";\n\nconst VIEW_MODE_PADDING = {\n  HOUR: [\"7d\", \"7d\"],\n  QUARTER_DAY: [\"7d\", \"7d\"],\n  HALF_DAY: [\"7d\", \"7d\"],\n  DAY: [\"1m\", \"1m\"],\n  WEEK: [\"1m\", \"1m\"],\n  MONTH: [\"1y\", \"1y\"],\n  QUARTER_YEAR: [\"1y\", \"1y\"],\n  YEAR: [\"2y\", \"2y\"],\n};\n\nconst TICK_LINE = {\n  BOTH: \"both\",\n  HORIZONTAL: \"horizontal\",\n  VERTICAL: \"vertical\",\n}\n\nconst DEFAULT_OPTIONS = {\n  header_height: 65,\n  // column_width: 30,\n  // step: 24,\n  bar_height: 30,\n  bar_corner_radius: 3,\n  arrow_curve: 5,\n  handle_width: 8,\n  padding: 18,\n  view_modes: [...Object.values(VIEW_MODE)],\n  view_mode: VIEW_MODE.DAY,\n  popup_trigger: \"click\",\n  show_expected_progress: false,\n  dependencies: \"arrow\",\n  drag_ignore_hours: true,\n  drag_bar_progress: true,\n  drag_sync_child: false,\n  drag_limit_child: false,\n  popup: null,\n  language: \"en\",\n  readonly: false,\n  highlight_weekend: true,\n  scroll_to: 'start',\n  lines: TICK_LINE.BOTH,\n  auto_move_label: true,\n  today_button: true,\n  view_mode_select: false,\n};\n\nexport default class Gantt {\n  constructor(wrapper, tasks, options) {\n    this.setup_wrapper(wrapper);\n    this.setup_options(options);\n    this.setup_tasks(tasks);\n    // initialize with default view mode\n    this.change_view_mode();\n    this.bind_events();\n  }\n\n  setup_wrapper(element) {\n      let svg_element, wrapper_element;\n\n      // CSS Selector is passed\n      if (typeof element === 'string') {\n          element = document.querySelector(element);\n      }\n\n      // get the SVGElement\n      if (element instanceof HTMLElement) {\n          wrapper_element = element;\n          svg_element = element.querySelector('svg');\n      } else if (element instanceof SVGElement) {\n          svg_element = element;\n      } else {\n          throw new TypeError(\n              'Frappé Gantt only supports usage of a string CSS selector,' +\n                  \" HTML DOM element or SVG DOM element for the 'element' parameter\",\n          );\n      }\n\n      // svg element\n      if (!svg_element) {\n          // create it\n          this.$svg = createSVG('svg', {\n              append_to: wrapper_element,\n              class: 'gantt',\n          });\n      } else {\n          this.$svg = svg_element;\n          this.$svg.classList.add('gantt');\n      }\n\n      // container element\n      this.$container = document.createElement('div');\n      this.$container.classList.add('gantt-container');\n\n      // 1.header horizontal-scroll\n      this.$container_header = document.createElement('div');\n      this.$container_header.classList.add('gantt-container_header');\n      this.$container.appendChild(this.$container_header);\n\n      // 2.main vertical-scroll\n      this.$container_main = document.createElement('div');\n      this.$container_main.classList.add('gantt-container_main');\n      this.$container.appendChild(this.$container_main);\n\n      // 3. svg appendTo wrapper\n      const parent_element = this.$svg.parentElement;\n      parent_element.appendChild(this.$container);\n      this.$container_main.appendChild(this.$svg);\n\n      // 4. toobar wrapper\n      this.$container_toolbar = document.createElement('div');\n      this.$container_toolbar.classList.add('gantt-container_toolbar');\n      this.$container.appendChild(this.$container_toolbar);\n\n      // 5.popup wrapper\n      this.$popup_wrapper = document.createElement('div');\n      this.$popup_wrapper.classList.add('gantt-popup-wrapper');\n      this.$container.appendChild(this.$popup_wrapper);\n\n      // 6.backdrop wrapper\n      this.$drag_backdrop = document.createElement('div');\n      this.$drag_backdrop.classList.add('gantt-drag-backdrop');\n      this.$container.appendChild(this.$drag_backdrop);\n  }\n\n  setup_options(options) {\n    this.options = { ...DEFAULT_OPTIONS, ...options }\n    if (!options.view_mode_padding) options.view_mode_padding = {}\n    for (let [key, value] of Object.entries(options.view_mode_padding)) {\n      if (typeof value === \"string\") {\n        // Configure for single value given\n        options.view_mode_padding[key] = [value, value];\n      }\n    }\n\n    this.options.view_mode_padding = {\n      ...VIEW_MODE_PADDING,\n      ...options.view_mode_padding,\n    };\n  }\n\n  setup_tasks(tasks) {\n    // prepare tasks\n    this.tasks = tasks.map((task, i) => {\n      return this.format_task(task, i);\n    });\n\n    this.setup_dependencies();\n  }\n\n  setup_dependencies() {\n    this.dependency_map = {};\n    for (let t of this.tasks) {\n      this.format_dependency(t);\n    }\n  }\n\n  format_task(task, i) {\n    // reset symbol\n    task.empty = false;\n    task.invalid = false;\n    task.progress = task.progress || 0;\n\n    // convert to Date objects\n    task._start = date_utils.parse(task.start);\n    if (task.end === undefined && task.duration !== undefined) {\n      task.end = task._start;\n      let durations = task.duration.split(\" \");\n\n      durations.forEach((tmpDuration) => {\n        let { duration, scale } = date_utils.parse_duration(tmpDuration);\n        task.end = date_utils.add(task.end, duration, scale);\n      });\n    }\n    task._end = date_utils.parse(task.end);\n    let diff = date_utils.diff(task._end, task._start, \"year\");\n    if (diff < 0) {\n      throw Error(\"start of task can't be after end of task: in task #, \" + (i + 1))\n    }\n    // make task invalid if duration too large\n    if (date_utils.diff(task._end, task._start, \"year\") > 10) {\n      task.end = null;\n    }\n\n    // cache index\n    task._index = i;\n\n    // invalid flag\n    if (!task.start) {\n      task.invalid = 'start';\n    }\n    if (!task.end) {\n      task.invalid = 'end';\n    }\n    if (!task.start && !task.end) {\n      task._start = null;\n      task._end = null;\n      task.empty = true;\n      task.invalid = true;\n\n      // const today = date_utils.today();\n      // task._start = today;\n      // task._end = date_utils.add(today, 2, \"day\");\n    }\n\n    // mock daterange\n    if (task.start && !task.end) {\n      task._end = date_utils.add(task._start, 2, \"day\");\n    }\n    if (!task.start && task.end) {\n      task._start = date_utils.add(task._end, -2, \"day\");\n    }\n\n    // if hours is not set, assume the last day is full day\n    // e.g: 2018-09-09 becomes 2018-09-09 23:59:59\n    if (task._end) {\n      const task_end_values = date_utils.get_date_values(task._end);\n      if (task_end_values.slice(3).every((d) => d === 0)) {\n        task._end = date_utils.add(task._end, 24, \"hour\");\n      }\n    }\n\n    // dependencies\n    if (typeof task.dependencies === \"string\" || !task.dependencies) {\n      let deps = [];\n      if (task.dependencies) {\n        deps = task.dependencies\n          .split(\",\")\n          .map((d) => d.trim().replaceAll(' ', '_'))\n          .filter((d) => d);\n      }\n      task.dependencies = deps;\n    }\n\n    // uids\n    if (!task.id) {\n      task.id = generate_id(task);\n    } else if (typeof task.id === 'string') {\n      task.id = task.id.replaceAll(' ', '_')\n    } else {\n      task.id = `${task.id}`\n    }\n    return task;\n  }\n\n  format_dependency(task) {\n    for (let d of task.dependencies) {\n      this.dependency_map[d] = this.dependency_map[d] || [];\n      this.dependency_map[d].push(task.id);\n    }\n  }\n\n  refresh(tasks) {\n    this.setup_tasks(tasks);\n    this.change_view_mode();\n  }\n\n  update(task) {\n    const original = this.get_task(task.id);\n    // new object\n    const current = Object.keys(original).reduce((result, key) => {\n      const val = task[key];\n      result[key] = val === undefined ? original[key] : val;\n      return result;\n    }, {});\n\n    const update_task = this.format_task(current, original._index);\n\n    // empty daterange\n    if (original.empty || update_task.empty) {\n      this.replace(update_task, original);\n      return\n    }\n\n    // invalid daterange\n    if (original.invalid !== update_task.invalid) {\n      this.replace(update_task, original);\n      return\n    }\n\n    // update task\n    const bar = this.get_bar(update_task.id);\n    bar.update_bar_task(update_task);\n    this.tasks.splice(original._index, 1, update_task);\n\n    if (Number(original._start) !== Number(update_task._start)) {\n      // move-left\n      const start_date = date_utils.parse(update_task._start);\n      const dx = this.get_snap_x(original._start, start_date);\n      bar.update_bar_position({\n          x: bar.$bar.getX() - dx,\n          width: bar.$bar.getWidth() + dx,\n      });\n    }\n\n    if (Number(original._end) !== Number(update_task._end)) {\n      // move-right\n      const end_date = date_utils.parse(update_task._end);\n      const dx = this.get_snap_x(original._end, end_date);\n      bar.update_bar_position({\n        width: bar.$bar.getWidth() - dx,\n      });\n    }\n  }\n\n  // TODO 支持多条\n  remove(task) {\n    let index = null;\n    if (typeof task === 'object') {\n      const tid = `${task.id}`.replaceAll(' ', '_');\n      index = this.tasks.findIndex((item) => item.id === tid);\n    } else {\n      index = task;\n    }\n    if (index === -1 || index >= this.tasks.length) return;\n    const row_height = this.options.bar_height + this.options.padding;\n\n    // remove tasks bars\n    const remove_bar = this.bars[index];\n    this.layers.bar.removeChild(remove_bar.group);\n    this.tasks.splice(index, 1);\n    this.bars.splice(index, 1);\n\n    // resort task._index\n    let i = index;\n    while (i < this.tasks.length) {\n      this.tasks[i]._index = i;\n      this.bars[i].update_bar_vertical({ offset: -row_height });\n      i+=1;\n    }\n\n    // remove grid-row row-line\n    const rows = this.layers.grid.querySelector('.rows_layer');\n    rows.lastChild && rows.removeChild(rows.lastChild);\n    const lines = this.layers.grid.querySelector('.lines_layer');\n    lines.lastChild && lines.removeChild(lines.lastChild);\n\n    // Empty Arrow\n    this.layers.arrow.innerHTML = \"\";\n    this.make_arrows();\n    this.map_arrows_on_bars();\n\n    // update grid_height\n    const grid_height = this.tasks.length * row_height;\n    this.$svg.setAttribute(\"height\", grid_height);\n    this.$svg.querySelector(\".grid-background\").setAttribute(\"height\", grid_height);\n  }\n\n  // TODO 支持多条\n  insert(task, index) {\n    let target;\n    if (index === undefined) {\n      target = this.tasks.length; // default end\n    } else if (typeof index === 'object') {\n      target = this.tasks.findIndex(task => task.id === index.id);\n      target += 1; // target task\n    } else {\n      target = index; // target index\n    }\n    const insert_task = this.format_task(task, target)\n    // resort task._index\n    let i = target;\n    while (i < this.tasks.length) {\n        this.tasks[i]._index = i + 1;\n        i += 1;\n    }\n    // insert task target\n    this.tasks.splice(target, 0, insert_task);\n    this.setup_dependencies();\n\n    // calculate daterange\n    let limit_start = null, limit_end = null;\n    if (insert_task._start && insert_task._start < this.gantt_start) {\n      limit_start = insert_task._start;\n    }\n    if (insert_task._end && insert_task._end > this.gantt_end) {\n      limit_end = insert_task._end;\n    }\n    // TODO out of limit date\n    if (limit_start || limit_end) {\n      this.redraw_date({ start: limit_start, end: limit_end });\n    }\n\n    // update bars y\n    const row_height = this.options.bar_height + this.options.padding;\n    i = target;\n    while (i < this.bars.length) {\n      this.bars[i].update_bar_vertical({ offset: row_height });\n      i+=1;\n    }\n\n    // insert bar\n    const insert_bar = new Bar(this, insert_task);\n    const target_bar = this.bars[target + 1];\n    this.layers.bar.insertBefore(insert_bar.group, target_bar ? target_bar.group : null);\n    this.bars.splice(target, 0, insert_bar);\n\n    // append grid-row\n    const row_width = this.dates.length * this.options.column_width;\n    const insert_y = (this.tasks.length - 1) * row_height;\n    const $grid_el = this.layers.grid;\n    createSVG('rect', {\n      x: 0,\n      y: insert_y,\n      width: row_width,\n      height: row_height,\n      class: 'grid-row',\n      append_to: $grid_el.querySelector('.rows_layer'),\n    });\n    // append row-line\n    if ($grid_el.querySelector('.lines_layer')) {\n      if (this.options.lines !== TICK_LINE.VERTICAL) {\n        createSVG(\"line\", {\n          x1: 0,\n          y1: insert_y,\n          x2: row_width,\n          y2: insert_y,\n          class: \"row-line\",\n          append_to: $grid_el.querySelector('.lines_layer'),\n        });\n      }\n    }\n\n    // Empty Arrow\n    this.layers.arrow.innerHTML = \"\";\n    this.make_arrows();\n    this.map_arrows_on_bars();\n\n    // update grid_height\n    const grid_height = this.tasks.length * row_height;\n    this.$svg.setAttribute(\"height\", grid_height);\n    this.$svg.querySelector(\".grid-background\").setAttribute(\"height\", grid_height);\n  }\n\n  replace(update_task, prev_task) {\n    // Bar\n    const update_bar = new Bar(this, update_task);\n\n    // remove old_bar from bars and bar-layers\n    const old_bar = this.bars[prev_task._index];\n    this.layers.bar.removeChild(old_bar.group);\n    this.bars.splice(prev_task._index, 1, update_bar);\n\n    // replace update_bar and update tasks\n    const target_postion = this.bars[prev_task._index + 1];\n    this.layers.bar.insertBefore(update_bar.group, target_postion ? target_postion.group : null);\n    this.tasks.splice(prev_task._index, 1, update_task);\n\n    // Arrow\n    // before remove all childs, after draws arrow-layers\n    this.layers.arrow.innerHTML = \"\";\n    this.make_arrows();\n    this.map_arrows_on_bars();\n  }\n\n  change_view_mode(mode = this.options.view_mode) {\n    const record_start = performance.now();\n    this.update_view_scale(mode);\n    this.setup_dates();\n    this.render();\n    const record_end = performance.now();\n    const record_time = record_end - record_start;\n    // fire viewmode_change event delay\n    this.trigger_event('view_change', [mode, record_time]);\n  }\n\n  update_view_scale(view_mode) {\n    this.options.view_mode = view_mode;\n    if (view_mode === VIEW_MODE.HOUR) {\n      this.options.step = 24 / 24;\n      this.options.column_width = 38;\n    } else if (view_mode === VIEW_MODE.QUARTER_DAY) {\n      this.options.step = 24 / 4;\n      this.options.column_width = 38;\n    } else if (view_mode === VIEW_MODE.HALF_DAY) {\n      this.options.step = 24 / 2;\n      this.options.column_width = 38;\n    } else if (view_mode === VIEW_MODE.DAY) {\n      this.options.step = 24;\n      this.options.column_width = 38;\n    } else if (view_mode === VIEW_MODE.WEEK) {\n      this.options.step = 24 * 7;\n      this.options.column_width = 140;\n    } else if (view_mode === VIEW_MODE.MONTH) {\n      this.options.step = 24 * 30;\n      this.options.column_width = 280;\n    } else if (view_mode === VIEW_MODE.QUARTER_YEAR) {\n      this.options.step = 24 * 365 / 4;\n      this.options.column_width = 400;\n    } else if (view_mode === VIEW_MODE.YEAR) {\n      this.options.step = 24 * 365;\n      this.options.column_width = 480;\n    }\n  }\n\n  setup_dates() {\n    this.setup_gantt_dates();\n    this.setup_date_values();\n  }\n\n  setup_gantt_dates() {\n    this.gantt_start = this.gantt_end = null;\n\n    for (let task of this.tasks) {\n      // set global start and end date\n      if (!this.gantt_start || (task._start && task._start < this.gantt_start)) {\n          this.gantt_start = task._start;\n      }\n      if (!this.gantt_end || (task._end && task._end > this.gantt_end)) {\n        this.gantt_end = task._end;\n      }\n    }\n    let gantt_start, gantt_end;\n    if (!this.gantt_start) gantt_start = new Date();\n    else gantt_start = date_utils.start_of(this.gantt_start, \"day\");\n    if (!this.gantt_end) gantt_end = new Date();\n    else gantt_end = date_utils.start_of(this.gantt_end, \"day\");\n\n    // ensure today in daterange\n    const today = date_utils.today();\n    if (gantt_start > today) gantt_start = today;\n    if (gantt_end < today) gantt_end = today;\n\n    // get date start and end\n    this.get_gantt_dates(gantt_start, gantt_end);\n  }\n\n  get_gantt_dates(start, end) {\n    // add date padding on both sides\n    let viewKey;\n    for (let [key, value] of Object.entries(VIEW_MODE)) {\n      if (value === this.options.view_mode) {\n        viewKey = key;\n      }\n    }\n    const [padding_start, padding_end] = this.options.view_mode_padding[\n      viewKey\n    ].map(date_utils.parse_duration);\n\n    const gantt_start = date_utils.add(\n      start,\n      -padding_start.duration,\n      padding_start.scale,\n    );\n\n    let format_string;\n    if (this.view_is(VIEW_MODE.YEAR)) {\n        format_string = 'YYYY';\n    } else if (this.view_is([VIEW_MODE.MONTH, VIEW_MODE.QUARTER_YEAR])) {\n        format_string = 'YYYY-MM';\n    } else if (this.view_is(VIEW_MODE.DAY)) {\n        format_string = 'YYYY-MM-DD';\n    } else {\n        format_string = 'YYYY-MM-DD HH';\n    }\n    this.gantt_start = date_utils.parse(\n        date_utils.format(gantt_start, format_string),\n    );\n    this.gantt_start.setHours(0, 0, 0, 0);\n    this.gantt_end = date_utils.add(\n        end,\n        padding_end.duration,\n        padding_end.scale,\n    );\n    this.gantt_end.setHours(0, 0, 0, 0);\n\n    // quarter_year start January end December\n    if (this.view_is(VIEW_MODE.QUARTER_YEAR)) {\n      this.gantt_start = new Date(this.gantt_start.setMonth(0, 1));\n      this.gantt_end = new Date(this.gantt_end.setMonth(9, 1));\n    }\n  }\n\n  setup_date_values() {\n    this.dates = [];\n    let cur_date = null;\n\n    while (cur_date === null || cur_date < this.gantt_end) {\n      if (!cur_date) {\n        cur_date = date_utils.clone(this.gantt_start);\n      } else {\n        if (this.view_is(VIEW_MODE.YEAR)) {\n          cur_date = date_utils.add(cur_date, 1, \"year\");\n        } else if (this.view_is(VIEW_MODE.MONTH)) {\n          cur_date = date_utils.add(cur_date, 1, \"month\");\n        } else if (this.view_is(VIEW_MODE.QUARTER_YEAR)) {\n          cur_date = date_utils.add(cur_date, 3, \"month\");\n        } else {\n          cur_date = date_utils.add(cur_date, this.options.step, \"hour\");\n        }\n      }\n      this.dates.push(cur_date);\n    }\n  }\n\n  // TODO\n  redraw_date({ start, end }) {\n    console.log('ddd ==> redraw_date', start, end);\n    // if (start) {\n    //   this.redraw_left(start);\n    // }\n\n    // this.redraw_layout();\n  }\n\n  redraw_left(start) {\n    // 获取左侧日期\n    const start_date = new Date(start.setHours(0, 0, 0, 0));\n    const dates = this.get_redraw_dates(start_date);\n    // 插入左侧日期\n    this.get_dates_to_draw(dates, null).forEach((date, i) => {\n      this.draw_date(date, i);\n    });\n    // 重赋值\n    this.dates = dates.concat(this.dates);\n    this.gantt_prev_start = this.gantt_start;\n    this.gantt_start = start_date;\n    // 插入周末\n    if (!this.options.highlight_weekend) return;\n    if (!this.view_is([VIEW_MODE.DAY, VIEW_MODE.HALF_DAY])) return;\n    const weekends_fragment = this.getHighlightWeekends_fragment(\n        start_date,\n        this.gantt_prev_start,\n    );\n    this.layers.grid.appendChild(weekends_fragment);\n    // 插入线条\n    this.redraw_col_tick(dates);\n  }\n\n  get_redraw_dates(start_date) {\n    const start_arrs = [];\n\n    let start_temp = start_date;\n    while (start_temp < this.gantt_start) {\n      start_arrs.push(start_temp);\n      if (this.view_is(VIEW_MODE.YEAR)) {\n        start_temp = date_utils.add(start_temp, 1, 'year');\n      } else if (this.view_is(VIEW_MODE.MONTH)) {\n        start_temp = date_utils.add(start_temp, 1, 'month');\n      } else if (this.view_is(VIEW_MODE.QUARTER_YEAR)) {\n        start_temp = date_utils.add(start_temp, 3, 'month');\n      } else {\n        start_temp = date_utils.add(start_temp, this.options.step, 'hour');\n      }\n    }\n\n    return start_arrs;\n  }\n\n  redraw_right(end) {\n    const end_date = new Date(date_utils.add(end, 1, 'day').setHours(0, 0, 0, 0));\n    const end_arrs = [];\n\n    let end_temp = end_date;\n    while (this.gantt_end < end_temp) {\n      end_arrs.unshift(end_temp);\n\n      if (this.view_is(VIEW_MODE.YEAR)) {\n        end_temp = date_utils.add(end_temp, -1, 'year');\n      } else if (this.view_is(VIEW_MODE.MONTH)) {\n        end_temp = date_utils.add(end_temp, -1, 'month');\n      } else if (this.view_is(VIEW_MODE.QUARTER_YEAR)) {\n        end_temp = date_utils.add(end_temp, -3, 'month');\n      } else {\n        end_temp = date_utils.add(end_temp, -this.options.step, 'hour');\n      }\n    }\n    this.new_limit_end = end_arrs;\n    if (end_arrs.length > 0) {\n      this.get_dates_to_draw(end_arrs, this.dates[this.dates.length - 1]).forEach((date, i) => {\n        this.draw_date(date, i);\n      });\n      this.dates = this.dates.concat(end_arrs);\n      this.gantt_end = end_date;\n    }\n  }\n\n  redraw_layout() {\n    const grid_width = this.dates.length * this.options.column_width;\n    // background\n    $.attr(this.$svg, { width: grid_width });\n    $.attr(this.$svg.querySelector(\".grid-background\"), { width: grid_width });\n    // rows\n    const rows = this.layers.grid.querySelectorAll('.grid-row');\n    rows.forEach(row => $.attr(row, { width: grid_width }));\n    // header\n    this.$header.style.width = grid_width + \"px\";\n  }\n\n  bind_events() {\n    this.bind_grid_scroll();\n\n    if (this.options.readonly) return\n    this.bind_grid_click();\n    this.bind_bar_create();\n    this.bind_bar_events();\n  }\n\n  render() {\n    this.clear();\n    this.setup_layers();\n    this.make_grid();\n    this.make_dates();\n    this.make_bars();\n    this.make_grid_extras();\n    this.make_arrows();\n    this.map_arrows_on_bars();\n    this.set_scroll_position(this.options.scroll_to);\n  }\n\n  setup_layers() {\n    this.layers = {};\n    const layers = [\"grid\", \"today\", \"arrow\", \"progress\", \"bar\"];\n    // make group layers\n    for (let layer of layers) {\n      this.layers[layer] = createSVG(\"g\", {\n        class: layer,\n        append_to: this.$svg,\n      });\n    }\n  }\n\n  make_grid() {\n    this.make_grid_background();\n    this.make_grid_rows();\n    this.make_grid_header();\n    this.make_grid_toolbar();\n  }\n\n  make_grid_extras() {\n    this.make_grid_highlights();\n    this.make_grid_ticks();\n  }\n\n  make_grid_background() {\n    const grid_width = this.dates.length * this.options.column_width;\n    const grid_height = (this.options.bar_height + this.options.padding) * this.tasks.length;\n\n    createSVG(\"rect\", {\n      x: 0,\n      y: 0,\n      width: grid_width,\n      height: grid_height,\n      class: \"grid-background\",\n      append_to: this.$svg,\n    });\n\n    const scroll_height = this.options.height ? this.options.height + 'px' : `calc(100% - ${this.options.header_height + 1}px`;\n    this.$container_main.style.height = scroll_height;\n    this.$container_main.style.width = '100%';\n    this.$container_main.style.overflow = 'auto';\n    this.$container_main.style.position = 'relative';\n    this.$container.style.overflow = 'hidden';\n\n    $.attr(this.$svg, {\n      height: grid_height,\n      width: grid_width,\n    });\n  }\n\n  make_grid_rows() {\n    const row_width = this.dates.length * this.options.column_width;\n    const row_height = this.options.bar_height + this.options.padding;\n\n    let row_y = 0;\n    const fragment = document.createDocumentFragment();\n    for (let _ of this.tasks) {\n      createSVG(\"rect\", {\n        x: 0,\n        y: row_y,\n        width: row_width,\n        height: row_height,\n        class: \"grid-row\",\n        append_to: fragment,\n      });\n      if (\n          this.options.lines === TICK_LINE.BOTH ||\n          this.options.lines === TICK_LINE.HORIZONTAL\n      ) {\n      }\n\n      row_y += this.options.bar_height + this.options.padding;\n    }\n\n    const $rows_layer = createSVG(\"g\", { class: \"rows_layer\",append_to: this.layers.grid });\n    $rows_layer.appendChild(fragment);\n  }\n\n  make_grid_header() {\n    let $header = document.createElement(\"div\");\n    $header.style.height = this.options.header_height + \"px\";\n    $header.style.width = this.dates.length * this.options.column_width + \"px\";\n    $header.classList.add('grid-header')\n    this.$header = $header\n\n    let $upper_header = document.createElement(\"div\");\n    $upper_header.classList.add('upper-header')\n    this.$upper_header = $upper_header\n    this.$header.appendChild($upper_header)\n\n    let $lower_header = document.createElement(\"div\");\n    $lower_header.classList.add('lower-header')\n    this.$lower_header = $lower_header\n    this.$header.appendChild($lower_header)\n\n    let $line_header = document.createElement('div');\n    $line_header.classList.add('line-header');\n    this.$line_header = $line_header;\n    this.$header.appendChild($line_header);\n\n    this.$container_header.appendChild(this.$header);\n  }\n\n  make_grid_toolbar() {\n    if (!this.options.view_mode_select && !this.options.today_button) return;\n\n    const $side_header = this.$container_toolbar;\n    const lang = getLang(this.options.language);\n\n    // Create view mode change select\n    if (this.options.view_mode_select) {\n\n      const $select = document.createElement(\"select\");\n      $select.classList.add('viewmode-select')\n\n      const modes = this.options.view_modes;\n      const modes_values = Object.values(VIEW_MODE);\n      const modes_keys = Object.keys(VIEW_MODE);\n      for (const key in modes) {\n        const $option = document.createElement(\"option\");\n        const val = modes[key];\n        const index = modes_values.findIndex(vm => vm === val);\n        const label = modes_keys[index];\n        $option.value = val;\n        $option.textContent = lang[label] || val;\n        $select.appendChild($option);\n      }\n      $select.value = this.options.view_mode;\n      $select.addEventListener(\"change\", (function () {\n        this.change_view_mode($select.value)\n      }).bind(this));\n      $side_header.appendChild($select);\n    }\n\n    // Create today button\n    if (this.options.today_button) {\n      let $today_button = document.createElement('button')\n      $today_button.classList.add('today-button')\n      $today_button.textContent = lang.TODAY\n      $today_button.onclick = this.scroll_today.bind(this)\n      $side_header.appendChild($today_button)\n    }\n\n    // position\n    const top = Math.max(0, this.options.header_height - 50 - 5);\n    $side_header.style.top = top + 'px';\n  }\n\n  make_grid_ticks() {\n    if (!Object.values(TICK_LINE).includes(this.options.lines)) return;\n    this.redraw_row_line();\n\n    this.redraw_col_tick(this.dates);\n  }\n\n  redraw_row_line() {\n    let row_y = 0;\n    const row_width = this.dates.length * this.options.column_width;\n    const row_height = this.options.bar_height + this.options.padding;\n    const row_fragment = document.createDocumentFragment();\n    if (this.options.lines !== TICK_LINE.VERTICAL) {\n        for (let _ of this.tasks) {\n            createSVG('line', {\n                x1: 0,\n                y1: row_y + row_height,\n                x2: row_width,\n                y2: row_y + row_height,\n                class: 'row-line',\n                append_to: row_fragment,\n            });\n            row_y += row_height;\n        }\n    }\n    const $lines_layer = createSVG('g', {\n        class: 'lines_layer',\n        append_to: this.layers.grid,\n    });\n    $lines_layer.appendChild(row_fragment);\n  }\n\n  redraw_col_tick(dates) {\n    if (this.options.lines === TICK_LINE.HORIZONTAL) return;\n\n    let tick_x = 0;\n    let tick_y = 0;\n    const data_height =\n        (this.options.bar_height + this.options.padding) * this.tasks.length;\n    const tick_height = Math.max(5000, data_height);\n\n    const tick_fragment = document.createDocumentFragment();\n    for (let date of dates) {\n      let tick_class = \"tick\";\n      if (this.get_thick_mode(date)) {\n        tick_class += ' thick';\n      }\n\n      createSVG(\"path\", {\n        d: `M ${tick_x} ${tick_y} v ${tick_height}`,\n        class: tick_class,\n        append_to: tick_fragment,\n      });\n\n      if (this.view_is(VIEW_MODE.MONTH)) {\n        tick_x +=\n          (date_utils.get_days_in_month(date) * this.options.column_width) / 30;\n      } else {\n        tick_x += this.options.column_width;\n      }\n    }\n    this.layers.grid.appendChild(tick_fragment);\n  }\n\n  get_thick_mode(date) {\n    let thick = false;\n    // thick tick for monday\n    if (this.view_is(VIEW_MODE.DAY) && date.getDate() === 1) {\n      thick = true;\n    }\n    // thick tick for first week\n    if (\n      this.view_is(VIEW_MODE.WEEK) &&\n      date.getDate() >= 1 &&\n      date.getDate() < 8\n    ) {\n      thick = true;\n    }\n    // thick ticks for quarters\n    if (this.view_is(VIEW_MODE.MONTH) && date.getMonth() % 3 === 0) {\n      thick = true;\n    }\n    // thick ticks for quarter_year\n    if (this.view_is(VIEW_MODE.QUARTER_YEAR) && date.getMonth() === 0) {\n      thick = true;\n    }\n    // thick ticks for year\n    if (this.view_is(VIEW_MODE.YEAR)) {\n      thick = true;\n    }\n    return thick;\n  }\n\n  highlightWeekends() {\n    if (!this.options.highlight_weekend) return;\n    if (!this.view_is([VIEW_MODE.DAY, VIEW_MODE.HALF_DAY])) return;\n    const weekends_fragment = this.getHighlightWeekends_fragment(this.gantt_start, this.gantt_end);\n    this.layers.grid.appendChild(weekends_fragment);\n  }\n\n  getHighlightWeekends_fragment(start, end) {\n    const weekends_fragment = document.createDocumentFragment();\n    for (let d = new Date(start); d <= end; d.setDate(d.getDate() + 1)) {\n      if (d.getDay() === 0 || d.getDay() === 6) {\n        const x = this.get_snap_x(d, this.gantt_start);\n        createSVG('rect', {\n          x,\n          y: 0,\n          width: (this.view_is(VIEW_MODE.DAY) ? 1 : 2) * this.options.column_width,\n          height: '100%',\n          class: 'holiday-highlight',\n          append_to: weekends_fragment,\n        });\n      }\n    }\n    return weekends_fragment;\n  }\n\n  //compute the horizontal x distance\n  computeGridHighlightDimensions(view_mode) {\n    const today = date_utils.today();\n    let x = view_mode === VIEW_MODE.DAY ? this.options.column_width / 2 : 0;\n\n    return {\n      x: x + this.get_snap_x(today, this.gantt_start),\n      date: today\n    }\n  }\n\n  make_grid_highlights() {\n    this.highlightWeekends()\n    this.highlightToday();\n  }\n\n  highlightToday() {\n    // highlight today's | week's | month's | quarter_year's | year's\n    if (\n      this.view_is(VIEW_MODE.DAY) ||\n      this.view_is(VIEW_MODE.WEEK) ||\n      this.view_is(VIEW_MODE.MONTH) ||\n      this.view_is(VIEW_MODE.QUARTER_YEAR) ||\n      this.view_is(VIEW_MODE.YEAR)\n    ) {\n      // Used as we must find the _end_ of session if view is not Day\n\n      const { x: left, date } = this.computeGridHighlightDimensions(this.options.view_mode);\n\n      const el = this.layers.today.querySelector(\".today-date-line\");\n\n    const data_height =\n        (this.options.bar_height + this.options.padding) * this.tasks.length;\n    const path_height = Math.max(5000, data_height);\n      if (el) {\n        $.attr(el, { d: `M ${left} 0 v ${path_height}` });\n      } else {\n        createSVG('path', {\n          d: `M ${left} 0 v ${path_height}`,\n          class: 'today-date-line',\n          append_to: this.layers.today,\n        });\n      }\n\n      const $today = document.getElementById(date_utils.format(date).replaceAll(' ', '_'))\n      if ($today) {\n        $today.classList.add('today-date-highlight')\n        $today.style.top = +$today.style.top.slice(0, -2) - 4 + 'px'\n        $today.style.left = +$today.style.left.slice(0, -2) - 8 + 'px'\n      }\n    }\n  }\n\n  create_el({ left, top, width, height, id, classes, append_to }) {\n    let $el = document.createElement(\"div\");\n    $el.classList.add(classes)\n    $el.style.top = top + 'px'\n    $el.style.left = left + 'px'\n    if (id) $el.id = id\n    if (width) $el.style.width = width + 'px'\n    if (height) $el.style.height = height + 'px'\n    append_to.appendChild($el)\n    return $el\n  }\n\n  make_dates() {\n    this.upper_texts_x = {}\n    this.get_dates_to_draw(this.dates, null).forEach((date, i) => {\n      this.draw_date(date, i);\n    })\n  }\n\n  get_dates_to_draw(dates, last) {\n    let last_date = last;\n    return dates.map((date, i) => {\n      const d = this.get_date_info(date, last_date, i);\n      last_date = d;\n      return d;\n    });\n  }\n\n  get_date_info(date, last_date_info) {\n    let last_date = last_date_info ? last_date_info.date : date_utils.add(date, 1, \"day\")\n    const date_text = {\n      Hour_lower: date_utils.format(date, \"HH\", this.options.language),\n      \"Quarter Day_lower\": date_utils.format(date, \"HH\", this.options.language),\n      \"Half Day_lower\": date_utils.format(date, \"HH\", this.options.language),\n      Day_lower:\n        date.getDate() !== last_date.getDate()\n          ? date_utils.format(date, \"D\", this.options.language)\n          : \"\",\n      Week_lower:\n        date.getMonth() !== last_date.getMonth()\n          ? date_utils.format(date, \"D MMM\", this.options.language)\n          : date_utils.format(date, \"D\", this.options.language),\n      Month_lower: date_utils.format(date, \"M月\", this.options.language),\n      \"Quarter Year_lower\":\n        !last_date_info || date.getMonth() !== last_date.getMonth()\n          ? \"Q\" + date_utils.format(date, \"Q\", this.options.language)\n          : \"\",\n      Year_lower: date_utils.format(date, \"YYYY年\", this.options.language),\n      Hour_upper:\n        date.getDate() !== last_date.getDate()\n          ? date_utils.format(date, \"D MMMM\", this.options.language)\n          : \"\",\n      \"Quarter Day_upper\":\n        date.getDate() !== last_date.getDate()\n          ? date_utils.format(date, \"D MMM\", this.options.language)\n          : \"\",\n      \"Half Day_upper\":\n        date.getDate() !== last_date.getDate()\n          ? date_utils.format(date, \"D MMM\", this.options.language)\n          : \"\",\n      Day_upper:\n        !last_date_info || date.getMonth() !== last_date.getMonth()\n          ? date_utils.format(date, \"YYYY年MM月\", this.options.language)\n          : \"\",\n      Week_upper:\n        !last_date_info || date.getMonth() !== last_date.getMonth()\n          ? date_utils.format(date, \"YYYY年MM月\", this.options.language)\n          : \"\",\n      Month_upper:\n        !last_date_info || date.getFullYear() !== last_date.getFullYear()\n          ? date_utils.format(date, \"YYYY年\", this.options.language)\n          : \"\",\n      \"Quarter Year_upper\":\n        !last_date_info || date.getFullYear() !== last_date.getFullYear()\n          ? date_utils.format(date, \"YYYY年\", this.options.language)\n          : \"\",\n      Year_upper: \"\"\n    };\n\n    // special Month scale\n    let column_width = this.view_is(VIEW_MODE.MONTH) ? (date_utils.get_days_in_month(date) * this.options.column_width) / 30 : this.options.column_width;\n\n    const base_pos = {\n      x: last_date_info\n        ? last_date_info.base_pos_x + last_date_info.column_width\n        : 0,\n      lower_y: this.options.header_height - 20,\n      upper_y: Math.max(6, this.options.header_height - 50),\n    };\n\n    const base_tick = {\n      line: this.get_thick_mode(date),\n    };\n\n    // starting_point upper:center-or-start lower:center\n    const x_pos = {\n      Hour_lower: column_width / 2,\n      Hour_upper: column_width * 24 / 2,\n      \"Quarter Day_lower\": column_width / 2,\n      \"Quarter Day_upper\": column_width * 4 / 2,\n      \"Half Day_lower\": column_width / 2,\n      \"Half Day_upper\": column_width * 2 / 2,\n      Day_lower: column_width / 2,\n      Day_upper: column_width / 2,\n      Week_lower: column_width / 2,\n      Week_upper: 19,\n      Month_lower: column_width / 2,\n      Month_upper: 19,\n      \"Quarter Year_lower\": column_width / 2,\n      \"Quarter Year_upper\": (column_width * 4) / 2,\n      Year_lower: column_width / 2,\n      Year_upper: 19,\n    };\n    return {\n      date,\n      formatted_date: date_utils.format(date).replaceAll(' ', '_'),\n      column_width,\n      base_pos_x: base_pos.x,\n      upper_text: this.options.upper_text ? this.options.upper_text(date, this.options.view_mode, date_text[`${this.options.view_mode}_upper`]) : date_text[`${this.options.view_mode}_upper`],\n      lower_text: this.options.lower_text ? this.options.lower_text(date, this.options.view_mode, date_text[`${this.options.view_mode}_lower`]) : date_text[`${this.options.view_mode}_lower`],\n      upper_x: base_pos.x + x_pos[`${this.options.view_mode}_upper`],\n      upper_y: base_pos.upper_y,\n      lower_x: base_pos.x + x_pos[`${this.options.view_mode}_lower`],\n      lower_y: base_pos.lower_y,\n      tick_line: base_tick.line,\n    };\n  }\n\n  draw_date(date, i) {\n    let $lower_text = this.create_el({\n      left: date.lower_x,\n      top: date.lower_y,\n      id: date.formatted_date,\n      classes: 'lower-text',\n      append_to: this.$lower_header\n    })\n    $lower_text.innerText = date.lower_text;\n    $lower_text.style.left = +$lower_text.style.left.slice(0, -2) - $lower_text.clientWidth / 2 + 'px';\n\n    if (date.upper_text) {\n      this.upper_texts_x[date.upper_text] = date.upper_x;\n      let $upper_text = this.create_el({\n          left: date.upper_x,\n          top: date.upper_y,\n          classes: 'upper-text',\n          append_to: this.$upper_header,\n      });\n      $upper_text.innerText = date.upper_text;\n    }\n\n    if (date.tick_line) {\n      this.create_el({\n          left: date.base_pos_x - 1,\n          top: date.lower_y,\n          width: 2,\n          height: this.options.header_height - 20,\n          classes: 'tick-line',\n          append_to: this.$line_header,\n      });\n    }\n  }\n\n  make_bars() {\n    const bar_fragment = document.createDocumentFragment();\n    this.bars = this.tasks.map((task) => {\n      const bar = new Bar(this, task);\n      bar_fragment.appendChild(bar.group);\n      return bar;\n    });\n    this.layers.bar.appendChild(bar_fragment);\n  }\n\n  make_arrows() {\n    this.arrows = [];\n    if (!this.options.dependencies) return;\n    const arrow_fragment = document.createDocumentFragment();\n    for (let task of this.tasks) {\n      let arrows = [];\n      arrows = task.dependencies\n        .map((task_id) => {\n          const dependency = this.get_task(task_id);\n          if (!dependency) return;\n          const arrow = new Arrow(\n            this,\n            this.bars[dependency._index], // from_task\n            this.bars[task._index], // to_task\n          );\n          arrow_fragment.appendChild(arrow.element);\n          return arrow;\n        })\n        .filter(Boolean); // filter falsy values\n      this.arrows = this.arrows.concat(arrows);\n    }\n    this.layers.arrow.appendChild(arrow_fragment);\n  }\n\n  map_arrows_on_bars() {\n    for (let bar of this.bars) {\n      bar.arrows = this.arrows.filter((arrow) => {\n        return (\n          arrow.from_task.task.id === bar.task.id ||\n          arrow.to_task.task.id === bar.task.id\n        );\n      });\n    }\n  }\n\n  set_scroll_position(date) {\n    if (!date || date === 'start') {\n      date = this.gantt_start\n    } else if (date === 'today') {\n      return this.scroll_today()\n    } else if (typeof date === 'string') {\n      date = date_utils.parse(date)\n    }\n\n    const parent_element = this.$svg.parentElement;\n    if (!parent_element) return;\n\n    const hours_before_first_task = date_utils.diff(\n      date,\n      this.gantt_start,\n      \"hour\",\n    );\n    // 1/3 padding\n    const sharing = parent_element.clientWidth / 3;\n    const space = sharing / this.options.column_width * this.options.step;\n    const distance = hours_before_first_task - space;\n\n    // position\n    const scroll_pos = (distance / this.options.step) * this.options.column_width;\n    // smooth、auto\n    parent_element.scrollTo({ left: scroll_pos, behavior: 'auto' })\n  }\n\n  scroll_today() {\n    this.set_scroll_position(new Date().setHours(0, 0, 0, 0))\n  }\n\n  bind_grid_scroll() {\n    const grid_width = this.dates.length * this.options.column_width;\n\n    // onmousewheel\n    $.on(\n      this.$container_header,\n      'wheel',\n      (event) => {\n        if (event.shiftKey || event.deltaX) {\n          const scrollMove = event.deltaX ? event.deltaX : event.deltaY;\n          const scrollX = this.$container_main.scrollLeft || 0;\n          let newScrollX = scrollX + scrollMove;\n          if (newScrollX < 0) {\n            newScrollX = 0;\n          } else if (newScrollX > grid_width) {\n            newScrollX = grid_width;\n          }\n          this.$container_main.scrollLeft = newScrollX;\n          event.preventDefault();\n        }\n      }\n    );\n\n    $.on(this.$container_main,\n      'scroll',\n      $.throttle(20, () => {\n        const scrollLeft = this.$container_main.scrollLeft;\n        this.$container_header.scrollLeft = scrollLeft;\n      }),\n    );\n  }\n\n  bind_grid_click() {\n    $.on(\n      this.$container,\n      this.options.popup_trigger,\n      () => {\n        this.unselect_all();\n        this.hide_popup();\n      },\n    );\n  }\n\n  bind_bar_create() {\n    let x_on_start = 0;\n    let y_on_start = 0;\n    let matched_task = null;\n    let is_creating = null;\n    let holder = null;\n    this.bar_being_created = null;\n\n    const radius = this.options.bar_corner_radius;\n    const bar_height = this.options.bar_height;\n    const row_height = bar_height + this.options.padding;\n\n    $.on(this.$svg, \"mousedown\", (e) => {\n      // location\n      const index = parseInt(e.offsetY / row_height);\n      matched_task = this.tasks[index];\n      // only empty date\n      if (!matched_task || (matched_task && matched_task.empty !== true)) return;\n      this.bar_being_created = matched_task.id;\n      // start record\n      is_creating = true;\n      x_on_start = e.offsetX;\n      y_on_start = this.get_snap_y(e.offsetY);\n    });\n\n    $.on(this.$svg, \"mousemove\", (e) => {\n      if (!is_creating) return;\n      let dx = e.offsetX - x_on_start;\n\n      // free distance\n      const width = Math.abs(dx);\n      // create rect\n      if (!holder) {\n        holder = createSVG('rect', {\n          x: x_on_start,\n          y: y_on_start,\n          width: 0,\n          height: bar_height,\n          rx: radius,\n          ry: radius,\n          class: 'bar-inner',\n          'data-id': matched_task.id,\n          append_to: this.layers.progress,\n        });\n      }\n      // move-right\n      let x = x_on_start;\n      if (dx < 0) {\n        // move-left\n        x = x_on_start - width;\n      }\n      holder.setAttribute('x', x);\n      holder.setAttribute('width', width);\n    });\n\n    $.on(this.$svg, \"mouseup\", () => {\n      this.bar_being_created = null;\n      if (holder) {\n        const start_x = holder.getX();\n        const end_x = holder.getX() + holder.getBBox().width;\n        let date_start = this.get_snap_date(start_x);\n        let date_end = this.get_snap_date(end_x);\n        if (this.options.drag_ignore_hours) {\n          // Non-hourly computation\n          if (!this.view_is([VIEW_MODE.HOUR, VIEW_MODE.QUARTER_DAY, VIEW_MODE.HALF_DAY])) {\n            date_start = new Date(date_start.setHours(0, 0, 0, 0));\n            date_end = new Date(date_end.setHours(23, 59, 59, 59));\n          }\n        }\n\n        const update_task = Object.assign(matched_task, {\n            start: date_start,\n            _start: date_start,\n            end: date_end,\n            _end: date_end,\n            empty: false,\n            invalid: false,\n        });\n        this.replace(update_task, matched_task);\n\n        // remove holder dom\n        this.layers.progress.removeChild(holder);\n        // trigger event\n        this.trigger_event('date_change', [matched_task, date_start, date_end]);\n      }\n      holder = null;\n    });\n\n    document.addEventListener(\"mouseup\", () => {\n      is_creating = false;\n    });\n  }\n\n  bind_bar_events() {\n    let is_dragging = false;\n    let x_on_start = 0;\n    let x_on_scroll_start = 0;\n    let y_on_start = 0;\n    let is_resizing_left = false;\n    let is_resizing_right = false;\n    let parent_bar_id = null;\n    let bars = []; // instanceof Bar\n    this.bar_being_dragged = null;\n\n    function action_in_progress() {\n      return is_dragging || is_resizing_left || is_resizing_right;\n    }\n\n    $.on(this.$svg, \"mousedown\", \".bar-wrapper, .handle\", (e, element) => {\n      const bar_wrapper = $.closest(\".bar-wrapper\", element);\n      bars.forEach((bar) => bar.group.classList.remove(\"active\"));\n\n      if (element.classList.contains(\"left\")) {\n        is_resizing_left = true;\n      } else if (element.classList.contains(\"right\")) {\n        is_resizing_right = true;\n      } else if (element.classList.contains(\"bar-wrapper\")) {\n        is_dragging = true;\n      }\n\n      bar_wrapper.classList.add(\"active\");\n      this.hide_popup();\n\n      x_on_start = e.offsetX;\n      y_on_start = e.offsetY;\n\n      parent_bar_id = bar_wrapper.getAttribute(\"data-id\");\n      const ids = [\n        parent_bar_id\n      ];\n      // drag sync children\n      if (this.options.drag_sync_child) {\n        ids.push(...this.get_all_dependent_tasks(parent_bar_id));\n      }\n      bars = ids.map((id) => this.get_bar(id));\n\n      this.bar_being_dragged = parent_bar_id;\n\n      bars.forEach((bar) => {\n        if (bar.empty) return;\n        const $bar = bar.$bar;\n        $bar.ox = $bar.getX();\n        $bar.oy = $bar.getY();\n        $bar.owidth = $bar.getWidth();\n        $bar.finaldx = 0;\n      });\n    });\n\n    const handle_width = this.options.handle_width;\n    $.on(this.$svg, \"mousemove\", (e) => {\n      if (!action_in_progress()) return;\n      const dx = e.offsetX - x_on_start;\n      const dy = e.offsetY - y_on_start;\n\n      bars.forEach((bar) => {\n        if (bar.empty) return;\n        const $bar = bar.$bar;\n        // free-distance\n        $bar.finaldx = dx;\n        this.hide_popup();\n        if (is_resizing_left) {\n          if ($bar.finaldx - $bar.owidth + handle_width >= 0) return;\n          if (parent_bar_id === bar.task.id) {\n            bar.update_bar_position({\n              x: $bar.ox + $bar.finaldx,\n              width: $bar.owidth - $bar.finaldx,\n            });\n          } else {\n            bar.update_bar_position({\n              x: $bar.ox + $bar.finaldx,\n            });\n          }\n        } else if (is_resizing_right) {\n          if ($bar.finaldx + $bar.owidth < handle_width) return;\n          if (parent_bar_id === bar.task.id) {\n            bar.update_bar_position({\n              width: $bar.owidth + $bar.finaldx,\n            });\n          }\n        } else if (is_dragging) {\n          bar.update_bar_position({ x: $bar.ox + $bar.finaldx });\n        }\n\n        // show drag_backdrop\n        if (parent_bar_id === bar.task.id) {\n          let x = 0;\n          const scrollLeft = this.$container_main.scrollLeft;\n          if (is_resizing_right) {\n            x = $bar.ox - scrollLeft;\n          } else {\n            x = $bar.ox + $bar.finaldx - scrollLeft;\n          }\n          this.show_backdrop({\n              x: x,\n              width: $bar.getWidth(),\n              bar,\n          });\n        }\n      });\n    });\n\n    $.on(this.$svg, \"mouseup\", () => {\n      this.bar_being_dragged = null;\n      this.hide_backdrop();\n      bars.forEach((bar) => {\n        if (bar.empty) return;\n        const $bar = bar.$bar;\n        if (!$bar.finaldx) return;\n\n        // calculate start_date end_date\n        const date_snap_start = this.get_snap_date($bar.getX());\n        const date_start = new Date(date_snap_start.setHours(0, 0, 0, 0));\n        const dx_start = this.get_snap_x(date_start, this.gantt_start);\n\n        const date_snap_end = this.get_snap_date($bar.getEndX());\n        const date_subtract = date_utils.add(date_utils.add(date_snap_end, 1, 'day'), -1, 'second');\n        const date_end = new Date(date_subtract.setHours(0, 0, 0, 0));\n        const dx_end = this.get_snap_x(date_end, this.gantt_start);\n\n        if (this.options.drag_ignore_hours) {\n          // calculate drop coord\n          if (!this.view_is([VIEW_MODE.HOUR, VIEW_MODE.QUARTER_DAY, VIEW_MODE.HALF_DAY])) {\n            bar.update_bar_position({\n              x: dx_start,\n              width: dx_end - dx_start,\n            });\n          }\n        }\n\n        // TODO out of limit date\n        if (date_start < this.gantt_start || date_end > this.gantt_end) {\n          this.redraw_date({ start: date_start, end: date_end });\n        }\n\n        $bar.finaldx = 0;\n        bar.date_changed();\n        bar.set_action_completed();\n      });\n    });\n\n    document.addEventListener(\"mouseup\", () => {\n      is_dragging = false;\n      is_resizing_left = false;\n      is_resizing_right = false;\n    });\n\n    $.on(this.$container_main, 'scroll', e => {\n      let elements = document.querySelectorAll('.bar-wrapper');\n      let localBars = [];\n      const ids = [];\n      let dx;\n      if (x_on_scroll_start) {\n        dx = e.currentTarget.scrollLeft - x_on_scroll_start;\n      }\n\n      const daysSinceStart = e.currentTarget.scrollLeft / this.options.column_width * this.options.step / 24;\n      let format_str = \"D MMM\";\n      if (this.view_is([VIEW_MODE.YEAR, VIEW_MODE.QUARTER_YEAR, VIEW_MODE.MONTH])) format_str = 'YYYY年';\n      else if (this.view_is([VIEW_MODE.DAY, VIEW_MODE.WEEK])) format_str = 'YYYY年MM月';\n      else if (this.view_is(VIEW_MODE.HALF_DAY)) format_str = 'D MMM';\n      else if (this.view_is(VIEW_MODE.HOUR)) format_str = 'D MMMM';\n\n      // language\n      const currentUpper = date_utils.format(\n        date_utils.add(this.gantt_start, daysSinceStart, 'day'),\n        format_str,\n        this.options.language\n      );\n      const upperTexts = Array.from(document.querySelectorAll('.upper-text'));\n      const $el = upperTexts.find(el => el.textContent === currentUpper)\n      if ($el && !$el.classList.contains('current-upper')) {\n        const $current = document.querySelector('.current-upper')\n        if ($current) {\n          $current.classList.remove('current-upper')\n          $current.style.left = this.upper_texts_x[$current.textContent] + 'px';\n        }\n\n        $el.classList.add('current-upper')\n        // 38/2 - 8 first-point\n        $el.style.left = '11px';\n      }\n\n      Array.prototype.forEach.call(elements, function (el, i) {\n        ids.push(el.getAttribute('data-id'));\n      });\n\n      if (dx) {\n        localBars = ids.map(id => this.get_bar(id));\n        if (this.options.auto_move_label) {\n          localBars.forEach(bar => {\n            bar.update_label_position_on_horizontal_scroll({ x: dx, sx: e.currentTarget.scrollLeft });\n          });\n        }\n      }\n\n      x_on_scroll_start = e.currentTarget.scrollLeft;\n\n      this.trigger_event('scroll', [e]);\n    });\n\n    if (this.options.drag_bar_progress) {\n      this.bind_bar_progress();\n    }\n  }\n\n  bind_bar_progress() {\n    let x_on_start = 0;\n    let y_on_start = 0;\n    let is_resizing = null;\n    let bar = null;\n    let $bar_progress = null;\n    let $bar = null;\n\n    $.on(this.$svg, \"mousedown\", \".handle.progress\", (e, handle) => {\n      is_resizing = true;\n      x_on_start = e.offsetX;\n      y_on_start = e.offsetY;\n\n      const $bar_wrapper = $.closest(\".bar-wrapper\", handle);\n      const id = $bar_wrapper.getAttribute(\"data-id\");\n      bar = this.get_bar(id);\n\n      $bar_progress = bar.$bar_progress;\n      $bar = bar.$bar;\n\n      $bar_progress.finaldx = 0;\n      $bar_progress.owidth = $bar_progress.getWidth();\n      $bar_progress.min_dx = -$bar_progress.getWidth();\n      $bar_progress.max_dx = $bar.getWidth() - $bar_progress.getWidth();\n    });\n\n    $.on(this.$svg, \"mousemove\", (e) => {\n      if (!is_resizing) return;\n      let dx = e.offsetX - x_on_start;\n      let dy = e.offsetY - y_on_start;\n\n      if (dx > $bar_progress.max_dx) {\n        dx = $bar_progress.max_dx;\n      }\n      if (dx < $bar_progress.min_dx) {\n        dx = $bar_progress.min_dx;\n      }\n\n      const $handle = bar.$handle_progress;\n      $.attr($bar_progress, \"width\", $bar_progress.owidth + dx);\n      $.attr($handle, \"points\", bar.get_progress_polygon_points());\n      $bar_progress.finaldx = dx;\n    });\n\n    $.on(this.$svg, \"mouseup\", () => {\n      is_resizing = false;\n      if (!($bar_progress && $bar_progress.finaldx)) return;\n\n      $bar_progress.finaldx = 0;\n      bar.progress_changed();\n      bar.set_action_completed();\n      bar = null;\n      $bar_progress = null;\n      $bar = null;\n    });\n  }\n\n  get_all_dependent_tasks(task_id) {\n    let out = [];\n    let to_process = [task_id];\n    while (to_process.length) {\n      const deps = to_process.reduce((acc, curr) => {\n        acc = acc.concat(this.dependency_map[curr]);\n        return acc;\n      }, []);\n\n      out = out.concat(deps);\n      to_process = deps.filter((d) => !to_process.includes(d));\n    }\n\n    return out.filter(Boolean);\n  }\n\n  get_snap_date(x) {\n    const x_in_units = x / this.options.column_width;\n    return date_utils.add(\n      this.gantt_start,\n      x_in_units * this.options.step,\n      \"hour\",\n    );\n  }\n\n  get_snap_x(end, start) {\n    const hours = date_utils.diff(end, start, 'hour');\n    return hours / this.options.step * this.options.column_width;\n  }\n\n  get_snap_y(oy) {\n    const padding = this.options.padding / 2;\n    const header_height = 0;\n    const row_height = this.options.bar_height + this.options.padding;\n\n    const mod = parseInt((oy - header_height) / row_height);\n    return header_height + mod * row_height + padding;\n  }\n\n  unselect_all() {\n    [...this.$svg.querySelectorAll(\".bar-wrapper\")].forEach((el) => {\n      el.classList.remove(\"active\");\n    });\n  }\n\n  view_is(modes) {\n    if (typeof modes === \"string\") {\n      return this.options.view_mode === modes;\n    }\n\n    if (Array.isArray(modes)) {\n      return modes.some((mode) => this.options.view_mode === mode);\n    }\n\n    return false;\n  }\n\n  get_task(id) {\n    return this.tasks.find((task) => {\n      return task.id === id;\n    });\n  }\n\n  get_bar(id) {\n    return this.bars.find((bar) => {\n      return bar.task.id === id;\n    });\n  }\n\n  show_backdrop({ x, width, bar }) {\n    if (!this.backdrop) {\n      this.backdrop = new Backdrop(this.$drag_backdrop);\n    }\n\n    const { new_start_date, new_end_date } = bar.compute_start_end_date();\n    const subtract_second_date = date_utils.add(new_end_date, -1, 'second');\n\n    let symbol = 'MM-DD';\n    // different years\n    if (\n        date_utils.format(new_start_date, 'YYYY') !==\n        date_utils.format(subtract_second_date, 'YYYY')\n    ) {\n        symbol = 'YYYY-MM-DD';\n    }\n\n    const date_start = date_utils.format(new_start_date, symbol);\n    const date_end = date_utils.format(subtract_second_date, symbol);\n    this.backdrop.showAt({ x, width, range: [date_start, date_end] });\n  }\n\n  hide_backdrop() {\n    this.backdrop && this.backdrop.hide();\n  };\n\n  show_popup(options) {\n    if (this.options.popup === false) return\n    if (!this.popup) {\n      this.popup = new Popup(\n        this,\n        this.$popup_wrapper,\n      );\n    }\n    this.popup.show(options);\n  }\n\n  hide_popup() {\n    this.popup && this.popup.hide();\n  }\n\n  trigger_event(event, args) {\n    if (this.options[\"on_\" + event]) {\n      this.options[\"on_\" + event].apply(null, args);\n    }\n  }\n\n  clear() {\n    this.$svg.innerHTML = \"\";\n    this.$container_toolbar.innerHTML = \"\";\n    this.$header?.remove?.()\n    this.hide_popup();\n  }\n}\n\nGantt.VIEW_MODE = VIEW_MODE;\n\nfunction generate_id(task) {\n  return task.name + \"_\" + Math.random().toString(36).slice(2, 12);\n}\n"],"names":["YEAR","MONTH","DAY","HOUR","MINUTE","SECOND","MILLISECOND","SHORTENED","January","February","March","April","May","June","July","August","September","October","November","December","date_utils","parse_duration","duration","matches","exec","parseInt","scale","parse","date","date_separator","time_separator","Date","date_parts","time_parts","parts","split","map","val","vals","length","parseFloat","concat","to_string","with_time","TypeError","this","get_date_values","i","padStart","date_string","time_string","format","format_string","lang","month_name","Intl","DateTimeFormat","month","month_name_capitalized","charAt","toUpperCase","slice","values","format_map","YYYY","MM","DD","HH","mm","ss","M","D","h","m","s","SSS","Q","MMMM","MMM","str","formatted_values","Object","keys","sort","a","b","forEach","key","includes","replaceAll","push","value","diff","date_a","date_b","milliseconds","seconds","hours","minutes","days","months","years","endsWith","Math","floor","today","now","add","qty","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","getMilliseconds","start_of","scores","should_reset","_scale","clone","get_days_in_month","no_of_days","year","targetLength","padString","String","repeat","$","expr","con","document","querySelector","createSVG","tag","attrs","elem","createElementNS","attr","append_to","appendChild","innerHTML","setAttribute","animateSVG","svgElement","from","to","animatedSvgElement","dur","begin","animEl","attributeName","animateElement","calcMode","keyTimes","keySplines","cubic_bezier","getAnimationElement","event","createEvent","initEvent","eventName","dispatchEvent","name","ease","linear","on","element","selector","callback","delegate","bind","off","handler","removeEventListener","addEventListener","e","delegatedTarget","target","closest","call","parentNode","getAttribute","throttle","delay","noTrailing","debounceMode","timeoutID","lastExec","undefined","self","elapsed","Number","args","arguments","apply","clear","clearTimeout","setTimeout","VIEW_MODE","QUARTER_DAY","HALF_DAY","WEEK","QUARTER_YEAR","LAN_ZH","TODAY","LAN_EN","Bar","constructor","gantt","task","set_defaults","prepare","draw","action_completed","prepare_doms","prepare_values","prepare_helpers","group","class","custom_class","important","id","bar_group","handle_group","empty","invalid","height","options","bar_height","image_size","compute_x","compute_y","compute_duration","corner_radius","bar_corner_radius","width","column_width","progress_width","progress","SVGElement","prototype","getX","getY","getWidth","getHeight","getEndX","prepare_expected_progress_values","compute_expected_progress","expected_progress_width","expected_progress","update_bar_vertical","offset","Array","children","el","y","thumbnail","$thumbnail","arr","$handle","$handle_progress","get_progress_polygon_points","draw_bar","draw_progress_bar","show_expected_progress","draw_expected_progress_bar","draw_label","draw_resize_handles","draw_thumbnail","$bar","x","rx","ry","classList","$expected_bar_progress","$bar_progress","x_coord","requestAnimationFrame","update_label_position","defs","clipPath","href","readonly","bar","handle_width","gw","drag_bar_progress","points","join","bar_progress","icon_width","icon_height","setup_click_event","timeout","clickTimeout","trigger_event","screenX","screenY","scrollLeft","$container_main","show_popup","offsetX","hide_popup","clickCount","bar_being_dragged","subtitle","_start","language","_end","target_element","title","update_bar_task","label","update_bar_position","drag_limit_child","dependencies","dep","get_bar","reduce","_","curr","update_attr","$date_highlight","style","left","update_handle_position","date_changed","update_expected_progressbar_position","update_progressbar_position","update_arrow_position","update_label_position_on_horizontal_scroll","sx","container","img","img_mask","barWidthLimit","newLabelX","newImgX","imgWidth","getBBox","labelEndX","viewportCentral","clientWidth","contains","changed","new_start_date","new_end_date","compute_start_end_date","remove","progress_changed","new_progress","compute_progress","set_action_completed","x_in_units","gantt_start","step","width_in_units","task_start","view_is","padding","_index","get_snap_position","dx","rem","position","odx","isNaN","x_offset_label_img","labelWidth","barWidth","arrows","arrow","update","Arrow","from_task","to_task","calculate_path","drawInner","rowHeight","taskHeight","arrowCurve","arrow_curve","taskFrom","taskTo","taskFromX2","taskFromY1","taskToX1","taskToEndPosition","taskFromEndPosition","arrowIndent","path","trianglePoints","svgPath","d","fill","svgPolygon","Popup","parent","custom_html","popup","make","hide","pointer","show","Error","html","position_meta","HTMLElement","getBoundingClientRect","parentWidth","parentHeight","clientHeight","ganttOptions","ganttWidth","$container","ganttHeight","dy","scrollTop","pos_x","pos_y","header_height","top","display","Backdrop","drag_mask","date_range","showAt","range","htmlHold","VIEW_MODE_PADDING","TICK_LINE","BOTH","HORIZONTAL","VERTICAL","DEFAULT_OPTIONS","view_modes","view_mode","popup_trigger","drag_ignore_hours","drag_sync_child","highlight_weekend","scroll_to","lines","auto_move_label","today_button","view_mode_select","Gantt","wrapper","tasks","setup_wrapper","setup_options","setup_tasks","change_view_mode","bind_events","svg_element","wrapper_element","$svg","createElement","$container_header","parentElement","$container_toolbar","$popup_wrapper","$drag_backdrop","view_mode_padding","entries","format_task","setup_dependencies","dependency_map","t","format_dependency","start","end","tmpDuration","every","deps","trim","filter","random","toString","generate_id","refresh","original","get_task","current","result","update_task","replace","splice","start_date","get_snap_x","end_date","index","tid","findIndex","item","row_height","remove_bar","bars","layers","removeChild","rows","grid","lastChild","make_arrows","map_arrows_on_bars","grid_height","insert","insert_task","limit_start","limit_end","gantt_end","redraw_date","insert_bar","target_bar","insertBefore","row_width","dates","insert_y","$grid_el","x1","y1","x2","y2","prev_task","update_bar","old_bar","target_postion","mode","record_start","performance","update_view_scale","setup_dates","render","record_time","setup_gantt_dates","setup_date_values","get_gantt_dates","viewKey","padding_start","padding_end","setHours","setMonth","cur_date","console","log","redraw_left","get_redraw_dates","get_dates_to_draw","draw_date","gantt_prev_start","weekends_fragment","getHighlightWeekends_fragment","redraw_col_tick","start_arrs","start_temp","redraw_right","end_arrs","end_temp","unshift","new_limit_end","redraw_layout","grid_width","querySelectorAll","row","$header","bind_grid_scroll","bind_grid_click","bind_bar_create","bind_bar_events","setup_layers","make_grid","make_dates","make_bars","make_grid_extras","set_scroll_position","layer","make_grid_background","make_grid_rows","make_grid_header","make_grid_toolbar","make_grid_highlights","make_grid_ticks","scroll_height","overflow","row_y","fragment","createDocumentFragment","$upper_header","$lower_header","$line_header","$side_header","$select","modes","modes_values","modes_keys","$option","vm","textContent","$today_button","onclick","scroll_today","max","redraw_row_line","row_fragment","tick_x","data_height","tick_height","tick_fragment","tick_class","get_thick_mode","thick","highlightWeekends","setDate","getDay","computeGridHighlightDimensions","highlightToday","path_height","$today","getElementById","create_el","classes","$el","upper_texts_x","last","last_date","get_date_info","last_date_info","date_text","Hour_lower","Day_lower","Week_lower","Month_lower","Year_lower","Hour_upper","Day_upper","Week_upper","Month_upper","Year_upper","base_pos","base_pos_x","lower_y","upper_y","base_tick","line","x_pos","formatted_date","upper_text","lower_text","upper_x","lower_x","tick_line","$lower_text","innerText","bar_fragment","arrow_fragment","task_id","dependency","Boolean","parent_element","scroll_pos","scrollTo","behavior","shiftKey","deltaX","scrollMove","deltaY","newScrollX","preventDefault","unselect_all","x_on_start","y_on_start","matched_task","is_creating","holder","bar_being_created","radius","offsetY","get_snap_y","abs","start_x","end_x","date_start","get_snap_date","date_end","assign","is_dragging","x_on_scroll_start","is_resizing_left","is_resizing_right","parent_bar_id","bar_wrapper","ids","get_all_dependent_tasks","ox","oy","owidth","finaldx","show_backdrop","hide_backdrop","date_snap_start","dx_start","date_snap_end","date_subtract","dx_end","elements","localBars","currentTarget","daysSinceStart","format_str","currentUpper","find","$current","bind_bar_progress","is_resizing","handle","min_dx","max_dx","out","to_process","acc","isArray","some","backdrop","subtract_second_date","symbol"],"mappings":"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"}