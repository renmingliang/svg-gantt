{"version":3,"file":"frappe-gantt.min.js","sources":["../src/date_utils.js","../src/svg_utils.js","../src/bar.js","../src/arrow.js","../src/popup.js","../src/backdrop.js","../src/index.js"],"sourcesContent":["const YEAR = \"year\";\nconst MONTH = \"month\";\nconst DAY = \"day\";\nconst HOUR = \"hour\";\nconst MINUTE = \"minute\";\nconst SECOND = \"second\";\nconst MILLISECOND = \"millisecond\";\n\nconst SHORTENED = {\n  January: \"Jan\",\n  February: \"Feb\",\n  March: \"Mar\",\n  April: \"Apr\",\n  May: \"May\",\n  June: \"Jun\",\n  July: \"Jul\",\n  August: \"Aug\",\n  September: \"Sep\",\n  October: \"Oct\",\n  November: \"Nov\",\n  December: \"Dec\"\n};\n\nexport default {\n  parse_duration(duration) {\n    const regex = /([0-9])+(y|m|d|h|min|s|ms)/gm;\n    const matches = regex.exec(duration);\n\n    if (matches !== null) {\n      if (matches[2] === \"y\") {\n        return { duration: parseInt(matches[1]), scale: `year` };\n      } else if (matches[2] === \"m\") {\n        return { duration: parseInt(matches[1]), scale: `month` };\n      } else if (matches[2] === \"d\") {\n        return { duration: parseInt(matches[1]), scale: `day` };\n      } else if (matches[2] === \"h\") {\n        return { duration: parseInt(matches[1]), scale: `hour` };\n      } else if (matches[2] === \"min\") {\n        return { duration: parseInt(matches[1]), scale: `minute` };\n      } else if (matches[2] === \"s\") {\n        return { duration: parseInt(matches[1]), scale: `second` };\n      } else if (matches[2] === \"ms\") {\n        return { duration: parseInt(matches[1]), scale: `millisecond` };\n      }\n    }\n  },\n  parse(date, date_separator = \"-\", time_separator = /[.:]/) {\n    if (date instanceof Date) {\n      return date;\n    }\n    if (typeof date === \"string\") {\n      let date_parts, time_parts;\n      const parts = date.split(\" \");\n      date_parts = parts[0]\n        .split(date_separator)\n        .map((val) => parseInt(val, 10));\n      time_parts = parts[1] && parts[1].split(time_separator);\n\n      // month is 0 indexed\n      date_parts[1] = date_parts[1] ? date_parts[1] - 1 : 0;\n\n      let vals = date_parts;\n\n      if (time_parts && time_parts.length) {\n        if (time_parts.length === 4) {\n          time_parts[3] = \"0.\" + time_parts[3];\n          time_parts[3] = parseFloat(time_parts[3]) * 1000;\n        }\n        vals = vals.concat(time_parts);\n      }\n      return new Date(...vals);\n    }\n  },\n\n  to_string(date, with_time = false) {\n    if (!(date instanceof Date)) {\n      throw new TypeError(\"Invalid argument type\");\n    }\n    const vals = this.get_date_values(date).map((val, i) => {\n      if (i === 1) {\n        // add 1 for month\n        val = val + 1;\n      }\n\n      if (i === 6) {\n        return padStart(val + \"\", 3, \"0\");\n      }\n\n      return padStart(val + \"\", 2, \"0\");\n    });\n    const date_string = `${vals[0]}-${vals[1]}-${vals[2]}`;\n    const time_string = `${vals[3]}:${vals[4]}:${vals[5]}.${vals[6]}`;\n\n    return date_string + (with_time ? \" \" + time_string : \"\");\n  },\n\n  format(date, format_string = \"YYYY-MM-DD HH:mm:ss.SSS\", lang = \"en\") {\n    const dateTimeFormat = new Intl.DateTimeFormat(lang, {\n      month: \"long\",\n    });\n    const month_name = dateTimeFormat.format(date);\n    const month_name_capitalized =\n      month_name.charAt(0).toUpperCase() + month_name.slice(1);\n\n    const values = this.get_date_values(date);\n    const format_map = {\n      YYYY: values[0],\n      MM: padStart(values[1] + 1, 2, 0),\n      DD: padStart(values[2], 2, 0),\n      HH: padStart(values[3], 2, 0),\n      mm: padStart(values[4], 2, 0),\n      ss: padStart(values[5], 2, 0),\n      M: values[1] + 1,\n      D: values[2],\n      h: values[3],\n      m: values[4],\n      s: values[5],\n      SSS: values[6],\n      Q: parseInt((values[1] + 1) / 3) + 1,\n      MMMM: month_name_capitalized,\n      MMM: SHORTENED[month_name_capitalized] || month_name_capitalized,\n    };\n\n    let str = format_string;\n    const formatted_values = [];\n\n    Object.keys(format_map)\n      .sort((a, b) => b.length - a.length) // big string first\n      .forEach((key) => {\n        if (str.includes(key)) {\n          str = str.replaceAll(key, `$${formatted_values.length}`);\n          formatted_values.push(format_map[key]);\n        }\n      });\n\n    formatted_values.forEach((value, i) => {\n      str = str.replaceAll(`$${i}`, value);\n    });\n\n    return str;\n  },\n\n  diff(date_a, date_b, scale = DAY) {\n    let milliseconds, seconds, hours, minutes, days, months, years;\n\n    milliseconds = date_a - date_b;\n    seconds = milliseconds / 1000;\n    minutes = seconds / 60;\n    hours = minutes / 60;\n    days = hours / 24;\n    months = days / 30;\n    years = months / 12;\n\n    if (!scale.endsWith(\"s\")) {\n      scale += \"s\";\n    }\n\n    return Math.floor(\n      {\n        milliseconds,\n        seconds,\n        minutes,\n        hours,\n        days,\n        months,\n        years,\n      }[scale],\n    );\n  },\n\n  today() {\n    const vals = this.get_date_values(new Date()).slice(0, 3);\n    return new Date(...vals);\n  },\n\n  now() {\n    return new Date();\n  },\n\n  add(date, qty, scale) {\n    qty = parseInt(qty, 10);\n    const vals = [\n      date.getFullYear() + (scale === YEAR ? qty : 0),\n      date.getMonth() + (scale === MONTH ? qty : 0),\n      date.getDate() + (scale === DAY ? qty : 0),\n      date.getHours() + (scale === HOUR ? qty : 0),\n      date.getMinutes() + (scale === MINUTE ? qty : 0),\n      date.getSeconds() + (scale === SECOND ? qty : 0),\n      date.getMilliseconds() + (scale === MILLISECOND ? qty : 0),\n    ];\n    return new Date(...vals);\n  },\n\n  start_of(date, scale) {\n    const scores = {\n      [YEAR]: 6,\n      [MONTH]: 5,\n      [DAY]: 4,\n      [HOUR]: 3,\n      [MINUTE]: 2,\n      [SECOND]: 1,\n      [MILLISECOND]: 0,\n    };\n\n    function should_reset(_scale) {\n      const max_score = scores[scale];\n      return scores[_scale] <= max_score;\n    }\n\n    const vals = [\n      date.getFullYear(),\n      should_reset(YEAR) ? 0 : date.getMonth(),\n      should_reset(MONTH) ? 1 : date.getDate(),\n      should_reset(DAY) ? 0 : date.getHours(),\n      should_reset(HOUR) ? 0 : date.getMinutes(),\n      should_reset(MINUTE) ? 0 : date.getSeconds(),\n      should_reset(SECOND) ? 0 : date.getMilliseconds(),\n    ];\n\n    return new Date(...vals);\n  },\n\n  clone(date) {\n    return new Date(...this.get_date_values(date));\n  },\n\n  get_date_values(date) {\n    return [\n      date.getFullYear(),\n      date.getMonth(),\n      date.getDate(),\n      date.getHours(),\n      date.getMinutes(),\n      date.getSeconds(),\n      date.getMilliseconds(),\n    ];\n  },\n\n  get_days_in_month(date) {\n    const no_of_days = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n\n    const month = date.getMonth();\n\n    if (month !== 1) {\n      return no_of_days[month];\n    }\n\n    // Feb\n    const year = date.getFullYear();\n    if ((year % 4 === 0 && year % 100 != 0) || year % 400 === 0) {\n      return 29;\n    }\n    return 28;\n  },\n};\n\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/padStart\nfunction padStart(str, targetLength, padString) {\n  str = str + \"\";\n  targetLength = targetLength >> 0;\n  padString = String(typeof padString !== \"undefined\" ? padString : \" \");\n  if (str.length > targetLength) {\n    return String(str);\n  } else {\n    targetLength = targetLength - str.length;\n    if (targetLength > padString.length) {\n      padString += padString.repeat(targetLength / padString.length);\n    }\n    return padString.slice(0, targetLength) + String(str);\n  }\n}\n","export function $(expr, con) {\n  return typeof expr === \"string\"\n    ? (con || document).querySelector(expr)\n    : expr || null;\n}\n\nexport function createSVG(tag, attrs) {\n  const elem = document.createElementNS(\"http://www.w3.org/2000/svg\", tag);\n  for (let attr in attrs) {\n    if (attr === \"append_to\") {\n      const parent = attrs.append_to;\n      parent.appendChild(elem);\n    } else if (attr === \"innerHTML\") {\n      elem.innerHTML = attrs.innerHTML;\n    } else if (attr === 'clipPath') {\n      elem.setAttribute('clip-path', 'url(#' + attrs[attr] + ')');\n    } else {\n      elem.setAttribute(attr, attrs[attr]);\n    }\n  }\n  return elem;\n}\n\nexport function animateSVG(svgElement, attr, from, to) {\n  const animatedSvgElement = getAnimationElement(svgElement, attr, from, to);\n\n  if (animatedSvgElement === svgElement) {\n    // triggered 2nd time programmatically\n    // trigger artificial click event\n    const event = document.createEvent(\"HTMLEvents\");\n    event.initEvent(\"click\", true, true);\n    event.eventName = \"click\";\n    animatedSvgElement.dispatchEvent(event);\n  }\n}\n\nfunction getAnimationElement(\n  svgElement,\n  attr,\n  from,\n  to,\n  dur = \"0.4s\",\n  begin = \"0.1s\",\n) {\n  const animEl = svgElement.querySelector(\"animate\");\n  if (animEl) {\n    $.attr(animEl, {\n      attributeName: attr,\n      from,\n      to,\n      dur,\n      begin: \"click + \" + begin, // artificial click\n    });\n    return svgElement;\n  }\n\n  const animateElement = createSVG(\"animate\", {\n    attributeName: attr,\n    from,\n    to,\n    dur,\n    begin,\n    calcMode: \"spline\",\n    values: from + \";\" + to,\n    keyTimes: \"0; 1\",\n    keySplines: cubic_bezier(\"ease-out\"),\n  });\n  svgElement.appendChild(animateElement);\n\n  return svgElement;\n}\n\nfunction cubic_bezier(name) {\n  return {\n    ease: \".25 .1 .25 1\",\n    linear: \"0 0 1 1\",\n    \"ease-in\": \".42 0 1 1\",\n    \"ease-out\": \"0 0 .58 1\",\n    \"ease-in-out\": \".42 0 .58 1\",\n  }[name];\n}\n\n$.on = (element, event, selector, callback) => {\n  if (!callback) {\n    callback = selector;\n    $.bind(element, event, callback);\n  } else {\n    $.delegate(element, event, selector, callback);\n  }\n};\n\n$.off = (element, event, handler) => {\n  element.removeEventListener(event, handler);\n};\n\n$.bind = (element, event, callback) => {\n  event.split(/\\s+/).forEach(function (event) {\n    element.addEventListener(event, callback);\n  });\n};\n\n$.delegate = (element, event, selector, callback) => {\n  element.addEventListener(event, function (e) {\n    const delegatedTarget = e.target.closest(selector);\n    if (delegatedTarget) {\n      e.delegatedTarget = delegatedTarget;\n      callback.call(this, e, delegatedTarget);\n    }\n  });\n};\n\n$.closest = (selector, element) => {\n  if (!element) return null;\n\n  if (element.matches(selector)) {\n    return element;\n  }\n\n  return $.closest(selector, element.parentNode);\n};\n\n$.attr = (element, attr, value) => {\n  if (!value && typeof attr === \"string\") {\n    return element.getAttribute(attr);\n  }\n\n  if (typeof attr === \"object\") {\n    for (let key in attr) {\n      $.attr(element, key, attr[key]);\n    }\n    return;\n  }\n\n  element.setAttribute(attr, value);\n};\n\n$.throttle = function (delay, noTrailing, callback, debounceMode) {\n    // After wrapper has stopped being called, this timeout ensures that\n    // `callback` is executed at the proper times in `throttle` and `end`\n    // debounce modes.\n    var timeoutID;\n\n    // Keep track of the last time `callback` was executed.\n    var lastExec = 0;\n\n    // `noTrailing` defaults to falsy.\n    if (typeof noTrailing !== 'boolean') {\n        debounceMode = callback;\n        callback = noTrailing;\n        noTrailing = undefined;\n    }\n\n    // The `wrapper` function encapsulates all of the throttling / debouncing\n    // functionality and when executed will limit the rate at which `callback`\n    // is executed.\n    function wrapper() {\n        var self = this;\n        var elapsed = Number(new Date()) - lastExec;\n        var args = arguments;\n\n        // Execute `callback` and update the `lastExec` timestamp.\n        function exec() {\n            lastExec = Number(new Date());\n            callback.apply(self, args);\n        }\n\n        // If `debounceMode` is true (at begin) this is used to clear the flag\n        // to allow future `callback` executions.\n        function clear() {\n            timeoutID = undefined;\n        }\n\n        if (debounceMode && !timeoutID) {\n            // Since `wrapper` is being called for the first time and\n            // `debounceMode` is true (at begin), execute `callback`.\n            exec();\n        }\n\n        // Clear any existing timeout.\n        if (timeoutID) {\n            clearTimeout(timeoutID);\n        }\n\n        if (debounceMode === undefined && elapsed > delay) {\n            // In throttle mode, if `delay` time has been exceeded, execute\n            // `callback`.\n            exec();\n        } else if (noTrailing !== true) {\n            // In trailing throttle mode, since `delay` time has not been\n            // exceeded, schedule `callback` to execute `delay` ms after most\n            // recent execution.\n            //\n            // If `debounceMode` is true (at begin), schedule `clear` to execute\n            // after `delay` ms.\n            //\n            // If `debounceMode` is false (at end), schedule `callback` to\n            // execute after `delay` ms.\n            timeoutID = setTimeout(\n                debounceMode ? clear : exec,\n                debounceMode === undefined ? delay - elapsed : delay,\n            );\n        }\n    }\n\n    // Return the wrapper function.\n    return wrapper;\n};\n","import date_utils from \"./date_utils\";\nimport { $, createSVG, animateSVG } from \"./svg_utils\";\n\nexport default class Bar {\n  constructor(gantt, task) {\n    this.set_defaults(gantt, task);\n    this.prepare();\n    this.draw();\n    this.bind();\n  }\n\n  set_defaults(gantt, task) {\n    this.action_completed = false;\n    this.gantt = gantt;\n    this.task = task;\n  }\n\n  prepare() {\n    this.prepare_values();\n    this.prepare_helpers();\n  }\n\n  prepare_values() {\n    this.empty = this.task.empty;\n    this.invalid = this.task.invalid;\n    this.height = this.gantt.options.bar_height;\n    this.image_size = this.height - 5;\n    this.compute_x();\n    this.compute_y();\n    this.compute_duration();\n    this.corner_radius = this.gantt.options.bar_corner_radius;\n    this.width = this.gantt.options.column_width * this.duration;\n    this.progress_width =\n      this.gantt.options.column_width *\n      this.duration *\n      (this.task.progress / 100) || 0;\n    this.group = createSVG(\"g\", {\n      class: \"bar-wrapper\" + (this.task.custom_class ? \" \" + this.task.custom_class : \"\") + (this.task.important ? ' important' : ''),\n      \"data-id\": this.task.id,\n    });\n    this.bar_group = createSVG(\"g\", {\n      class: \"bar-group\",\n      append_to: this.group,\n    });\n    this.handle_group = createSVG(\"g\", {\n      class: \"handle-group\",\n      append_to: this.group,\n    });\n  }\n\n  prepare_helpers() {\n    SVGElement.prototype.getX = function () {\n      return +this.getAttribute(\"x\");\n    };\n    SVGElement.prototype.getY = function () {\n      return +this.getAttribute(\"y\");\n    };\n    SVGElement.prototype.getWidth = function () {\n      return +this.getAttribute(\"width\");\n    };\n    SVGElement.prototype.getHeight = function () {\n      return +this.getAttribute(\"height\");\n    };\n    SVGElement.prototype.getEndX = function () {\n      return this.getX() + this.getWidth();\n    };\n  }\n\n  prepare_expected_progress_values() {\n    this.compute_expected_progress();\n    this.expected_progress_width =\n      this.gantt.options.column_width *\n      this.duration *\n      (this.expected_progress / 100) || 0;\n  }\n\n  update_bar_vertical({ offset }) {\n    // recalculate\n    this.compute_y();\n\n    if (this.empty) return;\n    // redraw-bar_group\n    Array.prototype.forEach.call(this.bar_group.children, function (el, i) {\n      const y = $.attr(el, 'y') * 1;\n      el.setAttribute('y', y + offset);\n    });\n    // redraw-thumbnail\n    if (this.task.thumbnail) {\n      const $thumbnail = this.bar_group.querySelector('#rect_' + this.task.id);\n      const y = $.attr($thumbnail, 'y') * 1;\n      $thumbnail.setAttribute('y', y + offset);\n    }\n    // redraw-handle_group\n    Array.prototype.forEach.call(this.handle_group.children, function (el, i, arr) {\n      // if (i === arr.length-1) return;\n      const y = $.attr(el, 'y') * 1;\n      el.setAttribute('y', y + offset);\n    });\n    // redraw-polygon\n    const $handle = this.$handle_progress;\n    if ($handle) {\n      $handle.setAttribute('points', this.get_progress_polygon_points());\n    }\n  }\n\n  draw() {\n    if (this.empty) return;\n    this.draw_bar();\n    this.draw_progress_bar();\n    if (this.gantt.options.show_expected_progress) {\n      this.prepare_expected_progress_values();\n      this.draw_expected_progress_bar();\n    }\n    this.draw_label();\n    this.draw_resize_handles();\n\n    if (this.task.thumbnail) {\n      this.draw_thumbnail();\n    }\n  }\n\n  draw_bar() {\n    this.$bar = createSVG(\"rect\", {\n      x: this.x,\n      y: this.y,\n      width: this.width,\n      height: this.height,\n      rx: this.corner_radius,\n      ry: this.corner_radius,\n      class: \"bar-inner\",\n      append_to: this.bar_group,\n    });\n\n    animateSVG(this.$bar, \"width\", 0, this.width);\n\n    if (this.invalid) {\n      this.$bar.classList.add(\"bar-invalid\");\n    }\n  }\n\n  draw_expected_progress_bar() {\n    if (this.invalid) return;\n    this.$expected_bar_progress = createSVG(\"rect\", {\n      x: this.x,\n      y: this.y,\n      width: this.expected_progress_width,\n      height: this.height,\n      rx: this.corner_radius,\n      ry: this.corner_radius,\n      class: \"bar-expected-progress\",\n      append_to: this.bar_group,\n    });\n\n    animateSVG(\n      this.$expected_bar_progress,\n      \"width\",\n      0,\n      this.expected_progress_width,\n    );\n  }\n\n  draw_progress_bar() {\n    if (this.invalid) return;\n    this.$bar_progress = createSVG(\"rect\", {\n      x: this.x,\n      y: this.y,\n      width: this.progress_width,\n      height: this.height,\n      rx: this.corner_radius,\n      ry: this.corner_radius,\n      class: \"bar-progress\",\n      append_to: this.bar_group,\n    });\n    animateSVG(this.$bar_progress, \"width\", 0, this.progress_width);\n  }\n\n  draw_label() {\n    let x_coord = this.x + this.$bar.getWidth() / 2;\n\n    if (this.task.thumbnail) {\n      x_coord = this.x + 10 + this.image_size + 5;\n    }\n\n    createSVG(\"text\", {\n      x: x_coord,\n      y: this.y + this.height / 2,\n      innerHTML: this.task.name,\n      class: \"bar-label\",\n      append_to: this.bar_group,\n    });\n    // labels get BBox in the next tick\n    requestAnimationFrame(() => this.update_label_position());\n  }\n\n  draw_thumbnail() {\n    let x_offset = 10, y_offset = 2;\n    let defs, clipPath;\n\n    defs = createSVG('defs', {\n      append_to: this.bar_group\n    });\n\n    createSVG('rect', {\n      id: 'rect_' + this.task.id,\n      x: this.x + x_offset,\n      y: this.y + y_offset,\n      width: this.image_size,\n      height: this.image_size,\n      rx: '15',\n      class: 'img_mask',\n      append_to: defs\n    });\n\n    clipPath = createSVG('clipPath', {\n      id: 'clip_' + this.task.id,\n      append_to: defs\n    });\n\n    createSVG('use', {\n      href: '#rect_' + this.task.id,\n      append_to: clipPath\n    });\n\n    createSVG('image', {\n      x: this.x + x_offset,\n      y: this.y + y_offset,\n      width: this.image_size,\n      height: this.image_size,\n      class: 'bar-img',\n      href: this.task.thumbnail,\n      clipPath: 'clip_' + this.task.id,\n      append_to: this.bar_group\n    });\n  }\n\n  draw_resize_handles() {\n    if (this.invalid || this.gantt.options.readonly) return;\n\n    const bar = this.$bar;\n    const handle_width = this.gantt.options.handle_width;\n\n    const gw = bar.getWidth();\n\n    createSVG(\"rect\", {\n      x: bar.getX() + (gw > handle_width ? (gw - handle_width - 1) : (gw + handle_width)),\n      y: bar.getY() + 1,\n      width: handle_width,\n      height: this.height - 2,\n      rx: this.corner_radius,\n      ry: this.corner_radius,\n      class: \"handle right\",\n      append_to: this.handle_group,\n    });\n\n    createSVG(\"rect\", {\n      x: bar.getX() + 1,\n      y: bar.getY() + 1,\n      width: handle_width,\n      height: this.height - 2,\n      rx: this.corner_radius,\n      ry: this.corner_radius,\n      class: \"handle left\",\n      append_to: this.handle_group,\n    });\n\n    if (this.gantt.options.drag_bar_progress) {\n      this.$handle_progress = createSVG('polygon', {\n        points: this.get_progress_polygon_points().join(','),\n        class: 'handle progress',\n        append_to: this.handle_group,\n      });\n    }\n  }\n\n  get_progress_polygon_points() {\n    const bar_progress = this.$bar_progress;\n    let icon_width = 10;\n    let icon_height = 15;\n\n    return [\n      bar_progress.getEndX() - icon_width / 2,\n      bar_progress.getY() + bar_progress.getHeight() / 2,\n\n      bar_progress.getEndX(),\n      bar_progress.getY() + bar_progress.getHeight() / 2 - icon_height / 2,\n\n      bar_progress.getEndX() + icon_width / 2,\n      bar_progress.getY() + bar_progress.getHeight() / 2,\n\n      bar_progress.getEndX(),\n      bar_progress.getY() + bar_progress.getHeight() / 2 + icon_height / 2,\n\n      bar_progress.getEndX() - icon_width / 2,\n      bar_progress.getY() + bar_progress.getHeight() / 2,\n    ];\n  }\n\n  bind() {\n    if (this.invalid) return;\n    this.setup_click_event();\n  }\n\n  setup_click_event() {\n    $.on(this.group, \"mouseover\", (e) => {\n      this.gantt.trigger_event(\"hover\", [this.task, e.screenX, e.screenY, e])\n    })\n\n    let timeout;\n    $.on(this.group, \"mouseenter\", (e) => timeout = setTimeout(() => {\n      const scrollLeft = this.gantt.$container_main.scrollLeft;\n      this.show_popup(e.offsetX - scrollLeft);\n    }, 200))\n\n    $.on(this.group, \"mouseleave\", () => {\n      clearTimeout(timeout)\n      this.gantt.hide_popup();\n    })\n\n    $.on(this.group, 'click', () => {\n      this.gantt.trigger_event(\"click\", [this.task]);\n    });\n\n    $.on(this.group, \"dblclick\", (e) => {\n      if (this.action_completed) {\n        // just finished a move action, wait for a few seconds\n        return;\n      }\n\n      this.gantt.trigger_event(\"double_click\", [this.task]);\n    });\n  }\n\n  show_popup(x) {\n    if (this.gantt.bar_being_dragged) return;\n\n    const start_date = date_utils.format(\n      this.task._start,\n      \"MM月DD日\",\n      this.gantt.options.language,\n    );\n    const end_date = date_utils.format(\n      date_utils.add(this.task._end, -1, \"second\"),\n      \"MM月DD日\",\n      this.gantt.options.language,\n    );\n    const subtitle = `${start_date} -  ${end_date}<br/>Progress: ${this.task.progress}`;\n\n    this.gantt.show_popup({\n      x,\n      target_element: this.$bar,\n      title: this.task.name,\n      subtitle: subtitle,\n      task: this.task,\n    });\n  }\n\n  update_bar_position({ x = null, width = null }) {\n    const bar = this.$bar;\n    if (x) {\n      if (this.gantt.options.drag_limit_child) {\n        // get all x values of parent task\n        const xs = this.task.dependencies.map((dep) => {\n          return this.gantt.get_bar(dep).$bar.getX();\n        });\n        // child task must not go before parent\n        const valid_x = xs.reduce((_, curr) => {\n          return x >= curr;\n        }, x);\n\n        if (!valid_x) {\n          width = null;\n          return;\n        }\n      }\n\n      this.update_attr(bar, \"x\", x);\n      if (this.$date_highlight) this.$date_highlight.style.left = x + 'px';\n    }\n    if (width) {\n      this.update_attr(bar, \"width\", width);\n      if (this.$date_highlight) this.$date_highlight.style.width = width + 'px';\n    }\n    this.update_label_position();\n    this.update_handle_position();\n    if (this.gantt.options.show_expected_progress) {\n      this.date_changed();\n      this.compute_duration();\n      this.update_expected_progressbar_position();\n    }\n    this.update_progressbar_position();\n    this.update_arrow_position();\n  }\n\n  update_label_position_on_horizontal_scroll({ x, sx }) {\n    const container = document.querySelector('.gantt-container');\n    const label = this.group.querySelector('.bar-label');\n    const img = this.group.querySelector('.bar-img') || '';\n    const img_mask = this.bar_group.querySelector('.img_mask') || '';\n\n    let barWidthLimit = this.$bar.getX() + this.$bar.getWidth();\n    let newLabelX = label.getX() + x;\n    let newImgX = img && img.getX() + x || 0;\n    let imgWidth = img && img.getBBox().width + 7 || 7;\n    let labelEndX = newLabelX + label.getBBox().width + 7;\n    let viewportCentral = sx + container.clientWidth / 2;\n\n    if (label.classList.contains('big')) return;\n\n    if (labelEndX < barWidthLimit && x > 0 && labelEndX < viewportCentral) {\n      label.setAttribute('x', newLabelX);\n      if (img) {\n        img.setAttribute('x', newImgX);\n        img_mask.setAttribute('x', newImgX);\n      }\n    } else if ((newLabelX - imgWidth) > this.$bar.getX() && x < 0 && labelEndX > viewportCentral) {\n      label.setAttribute('x', newLabelX);\n      if (img) {\n        img.setAttribute('x', newImgX);\n        img_mask.setAttribute('x', newImgX);\n      }\n\n    }\n  }\n\n  date_changed() {\n    let changed = false;\n    const { new_start_date, new_end_date } = this.compute_start_end_date();\n\n    if (Number(this.task._start) !== Number(new_start_date)) {\n      changed = true;\n      this.task._start = new_start_date;\n    }\n\n    if (Number(this.task._end) !== Number(new_end_date)) {\n      changed = true;\n      this.task._end = new_end_date;\n    }\n\n    if (!changed) return;\n\n    // TODO out of limit to redraw\n    // if (\n    //     new_start_date < this.gantt.gantt_start ||\n    //     new_end_date > this.gantt.gantt_end\n    // ) {\n    //     this.gantt.refresh_view_date();\n    //     return;\n    // }\n\n    this.gantt.trigger_event(\"date_change\", [\n      this.task,\n      new_start_date,\n      date_utils.add(new_end_date, -1, \"second\"),\n    ]);\n  }\n\n  progress_changed() {\n    const new_progress = this.compute_progress();\n    this.task.progress = new_progress;\n    this.gantt.trigger_event(\"progress_change\", [this.task, new_progress]);\n  }\n\n  set_action_completed() {\n    this.action_completed = true;\n    setTimeout(() => (this.action_completed = false), 1000);\n  }\n\n  compute_start_end_date() {\n    const bar = this.$bar;\n    const x_in_units = bar.getX() / this.gantt.options.column_width;\n    const new_start_date = date_utils.add(\n      this.gantt.gantt_start,\n      x_in_units * this.gantt.options.step,\n      \"hour\",\n    );\n    const width_in_units = bar.getWidth() / this.gantt.options.column_width;\n    const new_end_date = date_utils.add(\n      new_start_date,\n      width_in_units * this.gantt.options.step,\n      \"hour\",\n    );\n\n    return { new_start_date, new_end_date };\n  }\n\n  compute_progress() {\n    const progress =\n      (this.$bar_progress.getWidth() / this.$bar.getWidth()) * 100;\n    return parseInt(progress, 10);\n  }\n\n  compute_expected_progress() {\n    this.expected_progress =\n      date_utils.diff(date_utils.today(), this.task._start, \"hour\") /\n      this.gantt.options.step;\n    // 未到当前日期\n    if (this.expected_progress < 0) {\n      this.expected_progress = 0;\n    }\n    this.expected_progress =\n      ((this.expected_progress < this.duration\n        ? this.expected_progress\n        : this.duration) *\n        100) /\n      this.duration;\n  }\n\n  compute_x() {\n    const { step, column_width } = this.gantt.options;\n    const task_start = this.task._start;\n    const gantt_start = this.gantt.gantt_start;\n\n    const diff = date_utils.diff(task_start, gantt_start, \"hour\");\n    let x = (diff / step) * column_width;\n\n    if (this.gantt.view_is(\"Month\")) {\n      const diff = date_utils.diff(task_start, gantt_start, \"day\");\n      x = (diff * column_width) / 30;\n    }\n    this.x = x;\n  }\n\n  compute_y() {\n    // this.y =\n    //   this.gantt.options.header_height +\n    //   this.gantt.options.padding / 2 +\n    //   this.task._index * (this.height + this.gantt.options.padding);\n    this.y = this.gantt.options.padding / 2 +\n      this.task._index * (this.height + this.gantt.options.padding);\n  }\n\n  compute_duration() {\n    this.duration =\n      date_utils.diff(this.task._end, this.task._start, \"hour\") /\n      this.gantt.options.step;\n  }\n\n  get_snap_position(dx) {\n    let odx = dx,\n      rem,\n      position;\n\n    if (this.gantt.view_is(\"Week\")) {\n      rem = dx % (this.gantt.options.column_width / 7);\n      position =\n        odx -\n        rem +\n        (rem < this.gantt.options.column_width / 14\n          ? 0\n          : this.gantt.options.column_width / 7);\n    } else if (this.gantt.view_is(\"Month\")) {\n      rem = dx % (this.gantt.options.column_width / 30);\n      position =\n        odx -\n        rem +\n        (rem < this.gantt.options.column_width / 60\n          ? 0\n          : this.gantt.options.column_width / 30);\n    } else {\n      rem = dx % this.gantt.options.column_width;\n      position =\n        odx -\n        rem +\n        (rem < this.gantt.options.column_width / 2\n          ? 0\n          : this.gantt.options.column_width);\n    }\n    return position;\n  }\n\n  update_attr(element, attr, value) {\n    value = +value;\n    if (!isNaN(value)) {\n      element.setAttribute(attr, value);\n    }\n    return element;\n  }\n\n  update_expected_progressbar_position() {\n    if (this.invalid) return;\n    this.$expected_bar_progress.setAttribute(\"x\", this.$bar.getX());\n    this.compute_expected_progress();\n    this.$expected_bar_progress.setAttribute(\n      \"width\",\n      this.gantt.options.column_width *\n      this.duration *\n      (this.expected_progress / 100) || 0,\n    );\n  }\n\n  update_progressbar_position() {\n    if (this.invalid || this.gantt.options.readonly) return;\n    this.$bar_progress.setAttribute(\"x\", this.$bar.getX());\n    this.$bar_progress.setAttribute(\n      \"width\",\n      this.$bar.getWidth() * (this.task.progress / 100),\n    );\n  }\n\n  update_label_position() {\n    const img_mask = this.bar_group.querySelector('.img_mask') || '';\n    const bar = this.$bar,\n      label = this.group.querySelector(\".bar-label\"),\n      img = this.group.querySelector('.bar-img');\n\n\n    let padding = 10;\n    let x_offset_label_img = this.image_size + 5;\n    const labelWidth = label.getBBox().width\n    const barWidth = bar.getWidth()\n    if (labelWidth > barWidth) {\n      label.classList.add(\"big\");\n      if (img) {\n        img.setAttribute('x', bar.getX() + barWidth + padding);\n        img_mask.setAttribute('x', bar.getX() + barWidth + padding);\n        label.setAttribute('x', bar.getX() + barWidth + x_offset_label_img);\n      } else {\n        label.setAttribute('x', bar.getX() + barWidth + padding);\n      }\n    } else {\n      label.classList.remove(\"big\");\n      if (img) {\n        img.setAttribute('x', bar.getX() + padding);\n        img_mask.setAttribute('x', bar.getX() + padding);\n        label.setAttribute('x', bar.getX() + padding + x_offset_label_img);\n      } else {\n        label.setAttribute('x', bar.getX() + barWidth / 2 - labelWidth / 2);\n      }\n    }\n  }\n\n  update_handle_position() {\n    if (this.invalid || this.gantt.options.readonly) return;\n    const bar = this.$bar;\n    const handle_width = this.gantt.options.handle_width;\n\n    this.handle_group\n      .querySelector(\".handle.left\")\n      .setAttribute(\"x\", bar.getX() + 1);\n    this.handle_group\n      .querySelector(\".handle.right\")\n      .setAttribute(\"x\", bar.getEndX() - handle_width - 1);\n    const handle = this.handle_group.querySelector('.handle.progress');\n    handle && handle.setAttribute(\"points\", this.get_progress_polygon_points());\n  }\n\n  update_arrow_position() {\n    this.arrows = this.arrows || [];\n    for (let arrow of this.arrows) {\n      arrow.update();\n    }\n  }\n}\n\nfunction isFunction(functionToCheck) {\n  let getType = {};\n  return (\n    functionToCheck &&\n    getType.toString.call(functionToCheck) === \"[object Function]\"\n  );\n}\n","import { createSVG } from \"./svg_utils\";\n\nexport default class Arrow {\n  constructor(gantt, from_task, to_task) {\n    this.gantt = gantt;\n    this.from_task = from_task;\n    this.to_task = to_task;\n\n    this.calculate_path();\n    this.draw();\n    this.drawInner();\n  }\n\n  calculate_path() {\n    if (this.from_task.empty || this.to_task.empty) return;\n\n    const rowHeight = this.gantt.options.bar_height + this.gantt.options.padding;\n    const taskHeight = this.gantt.options.bar_height;\n    const arrowCurve = this.gantt.options.arrow_curve;\n    const arrowIndent = this.gantt.options.column_width / 2;\n    const taskFrom = this.from_task;\n    const taskTo = this.to_task;\n\n    const taskFromX2 = taskFrom.$bar.getEndX();\n    const taskFromY1 = taskFrom.$bar.getY();\n    const taskToX1 = taskTo.$bar.getX();\n    const taskToY1 = taskTo.$bar.getY();\n\n    const indexCompare = taskFrom.task._index > taskTo.task._index ? -1 : 1;\n    const taskToEndPosition = taskToY1 + taskHeight / 2;\n    const taskFromEndPosition = taskFromX2 + arrowIndent * 2;\n\n    const taskFromHorizontalOffsetValue =\n        taskFromEndPosition < taskToX1 ? '' : `H ${taskToX1 - arrowIndent}`;\n    const taskToHorizontalOffsetValue =\n        taskFromEndPosition > taskToX1\n            ? arrowIndent\n            : taskToX1 - taskFromX2 - arrowIndent;\n\n    const path = `M ${taskFromX2} ${taskFromY1 + taskHeight / 2}\n    h ${arrowIndent}\n    v ${(indexCompare * rowHeight) / 2}\n    ${taskFromHorizontalOffsetValue}\n    V ${taskToEndPosition}\n    h ${taskToHorizontalOffsetValue}`;\n\n    const trianglePoints = `${taskToX1},${taskToEndPosition}\n    ${taskToX1 - arrowCurve},${taskToEndPosition - arrowCurve}\n    ${taskToX1 - arrowCurve},${taskToEndPosition + arrowCurve}`;\n\n    this.path = path;\n\n    this.points = trianglePoints;\n  }\n\n  draw() {\n    this.element = createSVG(\"g\", {\n      \"data-from\": this.from_task.task.id,\n      \"data-to\": this.to_task.task.id,\n    });\n  }\n\n  drawInner() {\n    if (this.from_task.empty || this.to_task.empty) return;\n\n    this.svgPath = createSVG(\"path\", {\n      d: this.path,\n      fill: \"none\",\n      append_to: this.element\n    });\n    this.svgPolygon = createSVG(\"polygon\", {\n      points: this.points,\n      append_to: this.element,\n    });\n  }\n\n  update() {\n    if (this.from_task.empty || this.to_task.empty) return;\n\n    this.calculate_path();\n    this.svgPath.setAttribute(\"d\", this.path);\n    this.svgPolygon.setAttribute(\"points\", this.points);\n  }\n}\n","export default class Popup {\n  constructor(gantt, parent) {\n    this.gantt = gantt;\n    this.parent = parent;\n    this.custom_html = gantt.options.popup;\n    this.make();\n  }\n\n  make() {\n    this.parent.innerHTML = `\n        <div class=\"title\"></div>\n        <div class=\"subtitle\"></div>\n        <div class=\"pointer\"></div>\n    `;\n\n    this.hide();\n\n    this.title = this.parent.querySelector(\".title\");\n    this.subtitle = this.parent.querySelector(\".subtitle\");\n    this.pointer = this.parent.querySelector(\".pointer\");\n  }\n\n  show(options) {\n    if (!options.target_element) {\n      throw new Error(\"target_element is required to show popup\");\n    }\n    const target_element = options.target_element;\n\n    if (typeof this.custom_html === 'function') {\n      let html = this.custom_html(options.task);\n      html += '<div class=\"pointer\"></div>';\n      this.parent.innerHTML = html;\n      this.pointer = this.parent.querySelector(\".pointer\");\n    } else {\n      // set data\n      this.title.innerHTML = options.title;\n      this.subtitle.innerHTML = options.subtitle;\n    }\n\n    // set position\n    let position_meta;\n    if (target_element instanceof HTMLElement) {\n      position_meta = target_element.getBoundingClientRect();\n    } else if (target_element instanceof SVGElement) {\n      position_meta = target_element.getBBox();\n    }\n    const parentWidth = this.parent.clientWidth;\n    const parentHeight = this.parent.clientHeight;\n    const ganttOptions = this.gantt.options;\n    const ganttWidth = this.gantt.$container.clientWidth;\n    const ganttHeight = this.gantt.$container.clientHeight;\n\n    // get position\n    let pos_x = options.x - parentWidth / 2;\n    let pos_y = position_meta.y + position_meta.height + ganttOptions.header_height + 10;\n\n    if (pos_y > ganttHeight - parentHeight) {\n      pos_y = position_meta.y - parentHeight - 10 + ganttOptions.header_height;\n    }\n\n    if (pos_x > ganttWidth - parentWidth) {\n      console.log(\"ddd ==> out x\");\n      const diff = pos_x - (ganttWidth - parentWidth - 5);\n      pos_x -= diff;\n    }\n\n    this.parent.style.left = pos_x + \"px\";\n    this.parent.style.top = pos_y + \"px\";\n\n    this.pointer.style.left = parentWidth / 2 + 'px';\n    this.pointer.style.top = \"-15px\";\n\n    // show\n    this.parent.style.opacity = 1;\n  }\n\n  hide() {\n    this.parent.style.opacity = 0;\n    this.parent.style.left = 0;\n  }\n}\n","export default class Backdrop {\n  constructor(parent) {\n    this.parent = parent;\n    this.make();\n  }\n\n  make() {\n    this.parent.innerHTML = `\n      <div class=\"gantt-drag-mask\">\n        <div class=\"date-range\"></div>\n      </div>\n    `;\n\n    // this.hide();\n\n    this.drag_mask = this.parent.querySelector('.gantt-drag-mask');\n    this.date_range = this.parent.querySelector('.date-range');\n  }\n\n  showAt({ x, width, range }) {\n    if (range && range.length) {\n      const htmlHold = `<span>${range[0]}</span><span>${range[1]}</span>`;\n      this.date_range.innerHTML = htmlHold;\n    }\n\n    this.drag_mask.style.left = x + 'px';\n    this.drag_mask.style.width = width + 'px';\n\n    this.show();\n  }\n\n  show() {\n    this.parent.style.display = 'block';\n    this.drag_mask.style.display = 'block';\n  }\n\n  hide() {\n    this.parent.style.display = \"none\";\n    this.drag_mask.style.display = \"none\";\n  }\n}","import date_utils from \"./date_utils\";\nimport { $, createSVG } from \"./svg_utils\";\nimport Bar from \"./bar\";\nimport Arrow from \"./arrow\";\nimport Popup from \"./popup\";\n\nimport \"./gantt.scss\";\nimport Backdrop from \"./backdrop\";\n\nconst VIEW_MODE = {\n  HOUR: \"Hour\",\n  QUARTER_DAY: \"Quarter Day\",\n  HALF_DAY: \"Half Day\",\n  DAY: \"Day\",\n  WEEK: \"Week\",\n  MONTH: \"Month\",\n  QUARTER_YEAR: \"Quarter Year\",\n  YEAR: \"Year\",\n};\n\nconst VIEW_MODE_PADDING = {\n  HOUR: [\"7d\", \"7d\"],\n  QUARTER_DAY: [\"7d\", \"7d\"],\n  HALF_DAY: [\"7d\", \"7d\"],\n  DAY: [\"1m\", \"1m\"],\n  WEEK: [\"1m\", \"1m\"],\n  MONTH: [\"1y\", \"1y\"],\n  QUARTER_YEAR: [\"1y\", \"1y\"],\n  YEAR: [\"2y\", \"2y\"],\n};\n\nconst TICK_LINE = {\n  BOTH: \"both\",\n  HORIZONTAL: \"horizontal\",\n  VERTICAL: \"vertical\",\n}\n\nconst DEFAULT_OPTIONS = {\n  header_height: 65,\n  // column_width: 30,\n  // step: 24,\n  bar_height: 30,\n  bar_corner_radius: 3,\n  arrow_curve: 5,\n  handle_width: 8,\n  padding: 18,\n  view_modes: [...Object.values(VIEW_MODE)],\n  view_mode: VIEW_MODE.DAY,\n  date_format: \"YYYY-MM-DD\",\n  popup_trigger: \"click\",\n  show_expected_progress: false,\n  dependencies: \"arrow\",\n  drag_bar_progress: true,\n  drag_sync_child: false,\n  drag_limit_child: false,\n  popup: null,\n  language: \"en\",\n  readonly: false,\n  highlight_weekend: true,\n  scroll_to: 'start',\n  lines: TICK_LINE.BOTH,\n  auto_move_label: true,\n  today_button: true,\n  view_mode_select: false,\n};\n\nexport default class Gantt {\n  constructor(wrapper, tasks, options) {\n    this.setup_wrapper(wrapper);\n    this.setup_options(options);\n    this.setup_tasks(tasks);\n    // initialize with default view mode\n    this.change_view_mode();\n    this.bind_events();\n  }\n\n  setup_wrapper(element) {\n      let svg_element, wrapper_element;\n\n      // CSS Selector is passed\n      if (typeof element === 'string') {\n          element = document.querySelector(element);\n      }\n\n      // get the SVGElement\n      if (element instanceof HTMLElement) {\n          wrapper_element = element;\n          svg_element = element.querySelector('svg');\n      } else if (element instanceof SVGElement) {\n          svg_element = element;\n      } else {\n          throw new TypeError(\n              'Frappé Gantt only supports usage of a string CSS selector,' +\n                  \" HTML DOM element or SVG DOM element for the 'element' parameter\",\n          );\n      }\n\n      // svg element\n      if (!svg_element) {\n          // create it\n          this.$svg = createSVG('svg', {\n              append_to: wrapper_element,\n              class: 'gantt',\n          });\n      } else {\n          this.$svg = svg_element;\n          this.$svg.classList.add('gantt');\n      }\n\n      // container element\n      this.$container = document.createElement('div');\n      this.$container.classList.add('gantt-container');\n\n      // 1.header horizontal-scroll\n      this.$container_header = document.createElement('div');\n      this.$container_header.classList.add('gantt-container_header');\n      this.$container.appendChild(this.$container_header);\n\n      // 2.main vertical-scroll\n      this.$container_main = document.createElement('div');\n      this.$container_main.classList.add('gantt-container_main');\n      this.$container.appendChild(this.$container_main);\n\n      // 3. svg appendTo wrapper\n      const parent_element = this.$svg.parentElement;\n      parent_element.appendChild(this.$container);\n      this.$container_main.appendChild(this.$svg);\n\n      // 4. toobar wrapper\n      this.$container_toolbar = document.createElement('div');\n      this.$container_toolbar.classList.add('gantt-container_toolbar');\n      this.$container.appendChild(this.$container_toolbar);\n\n      // 5.popup wrapper\n      this.$popup_wrapper = document.createElement('div');\n      this.$popup_wrapper.classList.add('gantt-popup-wrapper');\n      this.$container.appendChild(this.$popup_wrapper);\n\n      // 6.backdrop wrapper\n      this.$drag_backdrop = document.createElement('div');\n      this.$drag_backdrop.classList.add('gantt-drag-backdrop');\n      this.$container.appendChild(this.$drag_backdrop);\n  }\n\n  setup_options(options) {\n    this.options = { ...DEFAULT_OPTIONS, ...options }\n    if (!options.view_mode_padding) options.view_mode_padding = {}\n    for (let [key, value] of Object.entries(options.view_mode_padding)) {\n      if (typeof value === \"string\") {\n        // Configure for single value given\n        options.view_mode_padding[key] = [value, value];\n      }\n    }\n\n    this.options.view_mode_padding = {\n      ...VIEW_MODE_PADDING,\n      ...options.view_mode_padding,\n    };\n  }\n\n  setup_tasks(tasks) {\n    // prepare tasks\n    this.tasks = tasks.map((task, i) => {\n      return this.format_task(task, i);\n    });\n\n    this.setup_dependencies();\n  }\n\n  setup_dependencies() {\n    this.dependency_map = {};\n    for (let t of this.tasks) {\n      for (let d of t.dependencies) {\n        this.dependency_map[d] = this.dependency_map[d] || [];\n        this.dependency_map[d].push(t.id);\n      }\n    }\n  }\n\n  format_task(task, i) {\n    // reset symbol\n    task.empty = false;\n    task.invalid = false;\n\n    // convert to Date objects\n    task._start = date_utils.parse(task.start);\n    if (task.end === undefined && task.duration !== undefined) {\n      task.end = task._start;\n      let durations = task.duration.split(\" \");\n\n      durations.forEach((tmpDuration) => {\n        let { duration, scale } = date_utils.parse_duration(tmpDuration);\n        task.end = date_utils.add(task.end, duration, scale);\n      });\n    }\n    task._end = date_utils.parse(task.end);\n    let diff = date_utils.diff(task._end, task._start, \"year\");\n    if (diff < 0) {\n      throw Error(\"start of task can't be after end of task: in task #, \" + (i + 1))\n    }\n    // make task invalid if duration too large\n    if (date_utils.diff(task._end, task._start, \"year\") > 10) {\n      task.end = null;\n    }\n\n\n    // cache index\n    task._index = i;\n\n    // empty flag\n    if (!task.start && !task.end) {\n      task._start = null;\n      task._end = null;\n      task.empty = true;\n      // const today = date_utils.today();\n      // task._start = today;\n      // task._end = date_utils.add(today, 2, \"day\");\n    }\n\n    if (!task.start && task.end) {\n      task._start = date_utils.add(task._end, -2, \"day\");\n    }\n\n    if (task.start && !task.end) {\n      task._end = date_utils.add(task._start, 2, \"day\");\n    }\n\n    // if hours is not set, assume the last day is full day\n    // e.g: 2018-09-09 becomes 2018-09-09 23:59:59\n    if (task._end) {\n      const task_end_values = date_utils.get_date_values(task._end);\n      if (task_end_values.slice(3).every((d) => d === 0)) {\n        task._end = date_utils.add(task._end, 24, \"hour\");\n      }\n    }\n\n    // invalid flag\n    if (!task.start) {\n      task.invalid = 'start';\n    }\n    if (!task.end) {\n      task.invalid = 'end';\n    }\n    if (!task.start && !task.end) {\n      task.invalid = true;\n    }\n\n    // dependencies\n    if (typeof task.dependencies === \"string\" || !task.dependencies) {\n      let deps = [];\n      if (task.dependencies) {\n        deps = task.dependencies\n          .split(\",\")\n          .map((d) => d.trim().replaceAll(' ', '_'))\n          .filter((d) => d);\n      }\n      task.dependencies = deps;\n    }\n\n    // uids\n    if (!task.id) {\n      task.id = generate_id(task);\n    } else if (typeof task.id === 'string') {\n      task.id = task.id.replaceAll(' ', '_')\n    } else {\n      task.id = `${task.id}`\n    }\n    return task;\n  }\n\n  refresh(tasks) {\n    this.setup_tasks(tasks);\n    this.change_view_mode();\n  }\n\n  // TODO 无绘制点时\n  update(task) {\n    const original = this.get_task(task.id);\n    const bar = this.get_bar(task.id);\n    if (task.start) {\n      // left\n      const start_date = date_utils.parse(task.start);\n      const dx =\n          (date_utils.diff(original._start, start_date, 'hour') /\n              this.options.step) *\n          this.options.column_width;\n      console.log('ddd ==> left dx', original._start, start_date, dx);\n\n      bar.update_bar_position({\n          x: bar.$bar.getX() - dx,\n          width: bar.$bar.getWidth() + dx,\n      });\n      original._start = start_date;\n    }\n    if (task.end) {\n      // right\n      const end_date = date_utils.parse(task.end);\n      const dx =\n          (date_utils.diff(original._end, end_date, 'hour') /\n              this.options.step) *\n          this.options.column_width;\n      console.log('ddd ==> right dx', original._end, end_date, dx);\n      bar.update_bar_position({\n        width: bar.$bar.getWidth() - dx,\n      });\n      original._end = end_date;\n    }\n  }\n\n  // TODO 支持多条\n  remove(task) {\n    let index = null;\n    if (typeof task === 'object') {\n      const tid = `${task.id}`.replaceAll(' ', '_');\n      index = this.tasks.findIndex((item) => item.id === tid);\n    } else {\n      index = task;\n    }\n    if (index === -1 || index >= this.tasks.length) return;\n    const row_height = this.options.bar_height + this.options.padding;\n\n    // remove tasks bars\n    const remove_bar = this.bars[index];\n    this.layers.bar.removeChild(remove_bar.group);\n    this.tasks.splice(index, 1);\n    this.bars.splice(index, 1);\n\n    // resort task._index\n    let i = index;\n    while (i < this.tasks.length) {\n      this.tasks[i]._index = i;\n      this.bars[i].update_bar_vertical({ offset: -row_height });\n      i+=1;\n    }\n\n    // remove grid-row row-line\n    const rows = this.layers.grid.querySelector('.rows_layer');\n    rows.lastChild && rows.removeChild(rows.lastChild);\n    const lines = this.layers.grid.querySelector('.lines_layer');\n    lines.lastChild && lines.removeChild(lines.lastChild);\n\n    // redraw Arrow\n    this.layers.arrow.innerHTML = \"\";\n    this.make_arrows();\n    this.map_arrows_on_bars();\n\n    // update grid_height\n    const grid_height = this.tasks.length * row_height;\n    this.$svg.setAttribute(\"height\", grid_height);\n    this.$svg.querySelector(\".grid-background\").setAttribute(\"height\", grid_height);\n\n    if (this.$today_overlay) {\n      this.$today_overlay.style.height = grid_height + 'px';\n    }\n  }\n\n  // TODO 支持多条\n  insert(task, index) {\n    let target;\n    if (index === undefined) {\n      target = this.tasks.length; // 默认队尾\n    } else if (typeof index === 'object') {\n      target = this.tasks.findIndex(task => task.id === index.id); // 指定元素\n      target += 1; // 其后\n    } else {\n      target = index; // 指定位置\n    }\n    const insert_task = this.format_task(task, target)\n    // resort task._index\n    let i = target;\n    while (i < this.tasks.length) {\n        this.tasks[i]._index = i + 1;\n        i += 1;\n    }\n    // insert task target\n    this.tasks.splice(target, 0, insert_task);\n    this.setup_dependencies();\n\n    // calculate date_start date_end\n    let date_limit = false;\n    if (insert_task._start && insert_task._start < this.gantt_start) {\n      date_limit = true;\n    }\n    if (insert_task._end && insert_task._end > this.gantt_end) {\n      date_limit = true;\n    }\n    if (date_limit) {\n      // need redraw\n      console.log('ddd ==> insert-refresh');\n      this.refresh_view_date();\n      return;\n    }\n    console.log('ddd ==> insert-tasks', target, this.tasks);\n\n    // update bars y\n    const row_height = this.options.bar_height + this.options.padding;\n    i = target;\n    while (i < this.bars.length) {\n      this.bars[i].update_bar_vertical({ offset: row_height });\n      i+=1;\n    }\n\n    // insert new Bar\n    const insert_bar = new Bar(this, insert_task);\n    const target_bar = this.bars[target + 1];\n    this.layers.bar.insertBefore(insert_bar.group, target_bar ? target_bar.group : null);\n    this.bars.splice(target, 0, insert_bar);\n\n    // append grid-row\n    const row_width = this.dates.length * this.options.column_width;\n    const insert_y = (this.tasks.length - 1) * row_height;\n    const $grid_el = this.layers.grid;\n    createSVG('rect', {\n      x: 0,\n      y: insert_y,\n      width: row_width,\n      height: row_height,\n      class: 'grid-row',\n      append_to: $grid_el.querySelector('.rows_layer'),\n    });\n    // append row-line\n    if ($grid_el.querySelector('.lines_layer')) {\n      if (this.options.lines !== TICK_LINE.VERTICAL) {\n        createSVG(\"line\", {\n          x1: 0,\n          y1: insert_y,\n          x2: row_width,\n          y2: insert_y,\n          class: \"row-line\",\n          append_to: $grid_el.querySelector('.lines_layer'),\n        });\n      }\n    }\n\n    // redraw Arrow\n    this.layers.arrow.innerHTML = \"\";\n    this.make_arrows();\n    this.map_arrows_on_bars();\n\n    // update grid_height\n    const grid_height = this.tasks.length * row_height;\n    this.$svg.setAttribute(\"height\", grid_height);\n    this.$svg.querySelector(\".grid-background\").setAttribute(\"height\", grid_height);\n\n    if (this.$today_overlay) {\n      this.$today_overlay.style.height = grid_height + 'px';\n    }\n  }\n\n  refresh_view_date() {\n    this.setup_dates();\n    this.render();\n    this.trigger_event(\"date_refresh\");\n  }\n\n  change_view_mode(mode = this.options.view_mode) {\n    this.update_view_scale(mode);\n    this.setup_dates();\n    this.render();\n    // fire viewmode_change event\n    this.trigger_event(\"view_change\", [mode]);\n  }\n\n  update_view_scale(view_mode) {\n    this.options.view_mode = view_mode;\n    if (view_mode === VIEW_MODE.HOUR) {\n      this.options.step = 24 / 24;\n      this.options.column_width = 38;\n    } else if (view_mode === VIEW_MODE.QUARTER_DAY) {\n      this.options.step = 24 / 4;\n      this.options.column_width = 38;\n    } else if (view_mode === VIEW_MODE.HALF_DAY) {\n      this.options.step = 24 / 2;\n      this.options.column_width = 38;\n    } else if (view_mode === VIEW_MODE.DAY) {\n      this.options.step = 24;\n      this.options.column_width = 38;\n    } else if (view_mode === VIEW_MODE.WEEK) {\n      this.options.step = 24 * 7;\n      this.options.column_width = 140;\n    } else if (view_mode === VIEW_MODE.MONTH) {\n      this.options.step = 24 * 30;\n      this.options.column_width = 280;\n    } else if (view_mode === VIEW_MODE.QUARTER_YEAR) {\n      this.options.step = 24 * 365 / 4;\n      this.options.column_width = 400;\n    } else if (view_mode === VIEW_MODE.YEAR) {\n      this.options.step = 24 * 365;\n      this.options.column_width = 480;\n    }\n  }\n\n  setup_dates() {\n    this.setup_gantt_dates();\n    this.setup_date_values();\n  }\n\n  setup_gantt_dates() {\n    this.gantt_start = this.gantt_end = null;\n\n    for (let task of this.tasks) {\n      // set global start and end date\n      if (!this.gantt_start || (task._start && task._start < this.gantt_start)) {\n          this.gantt_start = task._start;\n      }\n      if (!this.gantt_end || (task._end && task._end > this.gantt_end)) {\n        this.gantt_end = task._end;\n      }\n    }\n    let gantt_start, gantt_end;\n    if (!this.gantt_start) gantt_start = new Date();\n    else gantt_start = date_utils.start_of(this.gantt_start, \"day\");\n    if (!this.gantt_end) gantt_end = new Date();\n    else gantt_end = date_utils.start_of(this.gantt_end, \"day\");\n\n    // ensure today in daterange\n    const today = date_utils.today();\n    if (gantt_start > today) gantt_start = today;\n    if (gantt_end < today) gantt_end = today;\n\n    // get date start and end\n    this.get_gantt_dates(gantt_start, gantt_end);\n  }\n\n  get_gantt_dates(start, end) {\n    // add date padding on both sides\n    let viewKey;\n    for (let [key, value] of Object.entries(VIEW_MODE)) {\n      if (value === this.options.view_mode) {\n        viewKey = key;\n      }\n    }\n    const [padding_start, padding_end] = this.options.view_mode_padding[\n      viewKey\n    ].map(date_utils.parse_duration);\n\n    const gantt_start = date_utils.add(\n      start,\n      -padding_start.duration,\n      padding_start.scale,\n    );\n\n    let format_string;\n    if (this.view_is(VIEW_MODE.YEAR)) {\n        format_string = 'YYYY';\n    } else if (this.view_is(VIEW_MODE.MONTH) || this.view_is(VIEW_MODE.QUARTER_YEAR)) {\n        format_string = 'YYYY-MM';\n    } else if (this.view_is(VIEW_MODE.DAY)) {\n        format_string = 'YYYY-MM-DD';\n    } else {\n        format_string = 'YYYY-MM-DD HH';\n    }\n    this.gantt_start = date_utils.parse(\n        date_utils.format(gantt_start, format_string),\n    );\n    this.gantt_start.setHours(0, 0, 0, 0);\n    this.gantt_end = date_utils.add(\n        end,\n        padding_end.duration,\n        padding_end.scale,\n    );\n\n    // quarter_year start January end December\n    if (this.view_is(VIEW_MODE.QUARTER_YEAR)) {\n      this.gantt_start = new Date(this.gantt_start.setMonth(0, 1));\n      this.gantt_end = new Date(this.gantt_end.setMonth(9, 1));\n    }\n\n    console.log('gantt ==> date-start_end', this.gantt_start, this.gantt_end);\n  }\n\n  setup_date_values() {\n    this.dates = [];\n    let cur_date = null;\n\n    while (cur_date === null || cur_date < this.gantt_end) {\n      if (!cur_date) {\n        cur_date = date_utils.clone(this.gantt_start);\n      } else {\n        if (this.view_is(VIEW_MODE.YEAR)) {\n          cur_date = date_utils.add(cur_date, 1, \"year\");\n        } else if (this.view_is(VIEW_MODE.MONTH)) {\n          cur_date = date_utils.add(cur_date, 1, \"month\");\n        } else if (this.view_is(VIEW_MODE.QUARTER_YEAR)) {\n          cur_date = date_utils.add(cur_date, 3, \"month\");\n        } else {\n          cur_date = date_utils.add(cur_date, this.options.step, \"hour\");\n        }\n      }\n      this.dates.push(cur_date);\n    }\n  }\n\n  bind_events() {\n    this.bind_grid_scroll();\n\n    if (this.options.readonly) return\n    this.bind_grid_click();\n    this.bind_bar_create();\n    this.bind_bar_events();\n  }\n\n  render() {\n    this.clear();\n    this.setup_layers();\n    this.make_grid();\n    this.make_dates();\n    this.make_bars();\n    this.make_grid_extras();\n    this.make_arrows();\n    this.map_arrows_on_bars();\n    this.set_width();\n    this.set_scroll_position(this.options.scroll_to);\n  }\n\n  setup_layers() {\n    this.layers = {};\n    const layers = [\"grid\", \"arrow\", \"progress\", \"bar\", \"details\"];\n    // make group layers\n    for (let layer of layers) {\n      this.layers[layer] = createSVG(\"g\", {\n        class: layer,\n        append_to: this.$svg,\n      });\n    }\n  }\n\n  make_grid() {\n    this.make_grid_background();\n    this.make_grid_rows();\n    this.make_grid_header();\n    this.make_grid_toolbar();\n  }\n\n  make_grid_extras() {\n    this.make_grid_highlights();\n    this.make_grid_ticks();\n  }\n\n  make_grid_background() {\n    const grid_width = this.dates.length * this.options.column_width;\n    const grid_height = (this.options.bar_height + this.options.padding) * this.tasks.length;\n\n    createSVG(\"rect\", {\n      x: 0,\n      y: 0,\n      width: grid_width,\n      height: grid_height,\n      class: \"grid-background\",\n      append_to: this.$svg,\n    });\n\n    const scroll_height = this.options.height ? this.options.height + 'px' : `calc(100% - ${this.options.header_height + 1}px`;\n    this.$container_main.style.height = scroll_height;\n    this.$container_main.style.width = '100%';\n    this.$container_main.style.overflow = 'auto';\n    this.$container_main.style.position = 'relative';\n    this.$container.style.overflow = 'hidden';\n\n    $.attr(this.$svg, {\n      height: grid_height ,\n      width: \"100%\",\n    });\n  }\n\n  make_grid_rows() {\n    const rows_layer = createSVG(\"g\", { class: 'rows_layer',append_to: this.layers.grid });\n\n    const row_width = this.dates.length * this.options.column_width;\n    const row_height = this.options.bar_height + this.options.padding;\n\n    let row_y = 0;\n\n    for (let _ of this.tasks) {\n      createSVG(\"rect\", {\n        x: 0,\n        y: row_y,\n        width: row_width,\n        height: row_height,\n        class: \"grid-row\",\n        append_to: rows_layer,\n      });\n      if (\n          this.options.lines === TICK_LINE.BOTH ||\n          this.options.lines === TICK_LINE.HORIZONTAL\n      ) {\n      }\n\n      row_y += this.options.bar_height + this.options.padding;\n    }\n  }\n\n  make_grid_header() {\n    let $header = document.createElement(\"div\");\n    $header.style.height = this.options.header_height + \"px\";\n    $header.style.width = this.dates.length * this.options.column_width + \"px\";\n    $header.classList.add('grid-header')\n    this.$header = $header\n\n    let $upper_header = document.createElement(\"div\");\n    $upper_header.classList.add('upper-header')\n    this.$upper_header = $upper_header\n    this.$header.appendChild($upper_header)\n\n    let $lower_header = document.createElement(\"div\");\n    $lower_header.classList.add('lower-header')\n    this.$lower_header = $lower_header\n    this.$header.appendChild($lower_header)\n\n    let $line_header = document.createElement('div');\n    $line_header.classList.add('line-header');\n    this.$line_header = $line_header;\n    this.$header.appendChild($line_header);\n\n    this.$container_header.appendChild(this.$header);\n  }\n\n  make_grid_toolbar() {\n    const $side_header = this.$container_toolbar;\n\n    // Create view mode change select\n    if (this.options.view_mode_select) {\n\n      const $select = document.createElement(\"select\");\n      $select.classList.add('viewmode-select')\n\n      const $el = document.createElement(\"option\");\n      $el.selected = true\n      $el.disabled = true\n      $el.textContent = 'Mode'\n      $select.appendChild($el)\n\n      const modes = this.options.view_modes;\n      for (const key in modes) {\n        const $option = document.createElement(\"option\");\n        $option.value = modes[key];\n        $option.textContent = modes[key];\n        $select.appendChild($option);\n      }\n      $select.value = this.options.view_mode\n      $select.addEventListener(\"change\", (function () {\n        this.change_view_mode($select.value)\n      }).bind(this));\n      $side_header.appendChild($select)\n    }\n\n    // Create today button\n    if (this.options.today_button) {\n      let $today_button = document.createElement('button')\n      $today_button.classList.add('today-button')\n      $today_button.textContent = 'Today'\n      $today_button.onclick = this.scroll_today.bind(this)\n      $side_header.appendChild($today_button)\n    }\n\n    // position\n    const top = Math.max(0, this.options.header_height - 50 - 5);\n    $side_header.style.top = top + 'px';\n  }\n\n  make_grid_ticks() {\n    if (!Object.values(TICK_LINE).includes(this.options.lines)) return;\n    let tick_x = 0;\n    let tick_y = 0;\n    let tick_height = 5000; // assert infinity\n    // let tick_height =\n    //   (this.options.bar_height + this.options.padding) * this.tasks.length;\n\n    let $lines_layer = createSVG(\"g\", { class: 'lines_layer', append_to: this.layers.grid });\n\n    let row_y = 0;\n\n    const row_width = this.dates.length * this.options.column_width;\n    const row_height = this.options.bar_height + this.options.padding;\n    if (this.options.lines !== TICK_LINE.VERTICAL) {\n      for (let _ of this.tasks) {\n        createSVG(\"line\", {\n          x1: 0,\n          y1: row_y + row_height,\n          x2: row_width,\n          y2: row_y + row_height,\n          class: \"row-line\",\n          append_to: $lines_layer,\n        });\n        row_y += row_height;\n      }\n    }\n    if (this.options.lines === TICK_LINE.HORIZONTAL) return;\n    for (let date of this.dates) {\n      let tick_class = \"tick\";\n      if (this.get_thick_mode(date)) {\n        tick_class += ' thick';\n      }\n\n      createSVG(\"path\", {\n        d: `M ${tick_x} ${tick_y} v ${tick_height}`,\n        class: tick_class,\n        append_to: this.layers.grid,\n      });\n\n      if (this.view_is(VIEW_MODE.MONTH)) {\n        tick_x +=\n          (date_utils.get_days_in_month(date) * this.options.column_width) / 30;\n      } else {\n        tick_x += this.options.column_width;\n      }\n    }\n  }\n\n  get_thick_mode(date) {\n    let thick = false;\n    // thick tick for monday\n    if (this.view_is(VIEW_MODE.DAY) && date.getDate() === 1) {\n      thick = true;\n    }\n    // thick tick for first week\n    if (\n      this.view_is(VIEW_MODE.WEEK) &&\n      date.getDate() >= 1 &&\n      date.getDate() < 8\n    ) {\n      thick = true;\n    }\n    // thick ticks for quarters\n    if (this.view_is(VIEW_MODE.MONTH) && date.getMonth() % 3 === 0) {\n      thick = true;\n    }\n    // thick ticks for quarter_year\n    if (this.view_is(VIEW_MODE.QUARTER_YEAR) && date.getMonth() === 0) {\n      thick = true;\n    }\n    // thick ticks for year\n    if (this.view_is(VIEW_MODE.YEAR)) {\n      thick = true;\n    }\n    return thick;\n  }\n\n  highlightWeekends() {\n    if (!this.view_is('Day') && !this.view_is('Half Day')) return\n    for (let d = new Date(this.gantt_start); d <= this.gantt_end; d.setDate(d.getDate() + 1)) {\n      if (d.getDay() === 0 || d.getDay() === 6) {\n        const x = (date_utils.diff(d, this.gantt_start, 'hour') /\n          this.options.step) *\n          this.options.column_width;\n        // const height = (this.options.bar_height + this.options.padding) * this.tasks.length;\n        createSVG('rect', {\n          x,\n          y: 0,\n          width: (this.view_is('Day') ? 1 : 2) * this.options.column_width,\n          height: '100%',\n          class: 'holiday-highlight',\n          append_to: this.layers.grid,\n        });\n      }\n    }\n  }\n\n  //compute the horizontal x distance\n  computeGridHighlightDimensions(view_mode) {\n    let x = this.options.column_width / 2;\n\n    if (this.view_is(VIEW_MODE.DAY)) {\n      let today = date_utils.today()\n      return {\n        x: x +\n          (date_utils.diff(today, this.gantt_start, \"hour\") / this.options.step) *\n          this.options.column_width,\n        date: today\n      }\n    }\n\n    // 今日-计算区间中心位置 -TODO 需改成同上面日期计算位置\n    for (let date of this.dates) {\n      const todayDate = new Date();\n      const startDate = new Date(date);\n      const endDate = new Date(date);\n      switch (view_mode) {\n        case VIEW_MODE.WEEK:\n          endDate.setDate(date.getDate() + 7);\n          break;\n        case VIEW_MODE.MONTH:\n          endDate.setMonth(date.getMonth() + 1);\n          break;\n        case VIEW_MODE.QUARTER_YEAR:\n          endDate.setMonth(date.getMonth() + 3);\n          break;\n        case VIEW_MODE.YEAR:\n          endDate.setFullYear(date.getFullYear() + 1);\n          break;\n      }\n      if (todayDate >= startDate && todayDate <= endDate) {\n        return { x, date: startDate }\n      } else {\n        x += this.options.column_width;\n      }\n    }\n  }\n\n  make_grid_highlights() {\n    if (this.options.highlight_weekend) this.highlightWeekends()\n    // highlight today's | week's | month's | quarter_year's | year's\n    if (\n      this.view_is(VIEW_MODE.DAY) ||\n      this.view_is(VIEW_MODE.WEEK) ||\n      this.view_is(VIEW_MODE.MONTH) ||\n      this.view_is(VIEW_MODE.QUARTER_YEAR) ||\n      this.view_is(VIEW_MODE.YEAR)\n    ) {\n      // Used as we must find the _end_ of session if view is not Day\n      // const grid_width = this.dates.length * this.options.column_width;\n      // this.$today_overlay = this.create_el({ width: grid_width, classes: 'gantt-today-overlay', append_to: this.$container_main })\n\n      const { x: left, date } = this.computeGridHighlightDimensions(this.options.view_mode)\n      console.log('ddd ==> x-left', left, date);\n      const height = (this.options.bar_height + this.options.padding) * this.tasks.length;\n      this.$today_overlay = this.create_el({\n          top: 0,\n          left,\n          height: height,\n          classes: 'today-highlight',\n          append_to: this.$container_main,\n      });\n\n      let $today = document.getElementById(date_utils.format(date).replaceAll(' ', '_'))\n      $today.classList.add('today-date-highlight')\n      $today.style.top = +$today.style.top.slice(0, -2) - 4 + 'px'\n      $today.style.left = +$today.style.left.slice(0, -2) - 8 + 'px'\n    }\n  }\n\n  create_el({ left, top, width, height, id, classes, append_to }) {\n    let $el = document.createElement(\"div\");\n    $el.classList.add(classes)\n    $el.style.top = top + 'px'\n    $el.style.left = left + 'px'\n    if (id) $el.id = id\n    if (width) $el.style.width = width + 'px'\n    if (height) $el.style.height = height + 'px'\n    append_to.appendChild($el)\n    return $el\n  }\n\n  make_dates() {\n    this.upper_texts_x = {}\n    this.get_dates_to_draw().forEach((date, i) => {\n      let $lower_text = this.create_el({\n        left: date.lower_x,\n        top: date.lower_y,\n        id: date.formatted_date,\n        classes: 'lower-text',\n        append_to: this.$lower_header\n      })\n      $lower_text.innerText = date.lower_text;\n      $lower_text.style.left = +$lower_text.style.left.slice(0, -2) - $lower_text.clientWidth / 2 + 'px';\n\n      if (date.upper_text) {\n        this.upper_texts_x[date.upper_text] = date.upper_x;\n        let $upper_text = this.create_el({\n            left: date.upper_x,\n            top: date.upper_y,\n            classes: 'upper-text',\n            append_to: this.$upper_header,\n        });\n        $upper_text.innerText = date.upper_text;\n      }\n\n      if (date.tick_line) {\n        this.create_el({\n            left: date.base_pos_x - 1,\n            top: date.lower_y,\n            width: 2,\n            height: this.options.header_height - 20,\n            classes: 'tick-line',\n            append_to: this.$line_header,\n        });\n      }\n    })\n  }\n\n  get_dates_to_draw() {\n    let last_date = null;\n    const dates = this.dates.map((date, i) => {\n      const d = this.get_date_info(date, last_date, i);\n      last_date = d;\n      return d;\n    });\n    return dates;\n  }\n\n  get_date_info(date, last_date_info) {\n    let last_date = last_date_info ? last_date_info.date : date_utils.add(date, 1, \"day\")\n    const date_text = {\n      Hour_lower: date_utils.format(date, \"HH\", this.options.language),\n      \"Quarter Day_lower\": date_utils.format(date, \"HH\", this.options.language),\n      \"Half Day_lower\": date_utils.format(date, \"HH\", this.options.language),\n      Day_lower:\n        date.getDate() !== last_date.getDate()\n          ? date_utils.format(date, \"D\", this.options.language)\n          : \"\",\n      Week_lower:\n        date.getMonth() !== last_date.getMonth()\n          ? date_utils.format(date, \"D MMM\", this.options.language)\n          : date_utils.format(date, \"D\", this.options.language),\n      Month_lower: date_utils.format(date, \"M月\", this.options.language),\n      \"Quarter Year_lower\":\n        !last_date_info || date.getMonth() !== last_date.getMonth()\n          ? \"Q\" + date_utils.format(date, \"Q\", this.options.language)\n          : \"\",\n      Year_lower: date_utils.format(date, \"YYYY年\", this.options.language),\n      Hour_upper:\n        date.getDate() !== last_date.getDate()\n          ? date_utils.format(date, \"D MMMM\", this.options.language)\n          : \"\",\n      \"Quarter Day_upper\":\n        date.getDate() !== last_date.getDate()\n          ? date_utils.format(date, \"D MMM\", this.options.language)\n          : \"\",\n      \"Half Day_upper\":\n        date.getDate() !== last_date.getDate()\n          ? date_utils.format(date, \"D MMM\", this.options.language)\n          : \"\",\n      Day_upper:\n        !last_date_info || date.getMonth() !== last_date.getMonth()\n          ? date_utils.format(date, \"YYYY年MM月\", this.options.language)\n          : \"\",\n      Week_upper:\n        !last_date_info || date.getMonth() !== last_date.getMonth()\n          ? date_utils.format(date, \"YYYY年MM月\", this.options.language)\n          : \"\",\n      Month_upper:\n        !last_date_info || date.getFullYear() !== last_date.getFullYear()\n          ? date_utils.format(date, \"YYYY年\", this.options.language)\n          : \"\",\n      \"Quarter Year_upper\":\n        !last_date_info || date.getFullYear() !== last_date.getFullYear()\n          ? date_utils.format(date, \"YYYY年\", this.options.language)\n          : \"\",\n      Year_upper: \"\"\n        // !last_date_info || date.getFullYear() !== last_date.getFullYear()\n        //   ? date_utils.format(date, \"YYYY年\", this.options.language)\n        //   : \"\",\n    };\n\n    // special Month scale\n    let column_width = this.view_is(VIEW_MODE.MONTH) ? (date_utils.get_days_in_month(date) * this.options.column_width) / 30 : this.options.column_width;\n\n    const base_pos = {\n      x: last_date_info\n        ? last_date_info.base_pos_x + last_date_info.column_width\n        : 0,\n      lower_y: this.options.header_height - 20,\n      upper_y: Math.max(6, this.options.header_height - 50),\n    };\n\n    const base_tick = {\n      line: this.get_thick_mode(date),\n    };\n\n    // starting_point upper:center-or-start lower:center\n    const x_pos = {\n      Hour_lower: column_width / 2,\n      Hour_upper: column_width * 24 / 2,\n      \"Quarter Day_lower\": column_width / 2,\n      \"Quarter Day_upper\": column_width * 4 / 2,\n      \"Half Day_lower\": column_width / 2,\n      \"Half Day_upper\": column_width * 2 / 2,\n      Day_lower: column_width / 2,\n      Day_upper: column_width / 2,\n      Week_lower: column_width / 2,\n      // Week_upper: (column_width * 4) / 2,\n      Week_upper: 19,\n      Month_lower: column_width / 2,\n      // Month_upper: column_width / 2,\n      Month_upper: 19,\n      \"Quarter Year_lower\": column_width / 2,\n      \"Quarter Year_upper\": (column_width * 4) / 2,\n      Year_lower: column_width / 2,\n      Year_upper: 19,\n    };\n    return {\n      date,\n      formatted_date: date_utils.format(date).replaceAll(' ', '_'),\n      column_width,\n      base_pos_x: base_pos.x,\n      upper_text: this.options.upper_text ? this.options.upper_text(date, this.options.view_mode, date_text[`${this.options.view_mode}_upper`]) : date_text[`${this.options.view_mode}_upper`],\n      lower_text: this.options.lower_text ? this.options.lower_text(date, this.options.view_mode, date_text[`${this.options.view_mode}_lower`]) : date_text[`${this.options.view_mode}_lower`],\n      upper_x: base_pos.x + x_pos[`${this.options.view_mode}_upper`],\n      upper_y: base_pos.upper_y,\n      lower_x: base_pos.x + x_pos[`${this.options.view_mode}_lower`],\n      lower_y: base_pos.lower_y,\n      tick_line: base_tick.line,\n    };\n  }\n\n  make_bars() {\n    this.bars = this.tasks.map((task) => {\n      const bar = new Bar(this, task);\n      this.layers.bar.appendChild(bar.group);\n      return bar;\n    });\n  }\n\n  make_arrows() {\n    this.arrows = [];\n    if (!this.options.dependencies) return;\n    for (let task of this.tasks) {\n      let arrows = [];\n      arrows = task.dependencies\n        .map((task_id) => {\n          const dependency = this.get_task(task_id);\n          if (!dependency) return;\n          const arrow = new Arrow(\n            this,\n            this.bars[dependency._index], // from_task\n            this.bars[task._index], // to_task\n          );\n          this.layers.arrow.appendChild(arrow.element);\n          return arrow;\n        })\n        .filter(Boolean); // filter falsy values\n      this.arrows = this.arrows.concat(arrows);\n    }\n  }\n\n  map_arrows_on_bars() {\n    for (let bar of this.bars) {\n      bar.arrows = this.arrows.filter((arrow) => {\n        return (\n          arrow.from_task.task.id === bar.task.id ||\n          arrow.to_task.task.id === bar.task.id\n        );\n      });\n    }\n  }\n\n  set_width() {\n    const cur_width = this.$svg.getBoundingClientRect().width;\n    const actual_width = this.$svg.querySelector('.grid .grid-row') ? this.$svg\n      .querySelector('.grid .grid-row')\n      .getAttribute('width') : 0;\n    if (cur_width < actual_width) {\n      this.$svg.setAttribute(\"width\", actual_width);\n    }\n  }\n\n  set_scroll_position(date) {\n    if (!date || date === 'start') {\n      date = this.gantt_start\n    } else if (date === 'today') {\n      return this.scroll_today()\n    } else if (typeof date === 'string') {\n      date = date_utils.parse(date)\n    }\n\n    const parent_element = this.$svg.parentElement;\n    if (!parent_element) return;\n\n    const hours_before_first_task = date_utils.diff(\n      date,\n      this.gantt_start,\n      \"hour\",\n    ) + 24;\n    // 1/3 padding\n    const space = (parent_element.clientWidth / 3 / this.options.column_width) * this.options.step;\n    const distance = hours_before_first_task - space;\n    // position\n    console.log('ddd ==> space', hours_before_first_task, space, distance);\n\n    const scroll_pos =\n        (distance / this.options.step) * this.options.column_width -\n        this.options.column_width;\n    // smooth、auto\n    parent_element.scrollTo({ left: scroll_pos, behavior: 'auto' })\n  }\n\n  scroll_today() {\n    this.set_scroll_position(new Date())\n  }\n\n  bind_grid_scroll() {\n    const grid_width = this.dates.length * this.options.column_width;\n\n    // onmousewheel\n    $.on(\n      this.$container_header,\n      'wheel',\n      (event) => {\n        if (event.shiftKey || event.deltaX) {\n          const scrollMove = event.deltaX ? event.deltaX : event.deltaY;\n          const scrollX = this.$container_main.scrollLeft || 0;\n          let newScrollX = scrollX + scrollMove;\n          if (newScrollX < 0) {\n            newScrollX = 0;\n          } else if (newScrollX > grid_width) {\n            newScrollX = grid_width;\n          }\n          this.$container_main.scrollLeft = newScrollX;\n          event.preventDefault();\n        }\n      }\n    );\n\n    $.on(this.$container_main,\n      'scroll',\n      $.throttle(20, () => {\n        const scrollLeft = this.$container_main.scrollLeft;\n        this.$container_header.scrollLeft = scrollLeft;\n      }),\n    );\n  }\n\n  bind_grid_click() {\n    $.on(\n      this.$container,\n      this.options.popup_trigger,\n      () => {\n        this.unselect_all();\n        this.hide_popup();\n      },\n    );\n  }\n\n  bind_bar_create() {\n    let x_on_start = 0;\n    let y_on_start = 0;\n    let matched_task = null;\n    let is_creating = null;\n    let holder = null;\n\n    const radius = this.options.bar_corner_radius;\n    const bar_height = this.options.bar_height;\n    const row_height = bar_height + this.options.padding;\n\n    $.on(this.$svg, \"mousedown\", (e) => {\n      // location\n      const index = parseInt(e.offsetY / row_height);\n      matched_task = this.tasks[index];\n      // only empty date\n      if (matched_task && matched_task.empty !== true) return;\n      // start record\n      is_creating = true;\n      x_on_start = e.offsetX;\n      [, y_on_start] = this.get_snap_coord(e.offsetX, e.offsetY);\n      // const date = this.get_snap_date(x_on_start);\n    });\n\n    $.on(this.$svg, \"mousemove\", (e) => {\n      if (!is_creating) return;\n      let dx = e.offsetX - x_on_start;\n\n      // limit block\n      // const width = this.get_snap_position(Math.abs(dx));\n      // free distance\n      const width = Math.abs(dx);\n      // create rect\n      if (!holder) {\n        holder = createSVG('rect', {\n          x: x_on_start,\n          y: y_on_start,\n          width: 0,\n          height: bar_height,\n          rx: radius,\n          ry: radius,\n          class: 'bar-inner',\n          'data-id': matched_task.id,\n          append_to: this.layers.progress,\n        });\n      }\n      // move-right\n      let x = x_on_start;\n      if (dx < 0) {\n        // move-left\n        x = x_on_start - width;\n      }\n      holder.setAttribute('x', x);\n      holder.setAttribute('width', width);\n    });\n\n    $.on(this.$svg, \"mouseup\", () => {\n      is_creating = false;\n      if (holder) {\n        const start_x = holder.getX();\n        const end_x = holder.getX() + holder.getBBox().width;\n        const date_start = this.get_snap_date(start_x);\n        const date_end = this.get_snap_date(end_x);\n\n        const update_task = Object.assign(matched_task, { _start: date_start, _end: date_end, empty: false, invalid: false })\n        // Bar\n        const update_bar = new Bar(this, update_task);\n\n        // remove old_bar from bars and bar-layers\n        const old_bar = this.bars[matched_task._index];\n        this.layers.bar.removeChild(old_bar.group);\n        this.bars.splice(matched_task._index, 1, update_bar);\n\n        // replace update_bar and update tasks\n        const target_postion = this.bars[matched_task._index+1];\n        this.layers.bar.insertBefore(update_bar.group, target_postion ? target_postion.group : null);\n        this.tasks.splice(matched_task._index, 1, update_task);\n\n        // Arrow\n        // before empty all childs, after appendto arrow-layers\n        this.layers.arrow.innerHTML = \"\";\n        this.make_arrows();\n        this.map_arrows_on_bars();\n\n        // remove holder dom\n        this.layers.progress.removeChild(holder);\n        // trigger event\n        this.trigger_event('date_change', [matched_task, date_start, date_end]);\n      }\n      holder = null;\n    });\n  }\n\n  bind_bar_events() {\n    let is_dragging = false;\n    let x_on_start = 0;\n    let x_on_scroll_start = 0;\n    let y_on_start = 0;\n    let is_resizing_left = false;\n    let is_resizing_right = false;\n    let parent_bar_id = null;\n    let bars = []; // instanceof Bar\n    this.bar_being_dragged = null;\n\n    function action_in_progress() {\n      return is_dragging || is_resizing_left || is_resizing_right;\n    }\n\n    $.on(this.$svg, \"mousedown\", \".bar-wrapper, .handle\", (e, element) => {\n      const bar_wrapper = $.closest(\".bar-wrapper\", element);\n      bars.forEach((bar) => bar.group.classList.remove(\"active\"));\n\n      if (element.classList.contains(\"left\")) {\n        is_resizing_left = true;\n      } else if (element.classList.contains(\"right\")) {\n        is_resizing_right = true;\n      } else if (element.classList.contains(\"bar-wrapper\")) {\n        is_dragging = true;\n      }\n\n      bar_wrapper.classList.add(\"active\");\n      this.hide_popup();\n\n      x_on_start = e.offsetX;\n      y_on_start = e.offsetY;\n\n      parent_bar_id = bar_wrapper.getAttribute(\"data-id\");\n      const ids = [\n        parent_bar_id\n      ];\n      // drag sync children\n      if (this.options.drag_sync_child) {\n        ids.push(...this.get_all_dependent_tasks(parent_bar_id));\n      }\n      bars = ids.map((id) => this.get_bar(id));\n\n      this.bar_being_dragged = parent_bar_id;\n\n      bars.forEach((bar) => {\n        if (bar.empty) return;\n        const $bar = bar.$bar;\n        $bar.ox = $bar.getX();\n        $bar.oy = $bar.getY();\n        $bar.owidth = $bar.getWidth();\n        $bar.finaldx = 0;\n      });\n    });\n\n    const handle_width = this.options.handle_width;\n    $.on(this.$svg, \"mousemove\", (e) => {\n      if (!action_in_progress()) return;\n      const dx = e.offsetX - x_on_start;\n      const dy = e.offsetY - y_on_start;\n\n      bars.forEach((bar) => {\n        if (bar.empty) return;\n        const $bar = bar.$bar;\n        // limit-block\n        // $bar.finaldx = this.get_snap_position(dx);\n        // free-distance\n        $bar.finaldx = dx;\n        this.hide_popup();\n        if (is_resizing_left) {\n          // 左不能大于右\n          if ($bar.finaldx - $bar.owidth + handle_width >= 0) return;\n          if (parent_bar_id === bar.task.id) {\n            bar.update_bar_position({\n              x: $bar.ox + $bar.finaldx,\n              width: $bar.owidth - $bar.finaldx,\n            });\n          } else {\n            bar.update_bar_position({\n              x: $bar.ox + $bar.finaldx,\n            });\n          }\n        } else if (is_resizing_right) {\n          // 右不能小于左\n          if ($bar.finaldx + $bar.owidth < handle_width) return;\n          if (parent_bar_id === bar.task.id) {\n            bar.update_bar_position({\n              width: $bar.owidth + $bar.finaldx,\n            });\n          }\n        } else if (is_dragging && !this.options.readonly) {\n          bar.update_bar_position({ x: $bar.ox + $bar.finaldx });\n        }\n\n        // show drag_backdrop\n        if (parent_bar_id === bar.task.id) {\n          let x = 0;\n          const scrollLeft = this.$container_main.scrollLeft;\n          if (is_resizing_right) {\n            x = $bar.ox - scrollLeft;\n          } else {\n            x = $bar.ox + $bar.finaldx - scrollLeft;\n          }\n          this.show_backdrop({\n              x: x,\n              width: $bar.getWidth(),\n              bar,\n          });\n        }\n      });\n    });\n\n    $.on(this.$svg, \"mouseup\", () => {\n      this.bar_being_dragged = null;\n      this.hide_backdrop();\n      bars.forEach((bar) => {\n        if (bar.empty) return;\n        const $bar = bar.$bar;\n        if (!$bar.finaldx) return;\n        bar.date_changed();\n        bar.set_action_completed();\n      });\n    });\n\n    document.addEventListener(\"mouseup\", () => {\n      is_dragging = false;\n      is_resizing_left = false;\n      is_resizing_right = false;\n    });\n\n    $.on(this.$container_main, 'scroll', e => {\n      let elements = document.querySelectorAll('.bar-wrapper');\n      let localBars = [];\n      const ids = [];\n      let dx;\n      if (x_on_scroll_start) {\n        dx = e.currentTarget.scrollLeft - x_on_scroll_start;\n      }\n\n      const daysSinceStart = e.currentTarget.scrollLeft / this.options.column_width * this.options.step / 24;\n      let format_str = \"D MMM\"\n      if ([VIEW_MODE.YEAR, VIEW_MODE.QUARTER_YEAR, VIEW_MODE.MONTH].includes(this.options.view_mode)) format_str = 'YYYY年'\n      else if ([VIEW_MODE.DAY, VIEW_MODE.WEEK].includes(this.options.view_mode)) format_str = 'YYYY年MM月'\n      else if (this.view_is(VIEW_MODE.HALF_DAY)) format_str = 'D MMM';\n      else if (this.view_is(VIEW_MODE.HOUR)) format_str = 'D MMMM';\n\n      // language\n      const currentUpper = date_utils.format(\n        date_utils.add(this.gantt_start, daysSinceStart, 'day'),\n        format_str,\n        this.options.language\n      );\n      const upperTexts = Array.from(document.querySelectorAll('.upper-text'));\n      const $el = upperTexts.find(el => el.textContent === currentUpper)\n      if ($el && !$el.classList.contains('current-upper')) {\n        const $current = document.querySelector('.current-upper')\n        if ($current) {\n          $current.classList.remove('current-upper')\n          $current.style.left = this.upper_texts_x[$current.textContent] + 'px';\n        }\n\n        $el.classList.add('current-upper')\n        // 38/2 first-point\n        $el.style.left = '19px';\n      }\n\n      Array.prototype.forEach.call(elements, function (el, i) {\n        ids.push(el.getAttribute('data-id'));\n      });\n\n      if (dx) {\n        localBars = ids.map(id => this.get_bar(id));\n        if (this.options.auto_move_label) {\n          localBars.forEach(bar => {\n            bar.update_label_position_on_horizontal_scroll({ x: dx, sx: e.currentTarget.scrollLeft });\n          });\n        }\n      }\n\n      x_on_scroll_start = e.currentTarget.scrollLeft;\n\n      this.trigger_event('scroll', [e]);\n    });\n\n    if (this.options.drag_bar_progress) {\n      this.bind_bar_progress();\n    }\n  }\n\n  bind_bar_progress() {\n    let x_on_start = 0;\n    let y_on_start = 0;\n    let is_resizing = null;\n    let bar = null;\n    let $bar_progress = null;\n    let $bar = null;\n\n    $.on(this.$svg, \"mousedown\", \".handle.progress\", (e, handle) => {\n      is_resizing = true;\n      x_on_start = e.offsetX;\n      y_on_start = e.offsetY;\n\n      const $bar_wrapper = $.closest(\".bar-wrapper\", handle);\n      const id = $bar_wrapper.getAttribute(\"data-id\");\n      bar = this.get_bar(id);\n\n      $bar_progress = bar.$bar_progress;\n      $bar = bar.$bar;\n\n      $bar_progress.finaldx = 0;\n      $bar_progress.owidth = $bar_progress.getWidth();\n      $bar_progress.min_dx = -$bar_progress.getWidth();\n      $bar_progress.max_dx = $bar.getWidth() - $bar_progress.getWidth();\n    });\n\n    $.on(this.$svg, \"mousemove\", (e) => {\n      if (!is_resizing) return;\n      let dx = e.offsetX - x_on_start;\n      let dy = e.offsetY - y_on_start;\n\n      if (dx > $bar_progress.max_dx) {\n        dx = $bar_progress.max_dx;\n      }\n      if (dx < $bar_progress.min_dx) {\n        dx = $bar_progress.min_dx;\n      }\n\n      const $handle = bar.$handle_progress;\n      $.attr($bar_progress, \"width\", $bar_progress.owidth + dx);\n      $.attr($handle, \"points\", bar.get_progress_polygon_points());\n      $bar_progress.finaldx = dx;\n    });\n\n    $.on(this.$svg, \"mouseup\", () => {\n      is_resizing = false;\n      if (!($bar_progress && $bar_progress.finaldx)) return;\n\n      $bar_progress.finaldx = 0;\n      bar.progress_changed();\n      bar.set_action_completed();\n      bar = null;\n      $bar_progress = null;\n      $bar = null;\n    });\n  }\n\n  get_all_dependent_tasks(task_id) {\n    let out = [];\n    let to_process = [task_id];\n    while (to_process.length) {\n      const deps = to_process.reduce((acc, curr) => {\n        acc = acc.concat(this.dependency_map[curr]);\n        return acc;\n      }, []);\n\n      out = out.concat(deps);\n      to_process = deps.filter((d) => !to_process.includes(d));\n    }\n\n    return out.filter(Boolean);\n  }\n\n  get_snap_position(dx) {\n    let odx = dx,\n      rem,\n      position;\n\n    if (this.view_is(VIEW_MODE.WEEK)) {\n      rem = dx % (this.options.column_width / 7);\n      position =\n        odx -\n        rem +\n        (rem < this.options.column_width / 14\n          ? 0\n          : this.options.column_width / 7);\n    } else if (this.view_is(VIEW_MODE.MONTH)) {\n      rem = dx % (this.options.column_width / 30);\n      position =\n        odx -\n        rem +\n        (rem < this.options.column_width / 60\n          ? 0\n          : this.options.column_width / 30);\n    } else if (this.view_is(VIEW_MODE.YEAR)) {\n      rem = dx % (this.options.column_width / 365);\n      position =\n        odx -\n        rem +\n        (rem < this.options.column_width / 120\n          ? 0\n          : this.options.column_width / 365);\n    } else {\n      rem = dx % this.options.column_width;\n      position =\n        odx -\n        rem +\n        (rem < this.options.column_width / 2 ? 0 : this.options.column_width);\n    }\n    return position;\n  }\n\n  get_snap_coord(ox, oy) {\n    let start_x = ox;\n    // 网格区\n    if (\n      this.view_is(VIEW_MODE.HOUR) ||\n      this.view_is(VIEW_MODE.HALF_DAY) ||\n      this.view_is(VIEW_MODE.QUARTER_DAY) ||\n      this.view_is(VIEW_MODE.DAY)\n    ) {\n      start_x = parseInt(ox / this.options.column_width) * this.options.column_width;\n    }\n\n    const padding = this.options.padding / 2;\n    const header_height = 0;\n    const row_height = this.options.bar_height + this.options.padding;\n\n    const mod = parseInt((oy - header_height) / row_height);\n    const start_y = header_height + mod * row_height + padding;\n\n    return [start_x, start_y];\n  }\n\n  get_snap_date(x) {\n    const x_in_units = x / this.options.column_width;\n    return date_utils.add(\n      this.gantt_start,\n      x_in_units * this.options.step,\n      \"hour\",\n    );\n  }\n\n  unselect_all() {\n    [...this.$svg.querySelectorAll(\".bar-wrapper\")].forEach((el) => {\n      el.classList.remove(\"active\");\n    });\n  }\n\n  view_is(modes) {\n    if (typeof modes === \"string\") {\n      return this.options.view_mode === modes;\n    }\n\n    if (Array.isArray(modes)) {\n      return modes.some((mode) => this.options.view_mode === mode);\n    }\n\n    return false;\n  }\n\n  get_task(id) {\n    return this.tasks.find((task) => {\n      return task.id === id;\n    });\n  }\n\n  get_bar(id) {\n    return this.bars.find((bar) => {\n      return bar.task.id === id;\n    });\n  }\n\n  show_backdrop({ x, width, bar }) {\n    if (!this.backdrop) {\n      this.backdrop = new Backdrop(this.$drag_backdrop);\n    }\n\n    const { new_start_date, new_end_date } = bar.compute_start_end_date();\n    const date_start = date_utils.format(new_start_date, 'MM-DD');\n    const date_end = date_utils.format(new_end_date, 'MM-DD');\n    this.backdrop.showAt({ x, width, range: [date_start, date_end] });\n  }\n\n  hide_backdrop() {\n    this.backdrop && this.backdrop.hide();\n  };\n\n  show_popup(options) {\n    if (this.options.popup === false) return\n    if (!this.popup) {\n      this.popup = new Popup(\n        this,\n        this.$popup_wrapper,\n      );\n    }\n    this.popup.show(options);\n  }\n\n  hide_popup() {\n    this.popup && this.popup.hide();\n  }\n\n  trigger_event(event, args) {\n    if (this.options[\"on_\" + event]) {\n      this.options[\"on_\" + event].apply(null, args);\n    }\n  }\n\n  /**\n   * Gets the oldest starting date from the list of tasks\n   *\n   * @returns Date\n   * @memberof Gantt\n   */\n  get_oldest_starting_date() {\n    if (!this.tasks.length) return new Date()\n    return this.tasks\n      .map((task) => task._start)\n      .reduce((prev_date, cur_date) =>\n        (cur_date && cur_date <= prev_date) ? cur_date : prev_date,\n      );\n  }\n\n  /**\n   * Clear all elements from the parent svg element\n   *\n   * @memberof Gantt\n   */\n  clear() {\n    this.$svg.innerHTML = \"\";\n    this.$container_toolbar.innerHTML = \"\";\n    this.$header?.remove?.()\n    this.$today_overlay?.remove?.();\n    this.hide_popup();\n  }\n}\n\nGantt.VIEW_MODE = VIEW_MODE;\n\nfunction generate_id(task) {\n  return task.name + \"_\" + Math.random().toString(36).slice(2, 12);\n}\n"],"names":["YEAR","MONTH","DAY","HOUR","MINUTE","SECOND","MILLISECOND","SHORTENED","January","February","March","April","May","June","July","August","September","October","November","December","date_utils","parse_duration","duration","matches","exec","parseInt","scale","parse","date","date_separator","time_separator","Date","date_parts","time_parts","parts","split","map","val","vals","length","parseFloat","concat","to_string","with_time","TypeError","this","get_date_values","i","padStart","date_string","time_string","format","format_string","lang","month_name","Intl","DateTimeFormat","month","month_name_capitalized","charAt","toUpperCase","slice","values","format_map","YYYY","MM","DD","HH","mm","ss","M","D","h","m","s","SSS","Q","MMMM","MMM","str","formatted_values","Object","keys","sort","a","b","forEach","key","includes","replaceAll","push","value","diff","date_a","date_b","milliseconds","seconds","hours","minutes","days","months","years","endsWith","Math","floor","today","now","add","qty","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","getMilliseconds","start_of","scores","should_reset","_scale","clone","get_days_in_month","no_of_days","year","targetLength","padString","String","repeat","$","expr","con","document","querySelector","createSVG","tag","attrs","elem","createElementNS","attr","append_to","appendChild","innerHTML","setAttribute","animateSVG","svgElement","from","to","animatedSvgElement","dur","begin","animEl","attributeName","animateElement","calcMode","keyTimes","keySplines","cubic_bezier","getAnimationElement","event","createEvent","initEvent","eventName","dispatchEvent","name","ease","linear","on","element","selector","callback","delegate","bind","off","handler","removeEventListener","addEventListener","e","delegatedTarget","target","closest","call","parentNode","getAttribute","throttle","delay","noTrailing","debounceMode","timeoutID","lastExec","undefined","self","elapsed","Number","args","arguments","apply","clear","clearTimeout","setTimeout","Bar","constructor","gantt","task","set_defaults","prepare","draw","action_completed","prepare_values","prepare_helpers","empty","invalid","height","options","bar_height","image_size","compute_x","compute_y","compute_duration","corner_radius","bar_corner_radius","width","column_width","progress_width","progress","group","class","custom_class","important","id","bar_group","handle_group","SVGElement","prototype","getX","getY","getWidth","getHeight","getEndX","prepare_expected_progress_values","compute_expected_progress","expected_progress_width","expected_progress","update_bar_vertical","offset","Array","children","el","y","thumbnail","$thumbnail","arr","$handle","$handle_progress","get_progress_polygon_points","draw_bar","draw_progress_bar","show_expected_progress","draw_expected_progress_bar","draw_label","draw_resize_handles","draw_thumbnail","$bar","x","rx","ry","classList","$expected_bar_progress","$bar_progress","x_coord","requestAnimationFrame","update_label_position","defs","clipPath","href","readonly","bar","handle_width","gw","drag_bar_progress","points","join","bar_progress","icon_width","icon_height","setup_click_event","timeout","trigger_event","screenX","screenY","scrollLeft","$container_main","show_popup","offsetX","hide_popup","bar_being_dragged","subtitle","_start","language","_end","target_element","title","update_bar_position","drag_limit_child","dependencies","dep","get_bar","reduce","_","curr","update_attr","$date_highlight","style","left","update_handle_position","date_changed","update_expected_progressbar_position","update_progressbar_position","update_arrow_position","update_label_position_on_horizontal_scroll","sx","container","label","img","img_mask","barWidthLimit","newLabelX","newImgX","imgWidth","getBBox","labelEndX","viewportCentral","clientWidth","contains","changed","new_start_date","new_end_date","compute_start_end_date","progress_changed","new_progress","compute_progress","set_action_completed","x_in_units","gantt_start","step","width_in_units","task_start","view_is","padding","_index","get_snap_position","dx","rem","position","odx","isNaN","x_offset_label_img","labelWidth","barWidth","remove","handle","arrows","arrow","update","Arrow","from_task","to_task","calculate_path","drawInner","rowHeight","taskHeight","arrowCurve","arrow_curve","arrowIndent","taskFrom","taskTo","taskFromX2","taskFromY1","taskToX1","taskToEndPosition","taskFromEndPosition","path","trianglePoints","svgPath","d","fill","svgPolygon","Popup","parent","custom_html","popup","make","hide","pointer","show","Error","html","position_meta","HTMLElement","getBoundingClientRect","parentWidth","parentHeight","clientHeight","ganttOptions","ganttWidth","$container","ganttHeight","pos_x","pos_y","header_height","console","log","top","opacity","Backdrop","drag_mask","date_range","showAt","range","htmlHold","display","VIEW_MODE","QUARTER_DAY","HALF_DAY","WEEK","QUARTER_YEAR","VIEW_MODE_PADDING","TICK_LINE","BOTH","HORIZONTAL","VERTICAL","DEFAULT_OPTIONS","view_modes","view_mode","date_format","popup_trigger","drag_sync_child","highlight_weekend","scroll_to","lines","auto_move_label","today_button","view_mode_select","Gantt","wrapper","tasks","setup_wrapper","setup_options","setup_tasks","change_view_mode","bind_events","svg_element","wrapper_element","$svg","createElement","$container_header","parentElement","$container_toolbar","$popup_wrapper","$drag_backdrop","view_mode_padding","entries","format_task","setup_dependencies","dependency_map","t","start","end","tmpDuration","every","deps","trim","filter","random","toString","generate_id","refresh","original","get_task","start_date","end_date","index","tid","findIndex","item","row_height","remove_bar","bars","layers","removeChild","splice","rows","grid","lastChild","make_arrows","map_arrows_on_bars","grid_height","$today_overlay","insert","insert_task","date_limit","gantt_end","refresh_view_date","insert_bar","target_bar","insertBefore","row_width","dates","insert_y","$grid_el","x1","y1","x2","y2","setup_dates","render","mode","update_view_scale","setup_gantt_dates","setup_date_values","get_gantt_dates","viewKey","padding_start","padding_end","setHours","setMonth","cur_date","bind_grid_scroll","bind_grid_click","bind_bar_create","bind_bar_events","setup_layers","make_grid","make_dates","make_bars","make_grid_extras","set_width","set_scroll_position","layer","make_grid_background","make_grid_rows","make_grid_header","make_grid_toolbar","make_grid_highlights","make_grid_ticks","grid_width","scroll_height","overflow","rows_layer","row_y","$header","$upper_header","$lower_header","$line_header","$side_header","$select","$el","selected","disabled","textContent","modes","$option","$today_button","onclick","scroll_today","max","tick_x","$lines_layer","tick_class","get_thick_mode","thick","highlightWeekends","setDate","getDay","computeGridHighlightDimensions","todayDate","startDate","endDate","setFullYear","create_el","classes","$today","getElementById","upper_texts_x","get_dates_to_draw","$lower_text","lower_x","lower_y","formatted_date","innerText","lower_text","upper_text","upper_x","upper_y","tick_line","base_pos_x","last_date","get_date_info","last_date_info","date_text","Hour_lower","Day_lower","Week_lower","Month_lower","Year_lower","Hour_upper","Day_upper","Week_upper","Month_upper","Year_upper","base_pos","base_tick","line","x_pos","task_id","dependency","Boolean","cur_width","actual_width","parent_element","hours_before_first_task","space","distance","scroll_pos","scrollTo","behavior","shiftKey","deltaX","scrollMove","deltaY","newScrollX","preventDefault","unselect_all","x_on_start","y_on_start","matched_task","is_creating","holder","radius","offsetY","get_snap_coord","abs","start_x","end_x","date_start","get_snap_date","date_end","update_task","assign","update_bar","old_bar","target_postion","is_dragging","x_on_scroll_start","is_resizing_left","is_resizing_right","parent_bar_id","bar_wrapper","ids","get_all_dependent_tasks","ox","oy","owidth","finaldx","show_backdrop","hide_backdrop","elements","querySelectorAll","localBars","currentTarget","daysSinceStart","format_str","currentUpper","find","$current","bind_bar_progress","is_resizing","min_dx","max_dx","out","to_process","acc","isArray","some","backdrop","get_oldest_starting_date","prev_date"],"mappings":"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"}